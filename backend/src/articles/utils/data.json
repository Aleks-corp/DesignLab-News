[
  {
    "_id": "684b27641780b10b64fed7b9",
    "title": "How to “Break” Your Design System Rules Without Creating Chaos",
    "content": "<img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kVkdLxJRof6CuJs1X0IUCA.png\"><p><a href=\"https://www.browserlondon.com/blog/2024/04/02/transforming-your-legacy-design-system-for-an-unparalleled-user-experience/\">Дизайнерські системи</a> слугують всеосяжним правилом для <a href=\"https://www.browserlondon.com/blog/2024/05/08/branding-and-user-interface-design/\">дизайну користувацького інтерфейсу</a>, набагато більше, ніж просто гарна колекція пікселів, які повинні бути в правильному місці в правильний час, вони забезпечують спільну мову, багаторазові компоненти та чіткі вказівки, які гарантують, що такі команди, як наша, можуть ефективно співпрацювати для надання зручного користувацького досвіду.</p><p>Однак…</p><p>Мета дизайнерської системи не в тому, щоб нав'язувати <em>жорстку</em> послідовність. Зовсім навпаки, коли система інтуїтивна та складова, послідовність стає природним наслідком прийняття, а не тим, що потрібно контролювати. Сказавши це — Що потрібно контролювати, це <em>прийняття користувачами дизайну, що виникає з&nbsp;системи.</em></p><p>Як <a href=\"https://bradfrost.com/blog/post/2024-design-system-vibes/\">зауважив Бред Фрост у своїх настроях дизайнерської системи 2024 року</a>, найефективніші організації перейшли від \"патрулів шаблонів\" до \"емпатичних шерпів\", які розглядають дизайнерські системи як \"критичну інфраструктуру UI\", а не жорсткі книги правил. Цей зсув визнає, що сучасні дизайнерські системи є <a href=\"https://bigmedium.com/ideas/design-system-governance-bugs-design-discrepancies.html\">живими продуктами, які потребують систематичного управління</a>, а не просто забезпечення дотримання.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*SwOzSFQ428rvBi-5.png\"><figcaption>Огляд Фроста про те, як 2024 рік розгорнувся у сфері дизайнерських&nbsp;систем</figcaption><h3>Коли порушувати&nbsp;правила</h3><p>Щоб ефективно порушувати дизайнерські вказівки, ви повинні спочатку ретельно їх зрозуміти — не лише те, що вони диктують, але й чому вони існують. Розуміння причин правил допомагає вирішити, коли і як їх порушувати.</p><p>Дизайнерські системи не є універсальними рішеннями, і жорстке дотримання може, безумовно, задушити креативність (кошмар для дизайнера). Натомість ми повинні діяти в межах, щоб створювати ефективні дизайнерські рішення, не відчужуючи користувачів або завдання, які вони мають виконати. Звичайно, ключова проблема виникає, коли дизайнерській системі бракує компонента, необхідного для нового випадку використання, що вимагає від дизайнерів (як ми) порушувати встановлені вказівки, співпрацюючи з ширшою дизайнерською командою для підтримки послідовності.</p><p>Ось швидка точка відліку: <strong>Виклик контекстуальної навігації</strong>. Ця система дизайну, багата на дані, включала стандартну вертикальну навігацію, вона представляла масив функцій у своєму наборі продуктів. Під час використання системи дизайну для розробки інформаційної панелі команда виявила, що ця навігація займає занадто багато вертикального простору і не враховує поведінку аналітиків з високою частотою перемикання контексту. Замість того, щоб насильно впроваджувати існуючий шаблон, вони співпрацювали з операторами системи, щоб створити складну вертикальну навігацію, яка зберігала візуальну мову, вирішуючи конкретний випадок використання. Після тестування цей варіант було додано до системи — демонструючи, як обдумане порушення правил зміцнює всю&nbsp;систему.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*M9S5-WY501q-HjZY-XF-Dg.gif\"><p>Аналогічно, видалення Google знака “+” для нових вкладок у Chrome після дослідження користувачів представляє обдуману еволюцію широко прийнятого шаблону для покращення користувацького досвіду.</p><p>Найуспішніші дизайнерські системи включають процеси для власної еволюції. Коли правила обдумано порушуються, це може призвести до інновацій, які покращують всю систему, створюючи цикли вдосконалення, які зберігають системи актуальними.</p><p>Ефективне управління стає тут вирішальним, і з цим на увазі варто згадати Маркуса Кунга, який <a href=\"https://www.marcuskung.com/writing/5-pillars-of-effective-design-system-governance\">визначає п'ять основних стовпів</a>: Чітке лідерство, Прозорі політики, Жива документація, Якісні процеси та Залучення спільноти. На думку Маркуса, ці рамки забезпечують, що порушення правил стає систематичною еволюцією, а не хаотичним відхиленням. Це, безумовно, те, з чим я схильний погоджуватися&nbsp;з&nbsp;ним!</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*qP0qJ3t255x85Uty.png\"><figcaption>Філософія 5 стовпів Маркуса</figcaption><p><a href=\"https://www.toptal.com/designers/ui/design-system-model\">Провідні організації, такі як Zalando</a>, демонструють систематичне управління через структуровані моделі внесків — приймаючи пропозиції від \"легких\" змін до \"важких\" компонентів через прозорі процеси, які підтримують цілісність системи, дозволяючи інновації.</p><p>Організації, такі як <a href=\"https://www.supernova.io/blog/scaling-your-design-system-with-a-contribution-model\">Pajamas GitLab</a> та <a href=\"https://designnotes.blog.gov.uk/2023/05/31/iterating-the-gov-uk-design-system-contribution-model\">Дизайнерська система GOV.UK</a>, показують, як моделі внесків дозволяють обдуману еволюцію, створюючи структуровані шляхи для команд, щоб пропонувати, тестувати та інтегрувати покращення, зберігаючи при цьому узгодженість.</p><p>Як <a href=\"https://bigmedium.com/ideas/design-system-governance-bugs-design-discrepancies.html\">дослідження від Big Medium</a> показує: <strong>коли сумніваєтеся, поговоріть.</strong> Команди дизайнерських систем повинні бути \"проактивними та надзвичайно чіткими щодо того, як зв'язатися\", створюючи культури співпраці, а не дотримання.</p><h3>Мистецтво тонкого&nbsp;дизайну</h3><p>Що дійсно важливо в дизайнерських системах, так це не жорстке дотримання правил, а створення досвіду, де кожна деталь природно сприяє цілому. Як зазначає наш дизайнер <a href=\"https://www.behance.net/iainhector\">Іейн Гектор</a>: \"Для мене це завжди про спілкування і спілкування візуальним способом, який майже не помічається. Для мене це те, що мені подобається в дизайні. Це свого роду тонкі речі, які дизайнер бачить, а інші люди навіть не думають&nbsp;про&nbsp;це.\"</p><p>Мета полягає в тому, щоб створити дизайн, де окремі елементи працюють в гармонії, не привертаючи до себе уваги: \"Кожна деталь повинна якось залишатися непоміченою, але коли ви зберете всі ці деталі разом, це сума їх&nbsp;частин.\"</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*0ObwIUKnJTwonqei.png\"><figcaption>Гектор включає примітки щодо використання у свої бібліотеки компонентів</figcaption><p>Ця філософія узгоджується з <a href=\"https://www.softkraft.co/enterprise-design-systems/\">найкращими практиками корпоративних дизайнерських систем</a>, які підкреслюють вбудовування управління безпосередньо в саму систему. Найефективніші системи включають чіткі протоколи використання, процедури обслуговування, процеси звітування про проблеми та вказівки щодо внесків, які роблять обдуману еволюцію природною, а не бюрократичною.</p><h3>Мій висновок</h3><p>Порушення правил дизайнерської системи не повинно відбуватися довільно, а як частина обдуманої еволюції самої системи. Коли правила порушуються з метою та розумінням, це може призвести до значущих інновацій, які насправді зміцнюють загальну&nbsp;систему.</p><p>Найуспішніші системи сприяють безперешкодним взаємодіям, де сам дизайн зникає, дозволяючи користувачам повністю зосередитися на своїх завданнях, а не на інтерфейсі. Цей баланс між послідовністю та інноваціями робить дизайнерські системи як потужними, так і адаптованими до змінних&nbsp;потреб.</p><p>Сучасні організації відкривають для себе, що <a href=\"https://www.uxpin.com/studio/blog/design-system-governance/\">зрілість дизайнерської системи</a> не полягає в досконалому дотриманні правил — це створення спільних рамок, де обдумана еволюція відбувається природно. Коли команди розуміють не лише \"що\", але й \"чому\" за дизайнерськими рішеннями, вони можуть робити обґрунтовані вибори щодо того, коли гнучкість краще служить користувачам, ніж жорстка послідовність.</p><p>Оскільки галузь продовжує розвиватися, найуспішнішими дизайнерськими системами будуть ті, які приймають <a href=\"https://www.uxpin.com/studio/blog/design-system-contribution-model/\">структуровані моделі внесків</a> та процеси управління, які дозволяють командам значущо порушувати правила, документувати свої уроки та зміцнювати систему для всіх, хто на неї&nbsp;покладається.</p><hr>",
    "excerpt": "Дизайнерські системи слугують всеосяжним правилом для дизайну користувацького інтерфейсу, набагато більше, ніж просто гарна колекція пікселів, які повинні бути в правильному місці в правильний час, вони забезпечують спільну мову, багаторазові компоненти та чіткі вказівки, які гарантують, що такі команди, як наша, можуть ефективно співпрацювати для надання зручного користувацького досвіду.",
    "imageUrl": "https://cdn-images-1.medium.com/max/1024/1*kVkdLxJRof6CuJs1X0IUCA.png",
    "sourceUrl": "https://blog.prototypr.io/how-to-break-your-design-system-rules-without-creating-chaos-4b94c50bbefe",
    "categories": ["design-systems", "ux", "ui", "design-process"],
    "author": "Browser",
    "source": "prototypr",
    "publishedAt": "2025-06-11T11:53:17.000Z",
    "status": "underreview",
    "createdAt": "2025-06-12T19:15:48.684Z",
    "updatedAt": "2025-06-12T19:17:03.929Z",
    "__v": 0,
    "original": {
      "title": "How to “Break” Your Design System Rules Without Creating Chaos",
      "content": "<img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kVkdLxJRof6CuJs1X0IUCA.png\"><p><a href=\"https://www.browserlondon.com/blog/2024/04/02/transforming-your-legacy-design-system-for-an-unparalleled-user-experience/\">Design systems</a> serve as the comprehensive rulebook for <a href=\"https://www.browserlondon.com/blog/2024/05/08/branding-and-user-interface-design/\">user interface design</a>, far more than just a pretty collection of pixels that need to be in the right place at the right time, they provide a shared language, reusable components, and clear guidelines that ensure teams like ours can collaborate efficiently to deliver a user friendly experience.</p><p>However…</p><p>The goal of a design system isn’t to enforce <em>rigid</em> consistency. Far from it, when the system is intuitive and composable, consistency becomes a natural byproduct of adoption, not something that must be policed. Having said that — What is to be policed is the <em>users adoption of the design that emerges from the&nbsp;system.</em></p><p>As<a href=\"https://bradfrost.com/blog/post/2024-design-system-vibes/\"> Brad Frost observed in his 2024 design system vibes</a>, the most effective organisations have moved away from “Pattern Police” toward “Empathic Sherpas” who treat design systems as “critical UI infrastructure” rather than rigid rule books. This shift recognises that modern design systems are<a href=\"https://bigmedium.com/ideas/design-system-governance-bugs-design-discrepancies.html\"> living products that require systematic governance</a>, not just compliance enforcement.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*SwOzSFQ428rvBi-5.png\"><figcaption>Frost’s overview of how 2024 unfolded in the design system&nbsp;sphere</figcaption><h3>When to Break the&nbsp;Rules</h3><p>To break design guidelines effectively, you must first understand them thoroughly — not just what they dictate, but why they exist. Understanding the reasoning behind rules helps you decide when and how to break&nbsp;them.</p><p>Design systems aren’t one-size-fits-all solutions, and rigid adherence can certainly stifle creativity (the designer’s nightmare). Instead, we must operate within the boundaries to create effective design solutions without alienating users, or the tasks they set out to complete. Of course, the key challenge arises when a design system lacks a component needed for a new use case, requiring designers (like us) to break established guidelines whilst collaborating with the wider design team to maintain consistency.</p><p>Here’s a quick reference point: <strong>The Contextual Navigation Challenge</strong>. This data heavy design system included a standard vertical navigation, it presented an array of functions across their suite of products. When using the design system to develop a dashboard, the team discovered this navigation consumed far too much vertical space and didn’t accommodate analysts’ high-frequency, context-switching behaviour. Rather than force-fit the existing pattern, they collaborated with system operators to create a collapsible vertical navigation that preserved the visual language whilst solving the specific use case. After testing, this variant was added to the system — demonstrating how thoughtful rule-breaking strengthens the entire&nbsp;system.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*M9S5-WY501q-HjZY-XF-Dg.gif\"><p>Similarly, Google’s removal of the “+” sign for new tabs in Chrome after user research represents thoughtful evolution of a widely adopted pattern to improve user experience.</p><p>The most successful design systems incorporate processes for their own evolution. When thoughtfully broken, rules can lead to innovations that improve the entire system, creating refinement cycles that keep systems relevant.</p><p>Effective governance becomes crucial here, and with in mind it’s worth mentioning Marcus Kung’s who <a href=\"https://www.marcuskung.com/writing/5-pillars-of-effective-design-system-governance\">identifies five core pillars</a>: Clear leadership, Transparent policies, Living documentation, Quality processes, and Community engagement. In Marcus’ opinion these frameworks ensure rule-breaking becomes systematic evolution rather than chaotic deviation. That’s certainly something I tend to agree with him&nbsp;on!</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*qP0qJ3t255x85Uty.png\"><figcaption>Marcus’ 5 pillars philosophy</figcaption><p><a href=\"https://www.toptal.com/designers/ui/design-system-model\">Leading organisations like Zalando</a> demonstrate systematic handling through structured contribution models — accepting proposals from “light” tweaks to “heavy” components through transparent processes that maintain system integrity whilst enabling innovation.</p><p>Organisations like <a href=\"https://www.supernova.io/blog/scaling-your-design-system-with-a-contribution-model\">GitLab’s Pajamas</a> and the <a href=\"https://designnotes.blog.gov.uk/2023/05/31/iterating-the-gov-uk-design-system-contribution-model\">GOV.UK Design System</a> show how contribution models enable thoughtful evolution by creating structured pathways for teams to propose, test, and integrate improvements whilst maintaining coherence.</p><p>As <a href=\"https://bigmedium.com/ideas/design-system-governance-bugs-design-discrepancies.html\">research from Big Medium</a> reveals: <strong>when in doubt, have a conversation.</strong> Design system teams must be “proactive and obnoxiously clear about how to connect,” creating cultures of collaboration rather than compliance.</p><h3>The Art of Subtle&nbsp;Design</h3><p>What truly matters in design systems is not rigid adherence to rules, but creating experiences where every detail contributes naturally to the whole. As our designer <a href=\"https://www.behance.net/iainhector\">Iain Hector</a> notes: “For me, it’s always about communication and communicating in a visual way that kind of almost goes unnoticed. For me, that’s what I like about design. It’s sort of the subtle things that the designer sees that other people just don’t even think&nbsp;about.”</p><p>The goal is to create a design where the individual elements work in harmony without calling attention to themselves: “Each detail should kind of go unnoticed, but when you put all those details together, it’s the sum of its&nbsp;parts.”</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*0ObwIUKnJTwonqei.png\"><figcaption>Hector includes usage notes across his component libraries</figcaption><p>This philosophy aligns with<a href=\"https://www.softkraft.co/enterprise-design-systems/\"> enterprise design system best practices</a> that emphasise building governance directly into the system itself. The most effective systems include clear usage protocols, maintenance procedures, issue reporting processes, and contribution guidelines that make thoughtful evolution feel natural rather than bureaucratic.</p><h3>My Conclusion</h3><p>Breaking design system rules shouldn’t be done arbitrarily, but rather as part of a thoughtful evolution of the system itself. When rules are broken with purpose and understanding, they can lead to meaningful innovations that actually strengthen the overall&nbsp;system.</p><p>The most successful systems facilitate seamless interactions where the design itself disappears, allowing users to focus entirely on their tasks rather than the interface. This balance between consistency and innovation is what makes design systems both powerful and adaptable to changing&nbsp;needs.</p><p>Modern organisations are discovering that <a href=\"https://www.uxpin.com/studio/blog/design-system-governance/\">design system maturity</a> isn’t about perfect rule compliance — it’s about creating collaborative frameworks where thoughtful evolution happens naturally. When teams understand not just the “what” but the “why” behind design decisions, they can make informed choices about when flexibility serves users better than rigid consistency.</p><p>As the field continues to mature, the most successful design systems will be those that embrace<a href=\"https://www.uxpin.com/studio/blog/design-system-contribution-model/\"> structured contribution models</a> and governance processes that enable teams to break rules meaningfully, document their learnings, and strengthen the system for everyone who depends on&nbsp;it.</p><hr>",
      "_id": "684b27af1780b10b64fed7c3"
    }
  },
  {
    "_id": "684b27641780b10b64fed7bc",
    "title": "Станьте UX/UI дизайнером у Google!",
    "content": "<h3>Станьте UX/UI дизайнером у&nbsp;Google!</h3><h4>У розмові з менеджером UX у Google — Сахілом&nbsp;Пандіта</h4><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*VPzM3km-Ti6cz-6pfgt0JQ.png\"><p>У світі, де дизайн постійно змінюється, як залишатися актуальним? Зустрічайте <strong>Сахіла Пандіта</strong>, відомого лідера дизайну в <a href=\"https://medium.com/u/be36e94a7e47\">Google</a>, чия подорож є прикладом адаптації, інновацій та пріоритету людських зв'язків у швидкозмінному середовищі. Його історія не лише про професійний підйом; це план для дизайнерів, які орієнтуються на&nbsp;майбутнє.</p><h3>Глибоке занурення в AI: Що далі для&nbsp;дизайну?</h3><p>Майже трирічний термін роботи Сахіла в <strong>Google</strong> побачив його перехід від лідера дизайну до ключової <strong>ролі лідера людей</strong>. Його команда не просто спостерігає за майбутнім; вони його&nbsp;будують.</p><blockquote>“Поки люди розбираються, як використовувати AI у своїй повсякденній роботі, ми створюємо інструменти, які допомагають людям будувати AI&nbsp;моделі”</blockquote><p>Це не просто про поступові зміни; це про розширення меж можливого за допомогою найсучасніших AI-інструментів. Пропрацювавши з AI близько шести років, Сахіл розуміє вимоги цього швидко змінюваного поля. Його команда розробила <strong>8 до 10 інструментів</strong> з нуля за короткий проміжок часу, створюючи екосистему, яка перетворює необроблені дані в практичні інсайти для бізнесу.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*UbD2vyjBdyrqbNNz\"><figcaption>Сахіл часто робить внесок у спільноти та&nbsp;навчання</figcaption><p>Поза технічними дивами, він також глибоко занурився в <strong>управління людьми та лідерство</strong>, розглядаючи це як природний розвиток свого великого досвіду наставництва дизайнерів.</p><h3>Нетрадиційний шлях до Google: Пріоритет “Великих&nbsp;людей”</h3><h4><strong>Чи було потрапляння в Google запланованою амбіцією?</strong></h4><p>Сахіл зізнається, що хоча це було тихим прагненням з моменту запуску <strong>Material Design</strong> у 2014 році, це не було його єдиним&nbsp;фокусом.</p><p>Замість цього, кар'єрні рішення Сахіла завжди керувалися потужним принципом: <strong>працювати з “великими людьми.”</strong> Ця філософія привела його до дизайнерських гігантів, таких як Goibbo і Gojek, останній з яких він хвалить за його “дивовижну дизайнерську культуру.” Його перехід до Google не був жорсткою стратегічною грою, а органічним результатом зв'язку з колишнім менеджером, чия візія та підтримка глибоко резонували.</p><p>“Для мене, це було просто зрозуміти, де є дійсно великі люди, і знайти правильну можливість працювати з ними”, підкреслює Сахіл. Це відданість автентичним зв'язкам була його&nbsp;компасом.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*_qHLy2kGnavXU9NM\"><h3>Переосмислення нетворкінгу: Чому якість важливіша за&nbsp;кількість</h3><p>У епоху, одержиму кількістю підписників, Сахіл пропонує освіжаючий погляд на побудову професійної мережі. Походячи з нетрадиційного середовища, він знайшов свій шлях, <strong>додаючи цінність через свій YouTube-канал</strong>, що, в свою чергу, спонукало інших зв'язатися з&nbsp;ним.</p><p>“Ви не завжди знайдете людей, які з вами співпадають, і це нормально”. Він підтримує фокусування на кількох обраних особах, яких ви дійсно захоплюєтеся, навіть колегах, щоб будувати значущі стосунки. Цей органічний підхід, де зв'язки ростуть з тісної співпраці, природно веде до ширшого залучення в галузі. Висновок? Велика онлайн-мережа часто не перетворюється на реальні можливості. <strong>Фокусуйтеся на глибині, а не лише&nbsp;ширині.</strong></p><h3>Поза тегом “Дизайнер”: Плинна ідентичність у&nbsp;технологіях</h3><p>Відкриття Пуніта раннього технічного YouTube-каналу Сахіла підкреслює важливий момент: еволюцію дизайнера. Сахіл визнає свою постійну пристрасть до обміну знаннями, нитку, що з'єднує його минулі технічні відео з його дизайнерським&nbsp;контентом.</p><p>Для Сахіла дизайн виходить за межі простих інструментів; це про <strong>“</strong>розширення меж для того, де знаходиться людство сьогодні.<strong>”</strong> Він відкрито приймає плинність своєї кар'єри, визнаючи, що в далекому майбутньому він може не бути в дизайні.</p><p>Ця перспектива важлива: не дозволяйте посаді визначати весь ваш потенціал. “Це може вас стримувати,” попереджає він, припускаючи, що навички дизайнера можуть безперешкодно переходити в такі сфери, як <strong>управління продуктами</strong> або навіть у зовсім нові галузі. Ключ у тому, щоб постійно розвиватися, навчатися і&nbsp;будувати.</p><h3>Лідерство в Google: Унікальне поєднання автономії та&nbsp;коучингу</h3><p>Увійшовши в управлінську роль, Сахіл проливає світло на унікальне лідерське середовище в <strong>Google</strong>. З тисячами дизайнерів, культура дизайну Google надзвичайно різноманітна, що означає, що жодна з команд не працює однаково.</p><p>Його власна команда, наприклад, починалася як невеликий “стартап у Google.” Сахіл визначає своє лідерство як <strong>“модель служіння-лідерства,”</strong> де він наставляє свою команду, надаючи їм значну автономію. Цей підхід узгоджується з основними цінностями Google, надаючи можливість особам ідентифікувати та вирішувати критичні проблеми. “Це про те, щоб зрозуміти, які проблеми варто вирішувати,” пояснює він. Зрештою, роль Сахіла полягає в тому, щоб дозволити своїй команді керувати напрямком компанії через їхню проникливу та значущу роботу.</p><p>Сподіваюся, вам сподобалася ця коротка розмова з Сахілом Пандіта, менеджером UX у Google, який приділив мені свій час для цієї розмови.</p><h4>Ви також можете переглянути повну розмову та подкаст&nbsp;нижче:</h4><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FUYbnGBKrC84%3Ffeature%3Doembed&amp;display_name=YouTube&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DUYbnGBKrC84&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FUYbnGBKrC84%2Fhqdefault.jpg&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"854\" height=\"480\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/6197eceb0461890c445a8b34204e3a82/href\">https://medium.com/media/6197eceb0461890c445a8b34204e3a82/href</a></iframe><hr>",
    "excerpt": "У світі, де дизайн постійно змінюється, як залишатися актуальним? Зустрічайте Сахіла Пандіта, відомого лідера дизайну в Google, чия подорож є прикладом адаптації, інновацій та пріоритету людських зв'язків у швидкозмінному середовищі. Його історія не лише про професійний підйом; це план для дизайнерів, які орієнтуються на майбутнє.",
    "imageUrl": "https://cdn-images-1.medium.com/max/1024/1*VPzM3km-Ti6cz-6pfgt0JQ.png",
    "sourceUrl": "https://blog.prototypr.io/become-a-ux-ui-designer-at-google-b6b315d0a32e",
    "categories": ["ux", "ui-design", "careers", "ux-design", "google"],
    "author": "Punit Chawla",
    "source": "prototypr",
    "publishedAt": "2025-06-06T13:25:49.000Z",
    "status": "underreview",
    "createdAt": "2025-06-12T19:15:48.753Z",
    "updatedAt": "2025-06-12T19:17:39.800Z",
    "__v": 0,
    "original": {
      "title": "Become A UX/UI Designer at Google!",
      "content": "<h3>Become a UX/UI Designer at&nbsp;Google!</h3><h4>In conversation with UX Manager @ Google — Sahil&nbsp;Pandita</h4><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*VPzM3km-Ti6cz-6pfgt0JQ.png\"><p>In a world where design is in constant flux, how do you stay relevant? Meet <strong>Sahil Pandita</strong>, a prominent design leader at <a href=\"https://medium.com/u/be36e94a7e47\">Google</a>, whose journey exemplifies adapting, innovating, and prioritizing human connection in a rapidly changing landscape. His story isn’t just about professional ascent; it’s a blueprint for designers navigating the&nbsp;future.</p><h3>Deep Dive into AI: What’s Next for&nbsp;Design?</h3><p>Sahil’s nearly three-year tenure at <strong>Google</strong> has seen him transition from a design lead to a pivotal <strong>people leadership role</strong>. His team isn’t just watching the future unfold; they’re building&nbsp;it.</p><blockquote>“While people are figuring out how to use AI in their day-to-day jobs, we’re building tools that help people build AI&nbsp;models”</blockquote><p>This isn’t just about incremental change; it’s about pushing the boundaries of what’s possible with state-of-the-art AI-native tools. Having worked with AI for about six years, Sahil understands the demands of this rapidly evolving field. His team has delivered <strong>8 to 10 tools </strong>from the ground up in a short span, creating an ecosystem that transforms raw data into actionable insights for businesses.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*UbD2vyjBdyrqbNNz\"><figcaption>Sahil often contributes to communities and&nbsp;learning</figcaption><p>Beyond the technical marvels, he has also deeply immersed himself in <strong>people management and leadership</strong>, viewing it as a natural progression of his extensive experience mentoring designers.</p><h3>The Unconventional Path to Google: Prioritizing “Great&nbsp;People”</h3><h4><strong>Was landing at Google a planned ambition?</strong></h4><p>Sahil admits that while a quiet aspiration since the launch of <strong>Material Design </strong>in 2014, it wasn’t his singular&nbsp;focus.</p><p>Instead, Sahil’s career decisions have been consistently guided by a powerful principle: <strong>working with “great people.”</strong> This philosophy led him to design powerhouses like Goibbo and Gojek, the latter of which he praises for its “amazing design culture.” His move to Google wasn’t a rigid strategic play but the organic outcome of connecting with a former manager whose vision and support resonated deeply.</p><p>“For me, it’s been just to figure out where some really great people are and find the right opportunity to work with the people”, Sahil emphasizes. This dedication to authentic connections has been his&nbsp;compass.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*_qHLy2kGnavXU9NM\"><h3>Networking Reimagined: Why Quality Trumps&nbsp;Quantity</h3><p>In an era obsessed with follower counts, Sahil offers a refreshing take on building a professional network. Coming from a non-traditional background, he found his stride by <strong>adding value through his YouTube channel</strong>, which in turn prompted others to connect with&nbsp;him.</p><p>“You’re not always going to find people who vibe with you, and it’s okay”. He champions focusing on a select few individuals you genuinely admire, even peers, to build meaningful relationships. This organic approach, where connections grow from close collaboration, naturally leads to broader industry engagement. The takeaway? A large online network often doesn’t translate into real-life opportunities. <strong>Focus on depth, not just&nbsp;breadth.</strong></p><h3>Beyond the “Designer” Tag: A Fluid Identity in&nbsp;Tech</h3><p>Punit’s discovery of Sahil’s early tech YouTube channel underscores a crucial point: the evolution of a designer. Sahil acknowledges his consistent passion for sharing knowledge, a thread connecting his past tech videos to his design&nbsp;content.</p><p>For Sahil, design transcends mere tools; it’s about <strong>“</strong>pushing the boundaries for where humanity is today.<strong>”</strong> He openly embraces the fluidity of his career, acknowledging that he might not be in design in the distant&nbsp;future.</p><p>This perspective is vital: don’t let a job title define your entire potential. “It can hold you back,” he warns, suggesting that a designer’s skills can seamlessly transition into areas like <strong>product management</strong> or even entirely new fields. The key is to keep evolving, keep learning, and keep building.</p><h3>Leading at Google: A Unique Blend of Autonomy and&nbsp;Coaching</h3><p>Stepping into a managerial role, Sahil sheds light on the distinctive leadership environment at <strong>Google</strong>. With thousands of designers, Google’s design culture is incredibly diverse, meaning no two teams operate identically.</p><p>His own team, for instance, started as a lean “startup within Google.” Sahil defines his leadership as a <strong>“servant-leadership model,”</strong> where he coaches his team while granting them significant autonomy. This approach aligns with Google’s core values, empowering individuals to identify and solve critical problems. “It’s about figuring out which problems are worth solving,” he explains. Ultimately, Sahil’s role is to enable his team to drive the company’s direction through their insightful and meaningful work.</p><p>I hope you liked this short conversation with Sahil Pandita, a UX manager at Google who gave me his time to have this conversation.</p><h4>You can also watch the full conversation and podcast&nbsp;below:</h4><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FUYbnGBKrC84%3Ffeature%3Doembed&amp;display_name=YouTube&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DUYbnGBKrC84&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FUYbnGBKrC84%2Fhqdefault.jpg&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"854\" height=\"480\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/6197eceb0461890c445a8b34204e3a82/href\">https://medium.com/media/6197eceb0461890c445a8b34204e3a82/href</a></iframe><hr>",
      "_id": "684b27d31780b10b64fed7c6"
    }
  },
  {
    "_id": "684b27641780b10b64fed7bf",
    "title": "Новий \"Expressive\" Material Design від Google мене захоплює! (і трохи турбує)",
    "content": "<p>Google щойно випустила одне з найбільших оновлень Material Design за останній тиждень на <a href=\"https://developer.android.com/events/show\">Android Show</a>, і це викликало у мене, як у UX-дизайнера, велике захоплення (і трохи занепокоєння) через все, що змінюється та розвивається.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*CrK7RteuZ-qwPNMx\"><figcaption>Попередній погляд на \"Expressive\" дизайни Material Design від Google</figcaption><p>Google нещодавно представила величезне оновлення своєї існуючої мови дизайну та системи, яку вони використовують для створення додатків і продуктів для мільярдів користувачів по всьому світу. Це оновлення включає безліч нових грайливих ефектів і стилів, але найголовніше - підкреслює зміну мислення компанії щодо користувацького досвіду.</p><p>Дозвольте мені <em>підсумувати</em> все для вас і також показати, як це принесе нову тенденцію дизайну в&nbsp;простір.</p><h3>Грайливі елементи, кнопки та&nbsp;контролі</h3><img alt=\"Грайливі елементи в Material Design Expressive\" src=\"https://cdn-images-1.medium.com/max/800/1*4-PDbJ1BtXQqsTbI_FBmpw.gif\"><p>Якщо ви думали, що попередній Material Design намагався зробити елементи виглядати весело, то цей точно піднімає планку. Від креативних завантажувачів, де форми трансформуються одна в одну, до хвилястих слайдерів всюди, це оновлення дасть багато варіантів і свободи дизайнерам для експериментів.</p><p><strong>Непослідовність - це ключ? — </strong>Це те, що я помітив під час Android Show! Як дизайнери, ми проповідуємо послідовність дизайну через вебсайти та додатки, однак Material Expressive порушує безліч&nbsp;правил.</p><ul><li>Тепер вкладки змінюють форму, щоб виділятися і показувати виділений стан.</li><li>Плаваючі меню тепер мають змінну ширину, щоб обіймати свій вміст замість однієї постійної ширини.</li><li>Розширена бібліотека форм для додавання задоволення до розділів або&nbsp;кнопок.</li><li>Використання змінних радіусів кутів (множина від радіус) в одному просторі на екрані для забезпечення вищих рівнів візуальної відмінності.</li><li>Різноманітні способи використання типографіки в заголовках для підвищення візуальної ієрархії та фокусування на \"жирних\"&nbsp;дизайнах.</li><li>І список продовжується.</li></ul><p>Окрім невеликих мікроелементів, ми можемо побачити це з цілими картками та списками в&nbsp;додатках:</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*InaIuA8OajqV1rxZtdG_Ag.gif\"><figcaption>Як картки та списки грають з непослідовністю</figcaption><h3>Заголовки дійсно стильні та порушують межі</h3><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*LoLHuuad2medfzx4\"><figcaption>Як заголовки грають різні \"ролі\" в різних додатках</figcaption><p>Ми бачили божевільні стилі для заголовків на вебсайтах і як дизайнери використовують заголовки, щоб відповідати темі і стати основним графічним елементом. Здається, Google намагається зробити те ж саме зі своєю власною системою&nbsp;дизайну.</p><p>Чудовий приклад цього - як вони розумно використовують змінну висоту та розмір шрифтів, щоб створити цей акуратний додаток-будильник.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*y_0mHL5PGPLT-Y8H\"><figcaption>Джерело: 9to5Google</figcaption><p>Деякі грайливі заголовки та текст мають багато сенсу, особливо в додатках, де заголовки відіграють певну роль. Однак є деякі <strong>катастрофічні використання</strong> великих і жирних заголовків та елементів. Ось чудовий приклад того, що Google показує як \"що не&nbsp;робити\":</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Hw__i8Dgt6IwC5aBmA-kBA.png\"><p>Ми ще не бачили багато від Google про анімовані заголовки та ефекти, тому ми просто почекаємо і&nbsp;подивимося.</p><h3>Зосередження на економії&nbsp;часу</h3><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*HRxsQk4kvBBRo14v_DjkIQ.png\"><p>У наведеному вище порівнянні ви можете помітити деякі значні зміни в мобільному додатку Gmail. Секції електронної пошти тепер є матеріальними картками, і вони перемістили меню дій у простір над клавіатурою. Окрім зміни позиціонування, жирна кнопка відправки та розширене меню дозволяють користувачам швидко діяти та прикріплювати елементи до своїх електронних листів. Згідно з дослідженнями, це може бути в 4 рази швидше в користувацькому&nbsp;шляху.</p><p>Різні відтінки кольорів для різних елементів роблять додаток більш грайливим, але також створюють хорошу візуальну ієрархію та контраст для важливих елементів.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*lm7BOIZ12A7fxU63\"><figcaption>M3 Expressive дизайн дозволив старшим користувачам так само швидко знаходити ключові інтерактивні елементи на екрані, як і молодшим користувачам у 10 протестованих додатках.</figcaption><p>Згідно з дослідженнями команди Google, користувачі як молодшої, так і старшої демографії можуть швидше знаходити ключові взаємодії та CTA і витрачати менше часу на дії. Простішими словами, буде менше тертя між користувачами та інтерфейсом.</p><h3>Анімації та взаємодії отримали&nbsp;оновлення</h3><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*bBcxLdrvt4ZYyL0bx9Uvog.gif\"><p>Google називає свою нову систему анімації та керівництва \"Система фізики руху\", і вона зосереджена на тому, щоб зробити мікровзаємодії та переходи більш плавними та виразними. Google також зосередилася на тому, щоб зробити анімації набагато легшими для розуміння користувачами.</p><p><strong>Деякі з основних відмінностей:</strong></p><ul><li>Анімація на основі пружини, що означає, що в кінці анімації буде відскок, щоб зробити її більш&nbsp;природною.</li><li>Нові схеми руху, які ви можете налаштувати у своїх&nbsp;дизайнах.</li><li>Просторові ефекти, де елементи будуть рухатися по екрану набагато більше з однієї позиції в&nbsp;іншу.</li><li>Вони також мають нову схему найменування з \"виразним\" як префіксом у назвах анімацій.</li><li>Стандартні анімації easing - це річ минулого!</li></ul><p>Чудовий приклад того, як все це працює разом, - це дуже природна та виразна анімація:</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*WPUAfsTrn8ZypCWFC99CFw.gif\"><figcaption>Нова анімація сповіщень Android</figcaption><p>У наведеному вище прикладі уважно зверніть увагу, як видалення сповіщення змушує всі інші сповіщення реагувати. Це схоже на те, як книга витягується з книжкової полиці, а сусідні книги також трохи висуваються. Це відчувається набагато природніше і <strong>слідує фактичним законам фізики</strong>, ніж у попередніх оновленнях&nbsp;android.</p><p>Ви можете використовувати ці нові анімації з їхнім керівництвом по анімації та списком налаштувань — <a href=\"https://m3.material.io/styles/motion/overview/how-it-works\">https://m3.material.io/styles/motion/overview/how-it-works</a></p><h3>Форми та морфінг&nbsp;скрізь</h3><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*VAvBA3idFilJrtJ6EZOp5A.gif\"><p>Google дійсно робить ставку на морфінг форм, щоб показати зміну стану на елементах дизайну. Чи це розширення карток, чи таймер, що рухається від початку до кінця, ці морфінг форми є скрізь.</p><ul><li>Пігулки збільшать радіус кутів, щоб виділитися серед інших&nbsp;опцій.</li><li>Багато SVG форм змінюються та морфуються, щоб показати збільшення або зменшення чогось. Це може бути таймер, завантажувачі та індикатори&nbsp;прогресу.</li><li>Картки перетворюються на кола, щоб показати вибраний стан і відрізнятися від інших&nbsp;карток.</li><li>Картки розширюються, коли вони потрапляють у фокус у слайдері або каруселі.</li><li>Круговий завантажувач змінюється з нудного старого кола на морфінг&nbsp;форми.</li></ul><p>Вони також представили нову бібліотеку форм для дизайнерів, щоб використовувати та досліджувати — <a href=\"https://m3.material.io/styles/shape/overview-principles\">https://m3.material.io/styles/shape/overview-principles</a>.</p><p>Ці форми - це більше, ніж артефакти. Google заохочує дизайнерів використовувати їх для профільних зображень, щоб додати характер, додавати їх до взаємодій користувачів та елементів, а також 2.5D форми, щоб додати&nbsp;глибини.</p><p>Однак Google також попередила дизайнерів використовувати форми обережно, щоб уникнути хаосу та плутанини.</p><h3>Чому я&nbsp;турбуюся?</h3><ol><li><strong>Надмірна грайливість: </strong>Оскільки Google зосереджується на грайливих і яскравих елементах, деякі дизайнери можуть переборщити з цим і порушити деякі загальні принципи UX, тим самим заважаючи користувацькому досвіду.</li><li><strong>Суб'єктивний дизайн: </strong>Дизайн в кінці кінців є суб'єктивним. Я бачив різні треди в Twitter навколо Android 16 і Material Expressive, де деякі люди знаходять деякі кольори та реалізації непривабливими.</li><li><strong>Проблеми зі старішим обладнанням: </strong>Стильні анімації виглядають чудово, але вимагають обчислювальної потужності та батареї. Через відсутність послідовності між різними пристроями, Material Expressive може не працювати на кожному пристрої і може не підходити для вебсайтів. Я можу бути повністю неправий, тому, будь ласка, виправте мене в коментарях.</li><li><strong>Розробники ненавидітимуть нас ще більше: </strong>Часто трапляється, що ми проектуємо анімацію або роботу, що вимагає багато взаємодій, яку можна скоротити або відхилити командами розробки або менеджерами продуктів. Одне, що є полегшенням, це те, що більшість розробників також наздоганяють матеріальний дизайн, тому переконати їх не буде великою&nbsp;проблемою.</li></ol><p>Що ви думаєте про Material Expressive? Дайте мені знати в коментарях, і ми можемо мати здорову дискусію! Також, <strong>натисніть кнопку \"плескати\"</strong>, щоб показати підтримку&nbsp;:)</p><hr>",
    "excerpt": "Google щойно випустила одне з найбільших оновлень Material Design за останній тиждень на Android Show, і це викликало у мене, як у UX-дизайнера, велике захоплення (і трохи занепокоєння) через все, що змінюється та розвивається.",
    "imageUrl": "https://cdn-images-1.medium.com/max/1024/0*CrK7RteuZ-qwPNMx",
    "sourceUrl": "https://blog.prototypr.io/googles-new-material-design-expressive-has-me-excited-worried-2cd295758804",
    "categories": ["ux-design", "ui-design", "material-design", "ux", "google"],
    "author": "Punit Chawla",
    "source": "prototypr",
    "publishedAt": "2025-05-25T10:09:48.000Z",
    "status": "underreview",
    "createdAt": "2025-06-12T19:15:48.798Z",
    "updatedAt": "2025-06-12T19:18:20.355Z",
    "__v": 0,
    "original": {
      "title": "Google’s New Material Design “Expressive” Has Me Excited! (& Worried)",
      "content": "<p>Google just released one of Material Design’s biggest updates in the past week at the <a href=\"https://developer.android.com/events/show\">Android Show</a> and it has gotten my UX designer self all excited (also a little worried) for everything that is changing and evolving.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*CrK7RteuZ-qwPNMx\"><figcaption>A sneak peak of Google’s Material Design “Expressive” designs</figcaption><p>Google Recently unveiled a massive upgrade to their existing design language and system that they use to build apps and products for billions of users worldwide. This update including so many new playful effects and styles, but most of all highlights the shift in the company’s thought process towards user experiences.</p><p>Let me <em>summarize</em> everything for you and also show how this will bring a new design trend to the&nbsp;space.</p><h3>Playful Elements, Buttons &amp;&nbsp;Controls</h3><img alt=\"Playful elements in Material Design Expressive\" src=\"https://cdn-images-1.medium.com/max/800/1*4-PDbJ1BtXQqsTbI_FBmpw.gif\"><p>If you thought the previous Material Design went out of its way to make elements look fun, this one takes it up a notch for sure. From creative loaders where shapes transform into one-another to wiggly sliders everywhere, this update will give a lot of options and freedom for designers to experiment.</p><p><strong>Inconsistency is key? — </strong>That is something that I noticed during the Android Show! As designers we preach consistent designs through websites and apps, however Material Expressive is breaking loads of&nbsp;rules.</p><ul><li>Tabs now change shape to stand out and show a highlighted state.</li><li>Floating menus now have variable widths to hug their contents instead of one consistent width.</li><li>An expanded shape library to add delight to sections or&nbsp;buttons.</li><li>Use of variable border radii (the plural of radius) in the same space on screen to provide higher levels of visual distinction.</li><li>A variety of ways typography is used in titles to enhance visual hierarchy and focus on “bold”&nbsp;designs.</li><li>And the list goes&nbsp;on.</li></ul><p>Apart from the little micro elements, we can see this with entire cards and lists in&nbsp;apps:</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*InaIuA8OajqV1rxZtdG_Ag.gif\"><figcaption>How Cards &amp; Lists Play With Inconsistency</figcaption><h3>Titles Are Truly Stylistic &amp; Break Boundaries</h3><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*LoLHuuad2medfzx4\"><figcaption>How Titles Play Different “Characters” in Different Apps</figcaption><p>We’ve seen crazy styles for titles in websites and how designers utilize titles to fit a theme and become a major graphical element. It seems Google is trying to do the exact same thing with its own design&nbsp;system.</p><p>A great example of this is how they are smartly using variable font height and size to create this neat alarm&nbsp;app.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*y_0mHL5PGPLT-Y8H\"><figcaption>Source: 9to5Google</figcaption><p>Some playful titles and text makes a lot of sense, especially with apps where titles play a certain role. However, there are some <strong>disastrous uses</strong> of large and bold titles and elements. Here is a great example of one that Google is showing as “what not to&nbsp;do”:</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Hw__i8Dgt6IwC5aBmA-kBA.png\"><p>We haven’t seen much from Google on animated titles and effects, so we’ll just wait and&nbsp;watch.</p><h3>Focusing On Saving&nbsp;Time</h3><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*HRxsQk4kvBBRo14v_DjkIQ.png\"><p>In the comparison above you can notice some major changes to the Gmail mobile app. The email sections are now material cards and they have shifted the action menu to the space above the keyboard. Apart from the change of positioning, the bold send button and expanded menu allow users to quickly take action and attach elements to your emails. According to research this can be 4 times faster in the user’s&nbsp;journey.</p><p>The different shades of colors for different elements make the app feel more playful, but it also creates a good visual hierarchy and contrast for the important elements.</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*lm7BOIZ12A7fxU63\"><figcaption>M3 Expressive design enabled older users to spot key interactive elements on the screen just as fast as younger users across 10 apps&nbsp;tested.</figcaption><p>According to the Google research team, users of both younger and older demographics are able to spot key interactions and CTAs faster and take lesser time to take action. In simpler words, there will be less friction between the users and the interface.</p><h3>Animations &amp; Interactions Got An&nbsp;Upgrade</h3><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*bBcxLdrvt4ZYyL0bx9Uvog.gif\"><p>Google is calling their new animation system and guidelines — “Motion Physics System” and it focuses on making the micro-interactions and transitions smoother and more expressive. Google has also focused on making the animations much easier for users to understand.</p><p><strong>Some of the major differences are:</strong></p><ul><li>A spring based animation which essentially means there will be a bounce at the end of the animation to make it feel more&nbsp;natural.</li><li>New motion schemes that you can customize your designs&nbsp;with.</li><li>Spatial effects where elements will move around on screen much more from one position to the&nbsp;other.</li><li>They also have a new naming scheme with “expressive” as a prefix in animation names.</li><li>Standard easing animations are a thing of the&nbsp;past!</li></ul><p>A great example of how all of this works together is this very natural and expressive animation:</p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*WPUAfsTrn8ZypCWFC99CFw.gif\"><figcaption>New Android Notification Animation</figcaption><p>In the above example, carefully notice how dismissing a notification makes all the other notifications have a reaction. This feels like a book being pulled out of a bookshelf and the neighboring books also slide out slightly. This feels much more natural and <strong>follows actual laws of physics</strong> than in previous android&nbsp;updates.</p><p>You can use these new animations with their animation guide and list of settings — <a href=\"https://m3.material.io/styles/motion/overview/how-it-works\">https://m3.material.io/styles/motion/overview/how-it-works</a></p><h3>Shapes &amp; Morphing Everywhere</h3><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*VAvBA3idFilJrtJ6EZOp5A.gif\"><p>Google is really banking on morphing shapes to show the change of state on design elements. Whether it is cards expanding or a timer moving from start to finish, these morphing shapes are everywhere.</p><ul><li>Pills will increase border radius to stand out from the other&nbsp;options.</li><li>A lot of SVG shapes changing and morphing to show increase or decrease in something. This could be a timer, loaders and progress&nbsp;bars.</li><li>Cards turning into circles to show the selected state and differentiate from other&nbsp;cards.</li><li>Cards expanding when they come into focus in a slider or carousel.</li><li>Circular loader changing from the boring old circle to morphing&nbsp;shapes.</li></ul><p>They have also introduced a new shape library for designers to use and explore — <a href=\"https://m3.material.io/styles/shape/overview-principles\">https://m3.material.io/styles/shape/overview-principles</a>.</p><p>These shapes are more than artifacts. Google is encouraging designers to use it for profile pictures to add character, to add them to user interactions and elements, and also 2.5D shapes to add&nbsp;depth.</p><p>However, Google has also warned designers to use shapes sparingly in order to avoid chaos and confusion.</p><h3>Why am I&nbsp;Worried?</h3><ol><li><strong>Over-playification: </strong>Since Google is focusing on playful and bright elements, some designers might go overboard with this and break some common UX principals, hence hindering the user’s experience.</li><li><strong>Subjective design: </strong>Design at the end of the day is subjective. I’ve seen various threads on twitter around Android 16 and Material Expressive where some people find some of the colors and implementations in-appealing.</li><li><strong>Issues with older hardware: </strong>Sleek animations look great but take processing power and battery. With a lack of consistency between various devices, Material Expressive might not work on every device and might not fit in with websites as such. I could be completely wrong, so please correct me in the comments.</li><li><strong>Developers will hate us even more: </strong>It often happens that we design animation or interaction intensive work which can be shortened out or dismissed by development teams or product managers. One things is a relief that most developers also catch up with material design, so convincing them won’t be much of a&nbsp;hassle.</li></ol><p>What do you think of Material Expressive? Let me know in the comments and we can have a healthy discussion! Also, <strong>hit the clap button</strong> to show support&nbsp;:)</p><hr>",
      "_id": "684b27fc1780b10b64fed7c9"
    }
  },
  {
    "_id": "684f2c03e823d9037acf44cf",
    "title": "Чому дизайнери застрягають у деталях і як це зупинити",
    "content": "<p>Ви намалювали п’ятдесят версій одного й того ж екрану — і все ще ненавидите кожну з них. Неохоче ви обираєте три, показуєте їх своєму менеджеру продукту і чуєте: <em>«Виглядає круто, але ідея не працює.»</em> Звучить знайомо?</p>\n<p>У цій статті я розгляну, чому дизайнери потрапляють у пастку деталей у невідповідний момент, досліджуючи як процесуальні пастки, так і психологічні причини, адже розуміння цих пасток є першим кроком до їх подолання. Я також поділюся тактиками, які я використовую, щоб вибратися з цієї пастки.</p>\nПричина №1 Ви боїтеся показувати грубу роботу\n<p>Ми, дизайнери, поклоняємося деталям. Нас вчать, що справжня майстерність дорівнює чіткій типографіці, ідеальним сіткам і піксельній точності. Тому, як тільки завдання з’являється, ми відкриваємо Figma і починаємо полірувати задовго до того, як це потрібно.</p>\n<p>Я пропускав етап ескізів більше разів, ніж хотів би зізнатися. Я казав собі, що це буде швидше, але завжди закінчував тим, що витрачав години на створення акуратного макета, коли накиданий ескіз міг би викликати п’ятихвилинну розмову з моїм менеджером продукту. Грубі ескізи здавалися «непрофесійними», тому я їх приховував.</p>\n<p>Ціна? Втрачений час, марна енергія — і, до третього перероблення, колеги тихо дивувалися, чи я взагалі розумію завдання.</p>\n<p>Справжня проблема тут — це <strong>звичка</strong>: ми відкриваємо Figma і починаємо вдосконалювати UI, перш ніж вирішити проблему.</p>\n<p>Тож чому ми приховуємо ці грубі ескізи? Це не просто погана звичка або дурість. Існують вагомі <strong>психологічні причини</strong> за цим. Ми часто називаємо це перфекціонізмом, але це глибше, ніж просто бажання, щоб все було акуратно. Дослідження психології (як <a href=\"https://positivepsychology.com/perfectionism/\">дослідження Хьюітта і Флетта</a>) показують, що існує кілька варіантів, які це підживлюють:</p>\n<ul>\n<li><strong>Соціально приписаний перфекціонізм</strong><br>Це те набридливе відчуття, що всі інші очікують від вас ідеальної роботи, що робить показ чогось грубого схожим на вхід у лігво лева.</li>\n<li><strong>Самоорієнтований перфекціонізм</strong><br>Де ви самі встановлюєте для себе неможливо високі стандарти, що веде до жорсткої самокритики, якщо щось виглядає трохи не так.</li>\n</ul>\n<p>У будь-якому випадку результат однаковий: показ незавершеної роботи здається неправильним, і ви втрачаєте важливий ранній зворотний зв'язок.</p>\n<p>Повертаючись до дизайну, пам’ятайте, що клієнти рідко бачать перші олівцеві ескізи архітекторів, але ці ескізи все ще існують; вони керують структурними виборами перед 3D-візуалізацією. Ставтеся до своїх ескізів так само — як до артефактів, призначених для зменшення невизначеності, а не як до портфоліо. Як тільки зацікавлені сторони побачать переваги, грубість стане знаком швидкості, а не недбалості. Отже, ключ у свідомому переході:</p>\n<blockquote>Ставтеся до ранніх ескізів як до одноразових інструментів для мислення і активно діліться ними, щоб швидше отримати зворотний зв'язок.</blockquote>\n\n<p><img src=\"https://files.smashing.media/articles/why-designers-get-stuck-in-details/mockup-early.png\" style=\"width: 100%; height: auto; display: block;\"></p>\nПричина №2: Ви виправляєте симптом, а не причину\n<p>Перш ніж приступити до будь-якого завдання, нам потрібно зрозуміти, якого бізнес-результату ми прагнемо. Менеджери продукту можуть звернутися до нас з проханням збільшити кнопку оплати в кошику, тому що користувачі її не помічають. Запропоноване рішення саме по собі не обов’язково погане, але перед тим, як переробляти кнопку, ми повинні запитати, <em>«Які дані свідчать про те, що вони її не помічають?»</em> Не зрозумійте мене неправильно, я не кажу, що ви не повинні довіряти своєму менеджеру продукту. Навпаки, ці питання допомагають переконатися, що ви на одній хвилі і працюєте з одними й тими ж даними.</p>\n<p>З мого досвіду, ось кілька причин, чому користувачі можуть не натискати на цю бажану кнопку:</p>\n<ul>\n<li>Користувачі не розуміють, що цей крок стосується оплати.</li>\n<li>Вони розуміють, що це про оплату, але очікують підтвердження замовлення спочатку.</li>\n<li>Через неправильний переклад користувачі не розуміють, що означає кнопка.</li>\n<li>Відсутність сигналів довіри (немає іконок безпеки, неясна інформація про продавця).</li>\n<li>Неочікувані додаткові витрати (приховані збори, доставка), які з’являються на цьому етапі.</li>\n<li>Технічні проблеми (неактивна кнопка, зависання сторінки).</li>\n</ul>\n<p>Тепер уявіть, що ви просто зробили те, що запропонував менеджер. Чи вирішили б ви проблему? Навряд чи.</p>\n<p>Більше того, відповідальність за невирішену проблему лягла б на вас, оскільки рішення інтерфейсу лежить у сфері дизайну. Менеджер продукту насправді виконав свою роботу правильно, виявивши проблему: підозріло мало користувачів натискають кнопку.</p>\n<p>Психологічно, взяти на себе цю більшу роль не легко. Це означає подолання <a href=\"https://positivepsychology.com/fear-of-failure/\">страху зробити помилку</a> і дискомфорту від дослідження неясних проблем, а не просто виконання завдань. Цей зсув означає бачити себе як <strong>партнерів, які створюють цінність</strong> — навіть якщо це означає боротися з небажанням ставити під сумнів менеджерів продукту (що може виникати через страх висловлюватися або бажання <a href=\"https://ideasforleaders.com/Ideas/overcoming-our-evolutionary-fears-to-speak-up-to-authority/\">уникати виклику авторитету</a>) — і розуміння, що використання нашої <strong>експертизи в логіці продукту</strong> проактивно є важливим для сучасних дизайнерів.</p>\n<p>Існує ще одна критична причина, чому ми, дизайнери, повинні бути трохи схожими на менеджерів продукту: зростання AI. Я навмисно використав простий приклад про збільшення кнопки, але я впевнений, що в найближчому майбутньому AI легко впорається з рутинними завданнями дизайну. Це мене турбує, але водночас я вже з радістю входжу на територію менеджера продукту: розуміння продукту та бізнес-метрик, формулювання гіпотез, проведення досліджень тощо. Це може звучати, як ніби я забираю роботу у PM, але повірте, у них безумовно достатньо роботи, і вони зазвичай більш ніж раді делегувати деякі обов’язки дизайнерам.</p>\nПричина №3: Ви вирішуєте неправильну проблему\n<p>Перш ніж вирішувати що-небудь, запитайте себе, чи заслуговує проблема вашої уваги.</p>\n<p>Під час великого редизайну домашнього екрану наша мета полягала в тому, щоб залучити більше користувачів до платних послуг. Початкова гіпотеза — зробити кнопки сервісів більшими та яскравішими може допомогти повертаючимся користувачам — здавалася досить розумною для тестування. Однак, навіть коли A/B тести (метод порівняння двох версій дизайну для визначення, яка з них працює краще) показали мінімальний вплив, ми продовжували налаштовувати ці кнопки.</p>\n<p>Тільки пізніше ми зрозуміли: домашній екран не є місцем для продажу; відвідувачі відкривають додаток, щоб почати, а не купувати. Ми прибрали цей промо-блок, і нічого не зламалося. Контекстуальні точки входу глибше в подорожі працювали блискуче. Урок засвоєно:</p>\n<blockquote>Без правильного контексту будь-яке візуальне налаштування — це просто косметика.</blockquote>\n\n<p>Чому ми застрягли в поліруванні кнопок замість того, щоб зупинитися раніше? Легко потрапити в тунельне бачення. Психологічно, це, ймовірно, стара добра <a href=\"https://en.wikipedia.org/wiki/Sunk_cost#Loss_aversion_and_the_sunk_cost_fallacy\">помилка невідворотних витрат</a>: ми вже вклали час у кнопки, тому зупинка здавалася марною тратою цих зусиль, навіть якщо дані не були обнадійливими.</p>\n<p>Простіше продовжувати возитися з чимось знайомим, ніж визнати, що нам потрібен новий план. Можливо, просте питання, яке я повинен був задати собі <em>коли результати застопорилися</em>, було: <em>«Чи оптимізуємо ми правильну річ або просто поліруємо щось, що фундаментально не відповідає основній меті користувача тут?»</em> Це саме по собі могло б заощадити години.</p>\nПричина №4: Ви тонуєте в неактивному зворотному зв'язку\n<p>Ми всі обговорюємо свою роботу з колегами. Але ось важливий момент: яке питання ви ставите, щоб розпочати це обговорення? Якщо ваше стандартне питання — «Що ви думаєте?», то це питання може завести вас у кролячу нору особистих думок, а не дієвих інсайтів. Хоча досвідчені колеги зможуть відсіяти шум, інші, не знаючи, що оцінювати, можуть коментувати все і вся — шрифти, кольори кнопок, навіть коли вам відчайдушно потрібно обговорити потік користувача.</p>\n<p>Тут важливі дві речі:</p>\n<ol>\n<li><strong>Питання</strong>, яке ви ставите,</li>\n<li><strong>Контекст</strong>, який ви надаєте.</li>\n</ol>\n<p>Це означає чітко визначити проблему, що ви дізналися, і як ваша ідея намагається її вирішити.</p>\n<p>Наприклад:</p>\n<blockquote>«Проблема в тому, що наш коефіцієнт конверсії платежів знизився на X%. Я провів інтерв’ю з користувачами і з’ясував, що вони відмовляються від платежу, тому що не розуміють, як розраховується загальна сума. Моє рішення — показати детальний розподіл витрат. Чи вважаєте ви, що це дійсно вирішує проблему для них?»</blockquote>\n\n<p>Тут ви визначили проблему (зниження конверсії), поділилися своїм інсайтом (плутанина користувачів), пояснили своє рішення (розподіл витрат) і задали пряме питання. Ще краще, якщо ви підготуєте список конкретних підпитань. Наприклад: «Чи всі елементи в розподілі витрат зрозумілі?» або «Чи відчувається розміщення цього розподілу інтуїтивним у потоці платежів?»</p>\n<p>Ще одна хороша звичка — тримати під рукою свої грубі ескізи та попередні ітерації. Деякі з пропозицій ваших колег можуть бути речами, які ви вже пробували. Це чудово, якщо ви можете обговорити їх негайно, щоб або повернутися до цих ідей, або остаточно відкласти їх.</p>\n<p>Я не психолог, але досвід підказує мені, що, психологічно, небажання бути таким конкретним часто виникає з страху, що наше рішення буде відхилено. Ми схильні інтерналізувати зворотний зв'язок: здавалося б, невинний коментар, як <em>«Чи розглядали ви інші способи організації цього розділу?»</em> або <em>«Можливо, варто дослідити іншу структуру для цієї частини?»</em> може миттєво перетворитися в нашій свідомості на <em>«Ви повністю зіпсували структуру. Ви поганий дизайнер.»</em> <a href=\"https://www.psychologytoday.com/us/basics/imposter-syndrome\">Синдром самозванця</a> у всій його красі.</p>\n<p>Отже, щоб завершити цей пункт, ось дві рекомендації:</p>\n<ol>\n<li><strong>Готуйтеся до кожного обговорення дизайну.</strong><br>Кілька зосереджених питань дадуть набагато цінніший внесок, ніж розпливчасте <em>«Отже, що ви думаєте?»</em>.</li>\n<li><strong>Активно працюйте над відокремленням зворотного зв'язку про ваш дизайн від вашої самооцінки.</strong><br>Якщо помилка вказана, визнайте її, навчіться на ній, і ви будете менше схильні повторювати її. Це часто легше сказати, ніж зробити. Для мене це зайняло роки роботи з психотерапевтом. Якщо вам важко з цим, я щиро бажаю вам сили в подоланні цього.</li>\n</ol>\nПричина №5 Ви просто втомилися\n<p>Іноді проблема зовсім не стратегічна — це втома. Занурення в кути іконок може відчуватися як затишний бункер, коли ваш мозок виснажений. Це називається <strong>втомою від прийняття рішень</strong>. В основному, батарея вашого мозку для важкого мислення низька, тому він ховається в легкій, комфортній зоні піксельного налаштування.</p>\n<p>Яскравий приклад наводиться в статті New York Times під назвою «<a href=\"https://www.nytimes.com/2011/08/21/magazine/do-you-suffer-from-decision-fatigue.html\">Чи страждаєте ви від втоми від прийняття рішень?</a>». У ній описується, як судді, які приймають рішення про звільнення, набагато частіше надають звільнення на початку дня (близько 70% випадків) порівняно з кінцем дня (менше 10%), просто тому, що їх енергія для прийняття рішень була вичерпана. На щастя, дизайнери рідко тримають чиюсь свободу в своїх руках, але приклад драматично показує, як втома може вплинути на наше судження та продуктивність.</p>\n<p><strong>Що допомагає тут:</strong></p>\n<ul>\n<li><strong>Змінюйте завдання.</strong><br>Обмінюйтеся завданнями з іншим дизайнером; новизна відновлює вашу увагу.</li>\n<li><strong>Поговоріть з іншим дизайнером.</strong><br>Якщо NDA дозволяє, попросіть колег поза командою перевірити вашу адекватність.</li>\n<li><strong>Відійдіть.</strong><br>Навіть десятихвилинна прогулянка може зробити більше, ніж подвійний еспресо.</li>\n</ul>\n<p>До речі, я придумав ці ідеї, гуляючи навколо свого офісу. Мені пощастило працювати біля річки, і ці короткі прогулянки швидко перетворилися на корисну звичку.</p>\n<p><img src=\"https://files.smashing.media/articles/why-designers-get-stuck-in-details/river-break.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>І ще один трюк, який допомагає мені швидко вийти з режиму деталей: якщо я ловлю себе на тому, що роблю близько 20 маленьких налаштувань — змінюючи вагу шрифту, колір, радіус кордону — я просто зупиняюся. З часом це перетворилося на звичку. У мене є схожа з Instagram: до третього ролика мій мозок тихо запитує, <em>«Зачекай, ми ж працювали?»</em> Смішно, як такий поштовх економить купу часу.</p>\nЧотири кроки, які я використовую, щоб уникнути потоплення в деталях\n<p>Знаючи ці потенційні пастки, ось практичний процес, який я використовую, щоб залишатися на правильному шляху:</p>\n<h3>1. Визначте основну проблему та бізнес-мету</h3>\n<p>Перш ніж щось робити, заглибтеся: яка справжня проблема, яку ми вирішуємо, а не просто запитане завдання або поверхневий симптом? Запитуйте «чому» повторно. Який біль користувача або бізнес-потребу ми вирішуємо? Потім визначте чітку бізнес-мету: <em>«Яку метрику я змінюю, і чи є у нас дані, щоб довести, що це правильний важіль?»</em> Якщо мета — утримання, вирішіть, чи є нагадування, гейміфікація або персоналізований контент найкращим шляхом. Неправильний важіль або вирішення симптому замість причини прирікає все, що відбувається далі.</p>\n<h3>2. Виберіть механіку (принцип рішення)</h3>\n<p>Як тільки основна проблема та мета зрозумілі, спочатку зафіксуйте принцип рішення або «механіку». Вибираєте ігровий шар? Вирішіть, чи це будуть таблиці лідерів, серії або значки. Запишіть це. Потім переходьте далі. Ніякого UI ще. Це зберігає фокус на високому рівні перед зануренням у пікселі.</p>\n<h3>3. Створіть каркас потоку та отримайте зосереджений зворотний зв'язок</h3>\n<p>Тепер відкрийте Figma. Намалюйте екрани, макет і переходи. Досить коробок і стрілок. Зберігайте низьку деталізацію, щоб обговорення залишалося на потоці, а не на кольорі. Важливо, коли ви ділитеся цими ранніми каркасами, задавайте конкретні питання і надавайте чіткий контекст (як обговорювалося в «Причині №4»), щоб отримати дієвий зворотний зв'язок, а не просто розпливчасті думки.</p>\n<h3>4. Поліруйте візуали (усвідомлено)</h3>\n<p>Я дозволяю собі налаштовувати сітки, масштаби шрифтів і тіні тільки після того, як потік підтверджено. Якщо прогрес застопорився, або перед великим зусиллям з полірування, я виношу роботу на дизайнерську критику — знову ж таки, використовуючи цілеспрямовані питання та чіткий контекст — замість того, щоб ховатися у версії 47. Це забезпечує, що деталізація служить тепер уже підтвердженому рішенню.</p>\n<p>Навіть для чогось такого маленького, як одна кнопка, проходження цих чотирьох контрольних точок займає близько десяти хвилин і заощаджує години декоративного вагання.</p>\nПідсумок\n<p>Наступного разу, коли ви відчуєте бажання зникнути в макетах, перш ніж проблема буде вирішена, <strong>зупиніться і запитайте, що ви можете уникати</strong>. Так, це може виявити неприємну правду. Але зупинка, щоб запитати, що ви можете уникати — можливо, туманну основну проблему, або просто запит на складний зворотний зв'язок — дає вам силу зіткнутися з реальною проблемою віч-на-віч. Це зберігає проект зосередженим на вирішенні правильної проблеми, а не просто на вдосконаленні недосконалого рішення.</p>\n<p>Увага до деталей — це суперсила, коли вона використовується в потрібний момент. Однак, захоплення пікселями занадто рано — це погана звичка і попереджувальний сигнал, що процес потребує переосмислення.</p>",
    "excerpt": "Ви намалювали п’ятдесят версій одного й того ж екрану — і все ще ненавидите кожну з них. Неохоче ви обираєте три, показуєте їх своєму менеджеру продукту і чуєте: «Виглядає круто, але ідея не працює.» Звучить знайомо?",
    "sourceUrl": "https://smashingmagazine.com/2025/06/why-designers-get-stuck-in-details/",
    "imageUrl": "https://files.smashing.media/articles/why-designers-get-stuck-in-details/mockup-early.png",
    "categories": [],
    "author": "hello@smashingmagazine.com (Nikita Samutin)",
    "source": "Smashing Magazine",
    "publishedAt": "2025-06-03T14:00:00.000Z",
    "status": "underreview",
    "createdAt": "2025-06-15T20:24:35.401Z",
    "updatedAt": "2025-06-15T20:27:10.334Z",
    "__v": 0,
    "original": {
      "title": "Why Designers Get Stuck In The Details And How To Stop",
      "content": "<p>You’ve drawn fifty versions of the same screen — and you still hate every one of them. Begrudgingly, you pick three, show them to your product manager, and hear: <em>“Looks cool, but the idea doesn’t work.”</em> Sound familiar?</p>\n<p>In this article, I’ll unpack why designers fall into detail work at the wrong moment, examining both process pitfalls and the underlying psychological reasons, as understanding these traps is the first step to overcoming them. I’ll also share tactics I use to climb out of that trap.</p>\nReason #1 You’re Afraid To Show Rough Work\n<p>We designers worship detail. We’re taught that true craft equals razor‑sharp typography, perfect grids, and pixel precision. So the minute a task arrives, we pop open Figma and start polishing long before polish is needed.</p>\n<p>I’ve skipped the sketch phase more times than I care to admit. I told myself it would be faster, yet I always ended up spending hours producing a tidy mock‑up when a scribbled thumbnail would have sparked a five‑minute chat with my product manager. Rough sketches felt “unprofessional,” so I hid them.</p>\n<p>The cost? Lost time, wasted energy — and, by the third redo, teammates were quietly wondering if I even understood the brief. </p>\n<p>The real problem here is the <strong>habit</strong>: we open Figma and start perfecting the UI before we’ve even solved the problem.</p>\n<p>So why do we hide these rough sketches? It’s not just a bad habit or plain silly. There are solid <strong>psychological reasons</strong> behind it. We often just call it perfectionism, but it’s deeper than wanting things neat. Digging into the psychology (like the <a href=\"https://positivepsychology.com/perfectionism/\">research by Hewitt and Flett</a>) shows there are a couple of flavors driving this:</p>\n<ul>\n<li><strong>Socially prescribed perfectionism</strong><br>It’s that nagging feeling that everyone else expects perfect work from you, which makes showing anything rough feel like walking into the lion’s den.</li>\n<li><strong>Self-oriented perfectionism</strong><br>Where you’re the one setting impossibly high standards for yourself, leading to brutal self-criticism if anything looks slightly off.</li>\n</ul>\n<p>Either way, the result’s the same: showing unfinished work feels wrong, and you miss out on that vital early feedback.</p>\n<p>Back to the design side, remember that clients rarely see architects’ first pencil sketches, but these sketches still exist; they guide structural choices before the 3D render. Treat your thumbnails the same way — artifacts meant to collapse uncertainty, not portfolio pieces. Once stakeholders see the upside, roughness becomes a badge of speed, not sloppiness. So, the key is to consciously make that shift:</p>\n<blockquote>Treat early sketches as disposable tools for thinking and actively share them to get feedback faster.</blockquote>\n\n<p><img src=\"https://files.smashing.media/articles/why-designers-get-stuck-in-details/mockup-early.png\" style=\"width: 100%; height: auto; display: block;\"></p>\nReason #2: You Fix The Symptom, Not The Cause\n<p>Before tackling any task, we need to understand what business outcome we’re aiming for. Product managers might come to us asking to enlarge the payment button in the shopping cart because users aren’t noticing it. The suggested solution itself isn’t necessarily bad, but before redesigning the button, we should ask, <em>“What data suggests they aren’t noticing it?”</em> Don’t get me wrong, I’m not saying you shouldn’t trust your product manager. On the contrary, these questions help ensure you’re on the same page and working with the same data.</p>\n<p>From my experience, here are several reasons why users might not be clicking that coveted button:</p>\n<ul>\n<li>Users don’t understand that this step is for payment.</li>\n<li>They understand it’s about payment but expect order confirmation first.</li>\n<li>Due to incorrect translation, users don’t understand what the button means.</li>\n<li>Lack of trust signals (no security icons, unclear seller information).</li>\n<li>Unexpected additional costs (hidden fees, shipping) that appear at this stage.</li>\n<li>Technical issues (inactive button, page freezing).</li>\n</ul>\n<p>Now, imagine you simply did what the manager suggested. Would you have solved the problem? Hardly. </p>\n<p>Moreover, the responsibility for the unresolved issue would fall on you, as the interface solution lies within the design domain. The product manager actually did their job correctly by identifying a problem: suspiciously, few users are clicking the button.</p>\n<p>Psychologically, taking on this bigger role isn’t easy. It means overcoming the <a href=\"https://positivepsychology.com/fear-of-failure/\">fear of making mistakes</a> and the discomfort of exploring unclear problems rather than just doing tasks. This shift means seeing ourselves as <strong>partners who create value</strong>  — even if it means fighting a hesitation to question product managers (which might come from a fear of speaking up or a desire to <a href=\"https://ideasforleaders.com/Ideas/overcoming-our-evolutionary-fears-to-speak-up-to-authority/\">avoid challenging authority</a>) — and understanding that using our <strong>product logic expertise</strong> proactively is crucial for modern designers.</p>\n<p>There’s another critical reason why we, designers, need to be a bit like product managers: the rise of AI. I deliberately used a simple example about enlarging a button, but I’m confident that in the near future, AI will easily handle routine design tasks. This worries me, but at the same time, I’m already gladly stepping into the product manager’s territory: understanding product and business metrics, formulating hypotheses, conducting research, and so on. It might sound like I’m taking work away from PMs, but believe me, they undoubtedly have enough on their plates and are usually more than happy to delegate some responsibilities to designers.</p>\nReason #3: You’re Solving The Wrong Problem\n<p>Before solving anything, ask whether the problem even deserves your attention.</p>\n<p>During a major home‑screen redesign, our goal was to drive more users into paid services. The initial hypothesis — making service buttons bigger and brighter might help returning users — seemed reasonable enough to test. However, even when A/B tests (a method of comparing two versions of a design to determine which performs better) showed minimal impact, we continued to tweak those buttons.</p>\n<p>Only later did it click: the home screen isn’t the place to sell; visitors open the app to start, not to buy. We removed that promo block, and nothing broke. Contextual entry points deeper into the journey performed brilliantly. Lesson learned:</p>\n<blockquote>Without the right context, any visual tweak is lipstick on a pig.</blockquote>\n\n<p>Why did we get stuck polishing buttons instead of stopping sooner? It’s easy to get tunnel vision. Psychologically, it’s likely the good old <a href=\"https://en.wikipedia.org/wiki/Sunk_cost#Loss_aversion_and_the_sunk_cost_fallacy\">sunk cost fallacy</a> kicking in: we’d already invested time in the buttons, so stopping felt like wasting that effort, even though the data wasn’t promising.</p>\n<p>It’s just easier to keep fiddling with something familiar than to admit we need a new plan. Perhaps the simple question I should have asked myself <em>when results stalled</em> was: <em>“Are we optimizing the right thing or just polishing something that fundamentally doesn’t fit the user’s primary goal here?”</em> That alone might have saved hours.</p>\nReason #4: You’re Drowning In Unactionable Feedback\n<p>We all discuss our work with colleagues. But here’s a crucial point: what kind of question do you pose to kick off that discussion? If your go-to is “What do you think?” well, that question might lead you down a rabbit hole of personal opinions rather than actionable insights. While experienced colleagues will cut through the noise, others, unsure what to evaluate, might comment on anything and everything — fonts, button colors, even when you desperately need to discuss a user flow.</p>\n<p>What matters here are two things:</p>\n<ol>\n<li>The <strong>question</strong> you ask,</li>\n<li>The <strong>context</strong> you give.</li>\n</ol>\n<p>That means clearly stating the problem, what you’ve learned, and how your idea aims to fix it.</p>\n<p>For instance:</p>\n<blockquote>“The problem is our payment conversion rate has dropped by X%. I’ve interviewed users and found they abandon payment because they don’t understand how the total amount is calculated. My solution is to show a detailed cost breakdown. Do you think this actually solves the problem for them?”</blockquote>\n\n<p>Here, you’ve stated the problem (conversion drop), shared your insight (user confusion), explained your solution (cost breakdown), and asked a direct question. It’s even better if you prepare a list of specific sub-questions. For instance: “Are all items in the cost breakdown clear?” or “Does the placement of this breakdown feel intuitive within the payment flow?”</p>\n<p>Another good habit is to keep your rough sketches and previous iterations handy. Some of your colleagues’ suggestions might be things you’ve already tried. It’s great if you can discuss them immediately to either revisit those ideas or definitively set them aside.</p>\n<p>I’m not a psychologist, but experience tells me that, psychologically, the reluctance to be this specific often stems from a fear of our solution being rejected. We tend to internalize feedback: a seemingly innocent comment like, <em>“Have you considered other ways to organize this section?”</em> or <em>“Perhaps explore a different structure for this part?”</em> can instantly morph in our minds into <em>“You completely messed up the structure. You’re a bad designer.”</em> <a href=\"https://www.psychologytoday.com/us/basics/imposter-syndrome\">Imposter syndrome</a>, in all its glory.</p>\n<p>So, to wrap up this point, here are two recommendations:</p>\n<ol>\n<li><strong>Prepare for every design discussion.</strong><br>A couple of focused questions will yield far more valuable input than a vague <em>“So, what do you think?”</em>.</li>\n<li><strong>Actively work on separating feedback on your design from your self-worth.</strong><br>If a mistake is pointed out, acknowledge it, learn from it, and you’ll be less likely to repeat it. This is often easier said than done. For me, it took years of working with a psychotherapist. If you struggle with this, I sincerely wish you strength in overcoming it.</li>\n</ol>\nReason #5 You’re Just Tired\n<p>Sometimes, the issue isn’t strategic at all — it’s fatigue. Fussing over icon corners can feel like a cozy bunker when your brain is fried. There’s a name for this: <strong>decision fatigue</strong>. Basically, your brain’s battery for hard thinking is low, so it hides out in the easy, comfy zone of pixel-pushing. </p>\n<p>A striking example comes from a New York Times article titled “<a href=\"https://www.nytimes.com/2011/08/21/magazine/do-you-suffer-from-decision-fatigue.html\">Do You Suffer From Decision Fatigue?</a>.” It described how judges deciding on release requests were far more likely to grant release early in the day (about 70% of cases) compared to late in the day (less than 10%) simply because their decision-making energy was depleted. Luckily, designers rarely hold someone’s freedom in their hands, but the example dramatically shows how fatigue can impact our judgment and productivity.</p>\n<p><strong>What helps here:</strong></p>\n<ul>\n<li><strong>Swap tasks.</strong><br>Trade tickets with another designer; novelty resets your focus.</li>\n<li><strong>Talk to another designer.</strong><br>If NDA permits, ask peers outside the team for a sanity check.</li>\n<li><strong>Step away.</strong><br>Even a ten‑minute walk can do more than a double‑shot espresso.</li>\n</ul>\n<p>By the way, I came up with these ideas while walking around my office. I was lucky to work near a river, and those short walks quickly turned into a helpful habit.</p>\n<p><img src=\"https://files.smashing.media/articles/why-designers-get-stuck-in-details/river-break.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>And one more trick that helps me snap out of detail mode early: if I catch myself making around 20 little tweaks — changing font weight, color, border radius — I just stop. Over time, it turned into a habit. I have a similar one with Instagram: by the third reel, my brain quietly asks, <em>“Wait, weren’t we working?”</em> Funny how that kind of nudge saves a ton of time.</p>\nFour Steps I Use to Avoid Drowning In Detail\n<p>Knowing these potential traps, here’s the practical process I use to stay on track:</p>\n<h3>1. Define the Core Problem &amp; Business Goal</h3>\n<p>Before anything, dig deep: what’s the actual problem we’re solving, not just the requested task or a surface-level symptom? Ask ‘why’ repeatedly. What user pain or business need are we addressing? Then, state the clear business goal: <em>“What metric am I moving, and do we have data to prove this is the right lever?”</em> If retention is the goal, decide whether push reminders, gamification, or personalised content is the best route. The wrong lever, or tackling a symptom instead of the cause, dooms everything downstream.</p>\n<h3>2. Choose the Mechanic (Solution Principle)</h3>\n<p>Once the core problem and goal are clear, lock the solution principle or ‘mechanic’ first. Going with a game layer? Decide if it’s leaderboards, streaks, or badges. Write it down. Then move on. No UI yet. This keeps the focus high-level before diving into pixels.</p>\n<h3>3. Wireframe the Flow &amp; Get Focused Feedback</h3>\n<p>Now open Figma. Map screens, layout, and transitions. Boxes and arrows are enough. Keep the fidelity low so the discussion stays on the flow, not colour. Crucially, when you share these early wires, ask specific questions and provide clear context (as discussed in ‘Reason #4’) to get actionable feedback, not just vague opinions.</p>\n<h3>4. Polish the Visuals (Mindfully)</h3>\n<p>I only let myself tweak grids, type scales, and shadows after the flow is validated. If progress stalls, or before a major polish effort, I surface the work in a design critique — again using targeted questions and clear context — instead of hiding in version 47. This ensures detailing serves the now-validated solution.</p>\n<p>Even for something as small as a single button, running these four checkpoints takes about ten minutes and saves hours of decorative dithering.</p>\nWrapping Up\n<p>Next time you feel the pull to vanish into mock‑ups before the problem is nailed down, <strong>pause and ask what you might be avoiding</strong>. Yes, that can expose an uncomfortable truth. But pausing to ask what you might be avoiding — maybe the fuzzy core problem, or just asking for tough feedback — gives you the power to face the real issue head-on. It keeps the project focused on solving the right problem, not just perfecting a flawed solution.</p>\n<p>Attention to detail is a superpower when used at the right moment. Obsessing over pixels too soon, though, is a bad habit and a warning light telling us the process needs a rethink.</p>",
      "_id": "684f2c9ee823d9037acf4509"
    }
  },
  {
    "_id": "684f2c03e823d9037acf44d1",
    "title": "Smashing Animations Part 3: SMIL не мертвий, малюк, SMIL не мертвий",
    "content": "<p>Специфікація SMIL була представлена W3C у 1998 році для синхронізації мультимедіа. Це було задовго до того, як стали доступні CSS-анімації або бібліотеки анімації на основі JavaScript. Вона була вбудована в SVG 1.1, тому ми можемо використовувати її і сьогодні.</p>\n<p>Можливо, ви чули, що <a href=\"https://css-tricks.com/smil-is-dead-long-live-smil-a-guide-to-alternatives-to-smil-features\">SMIL мертвий</a>. Однак він живий і здоровий, оскільки Google скасував рішення про знецінення технології майже десятиліття тому. Це залишається чудовим вибором для дизайнерів і розробників, які хочуть прості, семантичні способи додавання анімацій до своїх дизайнів.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/1-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p><strong>Порада</strong>: <em>Тепер є вебсайт, де ви можете побачити всі мої <a href=\"https://stuffandnonsense.co.uk/toon-titles\">Toon Titles</a>.</em></p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/2-mike-worth-website.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Майк любить анімацію 90-х — особливо <a href=\"https://en.wikipedia.org/wiki/DuckTales_(1987_TV_series\">Disney’s</a>) <a href=\"https://en.wikipedia.org/wiki/DuckTales_(1987_TV_series\"><em>Duck Tales</em></a>). Не дивно, що мій смак в мультфільмах трохи старший і включає шоу <a href=\"https://en.wikipedia.org/wiki/Hanna-Barbera\">Hanna-Barbera</a>, такі як Дастардлі і Маттлі в <em>Their Flying Machines</em>, <em>Scooby-Doo</em>, <em>The Perils of Penelope Pitstop</em>, <em>Wacky Races</em> і, звісно, <a href=\"https://en.wikipedia.org/wiki/Yogi_Bear\"><em>The Yogi Bear Show</em></a>. Тож, щоб пояснити, як ця епоха анімації пов'язана з SVG, я додам SMIL-анімації в SVG до титульних карток з деяких класичних мультфільмів про Йогі Бера.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/3-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>По суті, анімація змінює вигляд елемента і його розташування з часом, використовуючи кілька базових технік. Це може бути просто переміщення елемента вгору або вниз, вліво або вправо, щоб створити ілюзію руху, як Йогі Бер, що рухається по екрану.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/4-yogi-bear-title-card.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Обертання об'єктів навколо фіксованої точки може створити все: від простих ефектів обертання до природних рухів абсолютно нормальних речей, як ведмідь під парашутом, що падає з неба.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/5-yogi-bear-title-card-design.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Масштабування змушує елемент рости, зменшуватися або розтягуватися, що може додати драматизму, створити перспективу або імітувати глибину.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/6-yogi-bear-title-card.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Зміна кольору та перехід непрозорості можуть додати атмосферу, створити настрій і підвищити візуальне оповідання. Лише ці базові принципи можуть створити анімації, які привертають увагу і покращують досвід використання дизайну.</p>\n<p>Ці результати можна досягти за допомогою CSS-анімацій, але деякі властивості SVG не можуть бути анімовані за допомогою CSS. На щастя, ми можемо зробити більше — і отримати набагато більше задоволення — використовуючи SMIL-анімації в SVG. Ми можемо поєднувати складні анімації, переміщувати об'єкти по шляхах і контролювати, коли вони починаються, зупиняються і все, що між ними.</p>\n<p>Анімації можуть бути вбудовані в будь-який SVG-елемент, включаючи <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorials/SVG_from_scratch/Basic_shapes\">примітивні форми</a>, такі як кола, еліпси і прямокутники. Вони також можуть бути інкапсульовані в групи, шляхи і багатокутники:</p>\n<pre><code>&lt;circle ...&gt;\n  &lt;animate&gt;...&lt;/animate&gt;\n&lt;/circle&gt;\n</code></pre>\n\n<p>Анімації також можуть бути визначені поза елементом, деінде в SVG, і пов'язані з ним за допомогою атрибута <code>xlink</code>:</p>\n<pre><code>&lt;g id=\"yogi\"&gt;...&lt;/g&gt;\n  ...\n&lt;animate xlink:href=\"#yogi\"&gt;…&lt;/animate&gt;\n</code></pre>\n\nСтворення анімації\n<p><code>&lt;animate&gt;</code> є лише одним з кількох елементів анімації в SVG. Разом зі значенням <code>attributeName</code> він дозволяє створювати анімації на основі одного або декількох атрибутів елемента.</p>\n<p>Більшість пояснень анімації починаються з переміщення примітивної форми, як це захоплююче коло:</p>\n<pre><code>&lt;circle\n  r=\"50\"\n  cx=\"50\" \n  cy=\"50\" \n  fill=\"#062326\" \n  opacity=\"1\"\n/&gt;\n</code></pre>\n\n<p>Використовуючи цю властивість <code>attributeName</code>, я можу визначити, які з атрибутів цього кола я хочу анімувати, в даному прикладі це його позиція <code>cx</code> (центральна точка по осі x):</p>\n<pre><code>&lt;circle ... &gt;\n  &lt;animate attributename=\"cx\"&gt;&lt;/animate&gt;\n&lt;/circle&gt;\n</code></pre>\n\n<p>Сам по собі, це нічого не робить, поки я не визначу ще три значення. Ключове слово <code>from</code> вказує початкову позицію кола, <code>to</code> — його кінцеву позицію, а <code>dur</code>-ація між цими двома позиціями:</p>\n<pre><code>&lt;circle ... &gt;\n  &lt;animate \n  attributename=\"cx\"\n  from=\"50\" \n  to=\"500\"\n  dur=\"1s\"&gt;\n  &lt;/animate&gt;\n&lt;/circle&gt;\n</code></pre>\n\n<p>Якщо я хочу більш точного контролю, я можу замінити <code>from</code> і <code>to</code> на набір значень <code>values</code>, розділених крапкою з комою:</p>\n<pre><code>&lt;circle ... &gt;\n  &lt;animate \n  attributename=\"cx\"\n  values=\"50; 250; 500; 250;\"\n  dur=\"1s\"&gt;\n  &lt;/animate&gt;\n&lt;/circle&gt;\n</code></pre>\n\n<p>Нарешті, я можу визначити, скільки разів анімація повторюється (<code>repeatcount</code>) і навіть після якого періоду це повторення має зупинитися (<code>repeatdur</code>):</p>\n<pre><code>&lt;circle ... &gt;\n  &lt;animate \n  attributename=\"cx\"\n  values=\"50; 250; 500; 250;\"\n  dur=\"1s\"\n  repeatcount=\"indefinite\"\n  repeatdur=\"180s\"&gt;\n&lt;/circle&gt;\n</code></pre>\n\n<p>Більшість SVG-елементів мають атрибути, які можуть бути анімовані. Ця титульна картка з епізоду 1959 року <a href=\"https://yogibear.fandom.com/wiki/Brainy_Bear\">“Brainy Bear”</a> показує Йогі в експерименті божевільного вченого. Голова Йогі знаходиться під куполом, і енергія випромінюється навколо нього.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/7-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Щоб створити шум навколо Йогі, моє SVG включає три елементи <code>path</code>, кожен з атрибутами <code>opacity</code>, <code>stroke</code> і <code>stroke-width</code>, які всі можуть бути анімовані:</p>\n<pre><code>&lt;path opacity=\"1\" stroke=\"#fff\" stroke-width=\"5\" ... /&gt;\n</code></pre>\n\n<p>Я анімувала <code>opacity</code> кожного шляху, змінюючи його значення з <code>1</code> на <code>.5</code> і назад:</p>\n<pre><code>&lt;path opacity=\"1\" ... &gt;\n  &lt;animate \n    attributename=\"opacity\"\n    values=\"1; .25; 1;\"\n    dur=\"1s\"\n    repeatcount=\"indefinite\"&gt;\n  &lt;/animate&gt;\n&lt;/path&gt;\n</code></pre>\n\n<p>Потім, щоб випромінювати енергію від Йогі, я вказала, коли кожна анімація повинна <code>begin</code>, використовуючи різне значення для кожного <code>path</code>:</p>\n<pre><code>&lt;path ... &gt;\n  &lt;animate begin=\"0\" … &gt;\n&lt;/path&gt;\n\n&lt;path ... &gt;\n  &lt;animate begin=\".5s\" … &gt;\n&lt;/path&gt;\n\n&lt;path ... &gt;\n  &lt;animate begin=\"1s\" … &gt;\n&lt;/path&gt;\n</code></pre>\n\n<p>Я поясню більше про властивість <code>begin</code> і як починати анімації після цієї короткої рекламної паузи.</p>\n<p>Спробуйте це самі:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/8-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Мені знадобилися два типи анімацій трансформації, щоб створити ефект плавного спуску Йогі: <code>translate</code> і <code>rotate</code>. Спочатку я додала елемент <code>animatetransform</code> до групи, яка містить Йогі і його парашут. Я визначила його початкову вертикальну позицію — <code>1200</code> від верхньої частини <code>viewBox</code> — потім перевела його спуск до <code>1000</code> за 15-секундну тривалість:</p>\n<pre><code>&lt;g transform=\"translate(1200, -1200)\"&gt;\n  ...\n  &lt;animateTransform\n    attributeName=\"transform\"\n    type=\"translate\"\n    values=\"500,-1200; 500,1000\"\n    dur=\"15s\"\n    repeatCount=\"1\" \n  /&gt;\n&lt;/g&gt;\n</code></pre>\n\n<p>Йогі здається падає з неба, але рух виглядає нереалістично. Тому я додала другий елемент <code>animatetransform</code>, цього разу з безкінечно повторюваним обертанням на +/- 5 градусів, щоб гойдати Йогі з боку в бік під час його спуску:</p>\n<pre><code>&lt;animateTransform\n  attributeName=\"transform\"\n  type=\"rotate\"\n  values=\"-5; 5; -5\"\n  dur=\"14s\"\n  repeatCount=\"indefinite\"\n  additive=\"sum\" \n/&gt;\n</code></pre>\n\n<p>Спробуйте це самі:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/9-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>За замовчуванням стріла відпускається, коли сторінка завантажується. Моргніть, і ви можете це пропустити. Щоб створити деяку напругу, я можу <code>begin</code> анімацію через дві секунди:</p>\n<pre><code>&lt;animatetransform\n  attributename=\"transform\"\n  type=\"translate\"\n  from=\"0 0\"\n  to=\"750 0\"\n  dur=\".25s\"\n  begin=\"2s\"\n  fill=\"freeze\"\n/&gt;\n</code></pre>\n\n<p>Або я можу дозволити глядачеві зробити постріл, коли вони натискають на стрілу:</p>\n<pre><code>&lt;animatetransform\n  ...\n  begin=\"click\"\n/&gt;\n</code></pre>\n\n<p>І я можу поєднати подію кліку і затримку, все без JavaScript, лише з невеликою кількістю SMIL:</p>\n<pre><code>&lt;animatetransform\n  ...\n  begin=\"click + .5s\"\n/&gt;\n</code></pre>\n\n<p>Спробуйте це самі, натиснувши на стрілу:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/10-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Щоб оживити цю титульну картку, мені знадобилися дві групи шляхів: одна для Йогі, а інша для собаки. Я перевела їх обидва за лівий край <code>viewBox</code>:</p>\n<pre><code>&lt;g class=\"dog\" transform=\"translate(-1000, 0)\"&gt;\n  ...\n&lt;/g&gt;\n\n&lt;g class=\"yogi\" transform=\"translate(-1000, 0)\"&gt;\n  ...\n&lt;/g&gt;\n</code></pre>\n\n<p>Потім я застосувала елемент <code>animatetransform</code> до обох груп, який переміщує їх назад у видимість:</p>\n<pre><code>&lt;!-- yogi --&gt;\n&lt;animateTransform\n  attributeName=\"transform\"\n  type=\"translate\"\n  from=\"-1000,0\"\n  to=\"0,0\"\n  dur=\"2s\"\n  fill=\"freeze\"\n/&gt;\n\n&lt;!-- dog --&gt;\n&lt;animateTransform\n  attributeName=\"transform\"\n  type=\"translate\"\n  from=\"-1000,0\"\n  to=\"0,0\"\n  dur=\".5s\"\n  fill=\"freeze\"\n/&gt;\n</code></pre>\n\n<p>Це налаштовує дію, але ефект виглядає плоским, тому я додала ще одну пару анімацій, які підстрибують обох персонажів:</p>\n<pre><code>&lt;!-- yogi --&gt;\n&lt;animateTransform\n  attributeName=\"transform\"\n  type=\"rotate\"\n  values=\"-1,0,450; 1,0,450; -1,0,450\"\n  dur=\".25s\"\n  repeatCount=\"indefinite\"\n/&gt;\n\n&lt;!-- dog --&gt;\n&lt;animateTransform\n  attributeName=\"transform\"\n  type=\"rotate\"\n  values=\"-1,0,450; 1,0,450; -1,0,450\"\n  dur=\"0.5s\"\n  repeatCount=\"indefinite\"\n/&gt;\n</code></pre>\n\n<p>Анімації можуть починатися, коли сторінка завантажується, через певний час або при натисканні. І, назвавши їх, вони також можуть синхронізуватися з іншими анімаціями.</p>\n<p>Я хотіла, щоб Йогі спочатку увійшов у кадр, щоб створити напругу, з короткою паузою перед початком інших анімацій, синхронізуючи з моментом, коли він прибув. Спочатку я додала ID до анімації <code>translate</code> Йогі:</p>\n<pre><code>&lt;animateTransform\n  id=\"yogi\"\n  type=\"translate\"\n  ...\n/&gt;\n</code></pre>\n\n<blockquote><strong>Будьте обережні</strong>: З якоїсь причини, я не можу пояснити, чому Firefox не починає анімації з ID, коли ID містить дефіс. Це не розумніше за середній браузер, але заміна дефісів на підкреслення вирішує проблему.</blockquote>\n\n<p>Потім я застосувала <code>begin</code> до його анімації <code>rotate</code>, яка починає відтворюватися через півсекунди після завершення анімації <code>#yogi</code>:</p>\n<pre><code>&lt;animateTransform\n  type=\"rotate\"\n  begin=\"yogi.end + .5s\"\n  ...\n/&gt;\n</code></pre>\n\n<p>Я можу створити складні набори синхронізованих анімацій, використовуючи властивість <code>begin</code> і те, чи починається або закінчується названа анімація. Бульдог, що переслідує Йогі, входить у кадр через дві секунди після того, як Йогі починає свій вхід:</p>\n<pre><code>&lt;animateTransform\n  id=\"dog\"\n  type=\"translate\"\n  begin=\"yogi.begin + 2s\"\n  fill=\"freeze\"\n  ...\n/&gt;\n</code></pre>\n\n<p>Через секунду після того, як собака наздогнала Йогі, трансформація <code>rotate</code> змушує його теж підстрибувати:</p>\n<pre><code>&lt;animateTransform\n  type=\"rotate\"\n  ...\n  begin=\"dog.begin + 1s\"\n  repeatCount=\"indefinite\" \n/&gt;\n</code></pre>\n\n<p>Фонові прямокутники, що проносяться повз, також синхронізовані, цього разу на одну секунду до того, як бульдог закінчить свій біг:</p>\n<pre><code>&lt;rect ...&gt;\n  &lt;animateTransform\n    begin=\"dog.end + -1s\"\n  /&gt;\n&lt;/rect&gt;\n</code></pre>\n\n<p>Спробуйте це самі:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/11-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>У <a href=\"https://yogibear.fandom.com/wiki/The_Runaway_Bear\">“The Runaway Bear”</a> з 1959 року Йогі повинен уникнути мисливця, який перетворює його голову в трофей. Я хотіла, щоб Йогі стрибав у і з екрану, змушуючи його слідувати за шляхом. Я також хотіла змінити швидкість його ривка: прискорюючись, коли він входить і виходить, і сповільнюючись, коли проходить повз титульний текст.</p>\n<p>Спочатку я додала властивість <code>path</code>, використовуючи її координатні дані, щоб дати Йогі маршрут для слідування, і вказала двосекундну тривалість для моєї анімації:</p>\n<pre><code>&lt;g&gt;\n  &lt;animateMotion\n    dur=\"2s\"\n    path=\"...\"\n  &gt;\n  &lt;/animateMotion&gt;\n&lt;/g&gt;\n</code></pre>\n\n<p>Альтернативно, я могла б додати елемент <code>path</code>, залишити його видимим або запобігти його відображенню, помістивши його всередину елемента <code>defs</code>:</p>\n<pre><code>&lt;defs&gt;\n  &lt;path id=\"yogi\" d=\"...\" /&gt;\n&lt;/defs&gt;\n</code></pre>\n\n<p>Тоді я можу посилатися на це, використовуючи елемент <code>mpath</code> всередині мого <code>animateMotion</code>:</p>\n<pre><code>&lt;animateMotion\n  ...\n  &lt;mpath href=\"#yogi\" /&gt;\n&lt;/animateMotion&gt;\n</code></pre>\n\n<p>Я експериментувала з кількома шляхами, перш ніж зупинилася на тому, який дав форму руху, яку я шукала:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/12-yogi-bear-title-card-recreations.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Один був занадто підстрибуючим, інший був занадто плоским, але третій шлях руху був якраз правильним. Майже, оскільки я також хотіла змінити швидкість ривка Йогі: прискорюючи його, коли він входить і виходить, і сповільнюючи, коли він проходить повз титульний текст.</p>\n<p>Властивість <code>keyPoints</code> дозволила мені вказати точки вздовж шляху руху, а потім налаштувати тривалість, яку Йогі проводить між ними. Щоб спростити речі, я визначила п'ять точок між <code>0</code> і <code>1</code>:</p>\n<pre><code>&lt;animateMotion\n  ...\n  keyPoints=\"0; .35; .5; .65; 1;\"\n&gt;\n&lt;/animateMotion&gt;\n</code></pre>\n\n<p>Потім я додала таку ж кількість значень <code>keyTimes</code>, розділених крапкою з комою, щоб контролювати темп цієї анімації:</p>\n<pre><code>&lt;animateMotion\n  ...\n  keyTimes=\"0; .1; .5; .95; 1;\"\n&gt;\n&lt;/animateMotion&gt;\n</code></pre>\n\n<p>Тепер Йогі мчить через перші три <code>keyPoints</code>, сповільнюється, коли проходить повз титульний текст, потім знову прискорюється, коли виходить з <code>viewBox</code>.</p>\n<p>Спробуйте це самі:</p>\n<p>Дивіться Pen <a href=\"https://codepen.io/smashingmag/pen/oggryox\">Runaway Bear SVG animation [forked]</a> від <a href=\"https://codepen.io/malarkey\">Andy Clarke</a>.</p>\nSMIL не мертвий, малюк. SMIL не мертвий\n<p>З їхньою здатністю контролювати трансформації, анімувати складні шляхи руху і синхронізувати кілька анімацій, SMIL-анімації в SVG все ще є потужними інструментами. Вони можуть оживити дизайн без необхідності в рамках або залежності від JavaScript. Це компактно, що робить його чудовим для невеликих SVG-ефектів.</p>\n<p>SMIL включає атрибут <code>begin</code>, який робить ланцюжок анімацій набагато інтуїтивнішим, ніж з CSS. Крім того, SMIL живе всередині SVG-файлу, що робить його ідеальним для анімацій, які подорожують разом з активом. Тож, хоча SMIL не є сучасним за сьогоднішніми стандартами і може бути трохи нішевим, він все ще може бути чарівним.</p>\n<p>Не дозволяйте помилковому уявленню, що SMIL \"мертвий\", завадити вам використовувати цей чудовий інструмент.</p>\n<p>Google скасував своє рішення про знецінення SMIL майже десятиліття тому, тому він залишається чудовим вибором для дизайнерів і розробників, які хочуть <strong>простих</strong>, <strong>семантичних способів</strong> додавання анімацій до своїх дизайнів.</p>",
    "excerpt": "Специфікація SMIL була представлена W3C у 1998 році для синхронізації мультимедіа. Це було задовго до того, як стали доступні CSS-анімації або бібліотеки анімації на основі JavaScript. Вона була вбудована в SVG 1.1, тому ми можемо використовувати її і сьогодні.",
    "sourceUrl": "https://smashingmagazine.com/2025/05/smashing-animations-part-3-smil-not-dead/",
    "imageUrl": "https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/1-yogi-bear-show.png",
    "categories": [],
    "author": "hello@smashingmagazine.com (Andy Clarke)",
    "source": "Smashing Magazine",
    "publishedAt": "2025-05-21T08:00:00.000Z",
    "status": "underreview",
    "createdAt": "2025-06-15T20:24:35.413Z",
    "updatedAt": "2025-06-15T20:28:13.389Z",
    "__v": 0,
    "original": {
      "title": "Smashing Animations Part 3: SMIL’s Not Dead Baby, SMIL’s Not Dead",
      "content": "<p>The SMIL specification was introduced by the W3C in 1998 for synchronizing multimedia. This was long before CSS animations or JavaScript-based animation libraries were available. It was built into SVG 1.1, which is why we can still use it there today.</p>\n<p>Now, you might’ve heard that <a href=\"https://css-tricks.com/smil-is-dead-long-live-smil-a-guide-to-alternatives-to-smil-features\">SMIL is dead</a>. However, it’s alive and well since Google reversed a decision to deprecate the technology almost a decade ago. It remains a terrific choice for designers and developers who want simple, semantic ways to add animations to their designs.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/1-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p><strong>Tip</strong>: <em>There’s now a website where you can see all my <a href=\"https://stuffandnonsense.co.uk/toon-titles\">Toon Titles</a>.</em></p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/2-mike-worth-website.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Mike loves ’90s animation — especially <a href=\"https://en.wikipedia.org/wiki/DuckTales_(1987_TV_series\">Disney’s</a>) <a href=\"https://en.wikipedia.org/wiki/DuckTales_(1987_TV_series\"><em>Duck Tales</em></a>). Unsurprisingly, my taste in cartoons stretches back a little further to <a href=\"https://en.wikipedia.org/wiki/Hanna-Barbera\">Hanna-Barbera</a> shows like Dastardly and Muttley in <em>Their Flying Machines</em>, <em>Scooby-Doo</em>, <em>The Perils of Penelope Pitstop</em>, <em>Wacky Races</em>, and, of course, <a href=\"https://en.wikipedia.org/wiki/Yogi_Bear\"><em>The Yogi Bear Show</em></a>. So, to explain how this era of animation relates to SVG, I’ll be adding SMIL animations in SVG to title cards from some classic Yogi Bear cartoons.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/3-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Fundamentally, animation changes how an element looks and where it appears over time using a few basic techniques. That might be simply shifting an element up or down, left or right, to create the appearance of motion, like Yogi Bear moving across the screen. </p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/4-yogi-bear-title-card.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Rotating objects around a fixed point can create everything, from simple spinning effects to natural-looking movements of totally normal things, like a bear under a parachute falling from the sky.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/5-yogi-bear-title-card-design.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Scaling makes an element grow, shrink, or stretch, which can add drama, create perspective, or simulate depth.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/6-yogi-bear-title-card.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Changing colour and transitioning opacity can add atmosphere, create a mood, and enhance visual storytelling. Just these basic principles can create animations that attract attention and improve someone’s experience using a design.</p>\n<p>These results are all achievable using CSS animations, but some SVG properties can’t be animated using CSS. Luckily, we can do more — and have much more fun — using SMIL animations in SVG. We can combine complex animations, move objects along paths, and control when they start, stop, and everything in between.</p>\n<p>Animations can be embedded within any SVG element, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorials/SVG_from_scratch/Basic_shapes\">primitive shapes</a> like circles, ellipses, and rectangles. They can also be encapsulated into groups, paths, and polygons:</p>\n<pre><code>&lt;circle ...&gt;\n  &lt;animate&gt;...&lt;/animate&gt;\n&lt;/circle&gt;\n</code></pre>\n\n<p>Animations can also be defined outside an element, elsewhere in an SVG, and connected to it using an <code>xlink</code> attribute:</p>\n<pre><code>&lt;g id=\"yogi\"&gt;...&lt;/g&gt;\n  ...\n&lt;animate xlink:href=\"#yogi\"&gt;…&lt;/animate&gt;\n</code></pre>\n\nBuilding An Animation\n<p><code>&lt;animate&gt;</code> is just one of several animation elements in SVG. Together with an <code>attributeName</code> value, it enables animations based on one or more of an element’s attributes.</p>\n<p>Most animation explanations start by moving a primitive shape, like this exciting circle:</p>\n<pre><code>&lt;circle\n  r=\"50\"\n  cx=\"50\" \n  cy=\"50\" \n  fill=\"#062326\" \n  opacity=\"1\"\n/&gt;\n</code></pre>\n\n<p>Using this <code>attributeName</code> property, I can define which of this circle’s attributes I want to animate, which, in this example, is its <code>cx</code> (x-axis center point) position:</p>\n<pre><code>&lt;circle ... &gt;\n  &lt;animate attributename=\"cx\"&gt;&lt;/animate&gt;\n&lt;/circle&gt;\n</code></pre>\n\n<p>On its own, this does precisely nothing until I define three more values. The <code>from</code> keyword specifies the circle’s initial position, <code>to</code>, its final position, and the <code>dur</code>-ation between those two positions:</p>\n<pre><code>&lt;circle ... &gt;\n  &lt;animate \n  attributename=\"cx\"\n  from=\"50\" \n  to=\"500\"\n  dur=\"1s\"&gt;\n  &lt;/animate&gt;\n&lt;/circle&gt;\n</code></pre>\n\n<p>If I want more precise control, I can replace <code>from</code> and <code>to</code> with a set of <code>values</code> separated by semicolons:</p>\n<pre><code>&lt;circle ... &gt;\n  &lt;animate \n  attributename=\"cx\"\n  values=\"50; 250; 500; 250;\"\n  dur=\"1s\"&gt;\n  &lt;/animate&gt;\n&lt;/circle&gt;\n</code></pre>\n\n<p>Finally, I can define how many times the animation repeats (<code>repeatcount</code>) and even after what period that repeating should stop (<code>repeatdur</code>):</p>\n<pre><code>&lt;circle ... &gt;\n  &lt;animate \n  attributename=\"cx\"\n  values=\"50; 250; 500; 250;\"\n  dur=\"1s\"\n  repeatcount=\"indefinite\"\n  repeatdur=\"180s\"&gt;\n&lt;/circle&gt;\n</code></pre>\n\n<p>Most SVG elements have attributes that can be animated. This title card from 1959’s <a href=\"https://yogibear.fandom.com/wiki/Brainy_Bear\">“Brainy Bear” episode</a> shows Yogi in a crazy scientist‘s brain experiment. Yogi’s head is under the dome, and energy radiates around him.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/7-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>To create the buzz around Yogi, my SVG includes three <code>path</code> elements, each with <code>opacity</code>, <code>stroke</code>, and <code>stroke-width</code> attributes, which can all be animated:</p>\n<pre><code>&lt;path opacity=\"1\" stroke=\"#fff\" stroke-width=\"5\" ... /&gt;\n</code></pre>\n\n<p>I animated each path’s <code>opacity</code>, changing its value from <code>1</code> to <code>.5</code> and back again:</p>\n<pre><code>&lt;path opacity=\"1\" ... &gt;\n  &lt;animate \n    attributename=\"opacity\"\n    values=\"1; .25; 1;\"\n    dur=\"1s\"\n    repeatcount=\"indefinite\"&gt;\n  &lt;/animate&gt;\n&lt;/path&gt;\n</code></pre>\n\n<p>Then, to radiate energy from Yogi, I specified when each animation should <code>begin</code>, using a different value for each <code>path</code>:</p>\n<pre><code>&lt;path ... &gt;\n  &lt;animate begin=\"0\" … &gt;\n&lt;/path&gt;\n\n&lt;path ... &gt;\n  &lt;animate begin=\".5s\" … &gt;\n&lt;/path&gt;\n\n&lt;path ... &gt;\n  &lt;animate begin=\"1s\" … &gt;\n&lt;/path&gt;\n</code></pre>\n\n<p>I’ll explain more about the <code>begin</code> property and how to start animations after this short commercial break.</p>\n<p>Try this yourself:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/8-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>I needed two types of transform animations to generate the effect of Yogi drifting gently downwards: <code>translate</code>, and <code>rotate</code>. I first added an <code>animatetransform</code> element to the group, which contains Yogi and his chute. I defined his initial vertical position — <code>1200</code> off the top of the <code>viewBox</code> — then translated his descent to <code>1000</code> over a 15-second duration:</p>\n<pre><code>&lt;g transform=\"translate(1200, -1200)\"&gt;\n  ...\n  &lt;animateTransform\n    attributeName=\"transform\"\n    type=\"translate\"\n    values=\"500,-1200; 500,1000\"\n    dur=\"15s\"\n    repeatCount=\"1\" \n  /&gt;\n&lt;/g&gt;\n</code></pre>\n\n<p>Yogi appears to fall from the sky, but the movement looks unrealistic. So, I added a second <code>animatetransform</code> element, this time with an indefinitely repeating +/- 5-degree rotation to swing Yogi from side to side during his descent:</p>\n<pre><code>&lt;animateTransform\n  attributeName=\"transform\"\n  type=\"rotate\"\n  values=\"-5; 5; -5\"\n  dur=\"14s\"\n  repeatCount=\"indefinite\"\n  additive=\"sum\" \n/&gt;\n</code></pre>\n\n<p>Try this yourself:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/9-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>By default, the arrow is set loose when the page loads. Blink, and you might miss it. To build some anticipation, I can <code>begin</code> the animation two seconds later:</p>\n<pre><code>&lt;animatetransform\n  attributename=\"transform\"\n  type=\"translate\"\n  from=\"0 0\"\n  to=\"750 0\"\n  dur=\".25s\"\n  begin=\"2s\"\n  fill=\"freeze\"\n/&gt;\n</code></pre>\n\n<p>Or, I can let the viewer take the shot when they click the arrow:</p>\n<pre><code>&lt;animatetransform\n  ...\n  begin=\"click\"\n/&gt;\n</code></pre>\n\n<p>And I can combine the click event and a delay, all with no JavaScript, just a smattering of SMIL:</p>\n<pre><code>&lt;animatetransform\n  ...\n  begin=\"click + .5s\"\n/&gt;\n</code></pre>\n\n<p>Try this yourself by clicking the arrow:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/10-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>To bring this title card to life, I needed two groups of paths: one for Yogi and the other for the dog. I translated them both off the left edge of the <code>viewBox</code>:</p>\n<pre><code>&lt;g class=\"dog\" transform=\"translate(-1000, 0)\"&gt;\n  ...\n&lt;/g&gt;\n\n&lt;g class=\"yogi\" transform=\"translate(-1000, 0)\"&gt;\n  ...\n&lt;/g&gt;\n</code></pre>\n\n<p>Then, I applied an <code>animatetransform</code> element to both groups, which moves them back into view:</p>\n<pre><code>&lt;!-- yogi --&gt;\n&lt;animateTransform\n  attributeName=\"transform\"\n  type=\"translate\"\n  from=\"-1000,0\"\n  to=\"0,0\"\n  dur=\"2s\"\n  fill=\"freeze\"\n/&gt;\n\n&lt;!-- dog --&gt;\n&lt;animateTransform\n  attributeName=\"transform\"\n  type=\"translate\"\n  from=\"-1000,0\"\n  to=\"0,0\"\n  dur=\".5s\"\n  fill=\"freeze\"\n/&gt;\n</code></pre>\n\n<p>This sets up the action, but the effect feels flat, so I added another pair of animations that bounce both characters:</p>\n<pre><code>&lt;!-- yogi --&gt;\n&lt;animateTransform\n  attributeName=\"transform\"\n  type=\"rotate\"\n  values=\"-1,0,450; 1,0,450; -1,0,450\"\n  dur=\".25s\"\n  repeatCount=\"indefinite\"\n/&gt;\n\n&lt;!-- dog --&gt;\n&lt;animateTransform\n  attributeName=\"transform\"\n  type=\"rotate\"\n  values=\"-1,0,450; 1,0,450; -1,0,450\"\n  dur=\"0.5s\"\n  repeatCount=\"indefinite\"\n/&gt;\n</code></pre>\n\n<p>Animations can begin when a page loads, after a specified time, or when clicked. And by naming them, they can also synchronise with other animations.</p>\n<p>I wanted Yogi to enter the frame first to build anticipation, with a short pause before other animations begin, synchronising to the moment he’s arrived. First, I added an ID to Yogi’s <code>translate</code> animation:</p>\n<pre><code>&lt;animateTransform\n  id=\"yogi\"\n  type=\"translate\"\n  ...\n/&gt;\n</code></pre>\n\n<blockquote><strong>Watch out</strong>: For a reason, I can’t, for the life of me, explain why Firefox won’t begin animations with an ID when the ID contains a hyphen. This isn’t smarter than the average browser, but replacing hyphens with underscores fixes the problem.</blockquote>\n\n<p>Then, I applied a <code>begin</code> to his <code>rotate</code> animation, which starts playing a half-second after the <code>#yogi</code> animation ends:</p>\n<pre><code>&lt;animateTransform\n  type=\"rotate\"\n  begin=\"yogi.end + .5s\"\n  ...\n/&gt;\n</code></pre>\n\n<p>I can build sophisticated sets of synchronised animations using the <code>begin</code> property and whether a named animation begins or ends. The bulldog chasing Yogi enters the frame two seconds after Yogi begins his entrance:</p>\n<pre><code>&lt;animateTransform\n  id=\"dog\"\n  type=\"translate\"\n  begin=\"yogi.begin + 2s\"\n  fill=\"freeze\"\n  ...\n/&gt;\n</code></pre>\n\n<p>One second after the dog has caught up with Yogi, a <code>rotate</code> transformation makes him bounce, too:</p>\n<pre><code>&lt;animateTransform\n  type=\"rotate\"\n  ...\n  begin=\"dog.begin + 1s\"\n  repeatCount=\"indefinite\" \n/&gt;\n</code></pre>\n\n<p>The background rectangles whizzing past are also synchronised, this time to one second before the bulldog ends his run:</p>\n<pre><code>&lt;rect ...&gt;\n  &lt;animateTransform\n    begin=\"dog.end + -1s\"\n  /&gt;\n&lt;/rect&gt;\n</code></pre>\n\n<p>Try this yourself:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/11-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>In <a href=\"https://yogibear.fandom.com/wiki/The_Runaway_Bear\">“The Runaway Bear”</a> from 1959, Yogi must avoid a hunter turning his head into a trophy. I wanted Yogi to leap in and out of the screen by making him follow a path. I also wanted to vary the speed of his dash: speeding up as he enters and exits, and slowing down as he passes the title text.</p>\n<p>I first added a <code>path</code> property, using its coordinate data to give Yogi a route to follow, and specified a two-second duration for my animation:</p>\n<pre><code>&lt;g&gt;\n  &lt;animateMotion\n    dur=\"2s\"\n    path=\"...\"\n  &gt;\n  &lt;/animateMotion&gt;\n&lt;/g&gt;\n</code></pre>\n\n<p>Alternatively, I could add a <code>path</code> element, leave it visible, or prevent it from being rendered by placing it inside a <code>defs</code> element:</p>\n<pre><code>&lt;defs&gt;\n  &lt;path id=\"yogi\" d=\"...\" /&gt;\n&lt;/defs&gt;\n</code></pre>\n\n<p>I can then reference that by using a <code>mpath</code> element inside my <code>animateMotion</code>:</p>\n<pre><code>&lt;animateMotion\n  ...\n  &lt;mpath href=\"#yogi\" /&gt;\n&lt;/animateMotion&gt;\n</code></pre>\n\n<p>I experimented with several paths before settling on the one that delivered the movement shape I was looking for:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-3-smil-not-dead/12-yogi-bear-title-card-recreations.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>One was too bouncy, one was too flat, but the third motion path was just right. Almost, as I also wanted to vary the speed of Yogi’s dash: speeding him up as he enters and exits and slowing him down as he passes the title text.</p>\n<p>The <code>keyPoints</code> property enabled me to specify points along the motion path and then adjust the duration Yogi spends between them. To keep things simple, I defined five points between <code>0</code> and <code>1</code>:</p>\n<pre><code>&lt;animateMotion\n  ...\n  keyPoints=\"0; .35; .5; .65; 1;\"\n&gt;\n&lt;/animateMotion&gt;\n</code></pre>\n\n<p>Then I added the same number of <code>keyTimes</code> values, separated by semicolons, to control the pacing of this animation:</p>\n<pre><code>&lt;animateMotion\n  ...\n  keyTimes=\"0; .1; .5; .95; 1;\"\n&gt;\n&lt;/animateMotion&gt;\n</code></pre>\n\n<p>Now, Yogi rushes through the first three <code>keyPoints</code>, slows down as he passes the title text, then speeds up again as he exits the <code>viewBox</code>.</p>\n<p>Try this yourself:</p>\n<p>See the Pen <a href=\"https://codepen.io/smashingmag/pen/oggryox\">Runaway Bear SVG animation [forked]</a> by <a href=\"https://codepen.io/malarkey\">Andy Clarke</a>.</p>\nSMIL’s Not Dead, Baby. SMIL’s Not Dead\n<p>With their ability to control transformations, animate complex motion paths, and synchronise multiple animations, SMIL animations in SVG are still powerful tools. They can bring design to life without needing a framework or relying on JavaScript. It’s compact, which makes it great for small SVG effects.</p>\n<p>SMIL includes the <code>begin</code> attribute, which makes chaining animations far more intuitive than with CSS. Plus, SMIL lives inside the SVG file, making it perfect for animations that travel with an asset. So, while SMIL is not modern by today’s standards and may be a little bit niche, it can still be magical. </p>\n<p>Don’t let the misconception that SMIL is “dead” stop you from using this fantastic tool.</p>\n<p>Google reversed its decision to deprecate SMIL almost a decade ago, so it remains a terrific choice for designers and developers who want <strong>simple</strong>, <strong>semantic ways</strong> to add animations to their designs.</p>",
      "_id": "684f2cdde823d9037acf450c"
    }
  },
  {
    "_id": "684f2c03e823d9037acf44d3",
    "title": "Дизайн-система за 90 днів",
    "content": "<p>Отже, ми хочемо створити нову дизайн-систему для вашого продукту. Як ми можемо запустити її з нуля? Чи починаємо ми з ключових зацікавлених сторін, аудиту UI або конвенцій найменування? І які <strong>критичні розмови</strong> нам потрібно провести на початку, щоб уникнути проблем у майбутньому?</p>\n<p>На щастя, є кілька <strong>корисних маленьких помічників</strong>, щоб розпочати — і це ті, на які я зазвичай покладаюся, коли ініціюю будь-які проекти дизайн-систем.</p>\nДизайн-система за 90 днів Canvas\n<p><a href=\"https://www.figma.com/community/file/1275210165201477676\"><strong>Дизайн-система за 90 днів Canvas (шаблон FigJam)</strong></a> — це зручний набір <strong>корисних запитань</strong> для початку роботи над дизайн-системою. По суті, це дорожня карта для обговорення всього, від цінності дизайн-системи до зацікавлених сторін, залучених команд і компонентів, з яких слід почати.</p>\n<p><img src=\"https://files.smashing.media/articles/mailing-91-design-system-90-days/1-mailing-91-design-system-90-days.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Зручний маленький помічник, щоб запустити дизайн-систему — і прийняти її! — за 90 днів. Створено для малих і великих компаній, які будують дизайн-систему або планують її створити. Люб'язно поділився Ден Молл.</p>\nПрактичні тактики дизайн-системи\n<p><a href=\"https://redesigningdesign.systems/tactics/all-tactics\"><strong>Тактики дизайн-системи</strong></a> — це практичний огляд тактик, які допоможуть дизайнерам <strong>просуватися з дизайн-системою на кожному етапі</strong> — від створення принципів системи до виявлення компонентів, до годин роботи дизайн-системи та консолідації між брендами. Чудова робота від неперевершеної Несс Гріксті.</p>\n<p><img src=\"https://files.smashing.media/articles/mailing-91-design-system-90-days/2-mailing-91-design-system-90-days.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\nАркуш дизайн-системи (PDF)\n<p><a href=\"https://medium.com/eightshapes-llc/picking-parts-products-people-a06721e81742\"><strong>Контрольний список дизайн-системи</strong></a> від Натана Кертіса (<a href=\"https://drive.google.com/file/d/1qXMUXKHaEXnLDOu99GCzTMY2XW6NnPe_/view\">завантажити PDF</a>) — це <strong>практичний 2-сторінковий аркуш</strong> для 60-хвилинної командної діяльності, розроблений для вибору правильних частин, продуктів і людей для вашої дизайн-системи.</p>\n<p><img src=\"https://files.smashing.media/articles/mailing-91-design-system-90-days/3-mailing-91-design-system-90-days.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Звичайно, мета дизайн-системи не в тому, щоб бути повністю всеосяжною або охоплювати кожен можливий компонент, який вам може знадобитися. Вона полягає в тому, щоб <strong>бути досить корисною</strong> для допомоги дизайнерам у швидшому створенні якісної роботи та бути досить гнучкою, щоб допомогти дизайнерам приймати рішення, а не приймати рішення за них.</p>\nКорисні запитання для початку\n<p>Цінність дизайн-системи полягає в її <strong>корисності та застосовності</strong> — для великої групи людей в організації. І <a href=\"https://www.linkedin.com/pulse/26-design-system-questions-answer-design-system-university/\">за словами Дена</a>, гарний початок — це визначити, де саме ця цінність буде найбільш корисною для вирішення <strong>критичних викликів і цілей</strong> компанії:</p>\n<ol>\n<li>Що є <strong>важливим для нашої організації</strong> на найвищому рівні?</li>\n<li>Хто є важливим для наших зусиль у створенні дизайн-системи?</li>\n<li>Які неофіційні системи вже існують у дизайні та коді?</li>\n<li>Які команди мають <strong>майбутні потреби</strong>, які система могла б вирішити?</li>\n<li>Які команди мають <strong>негайні потреби</strong>, які можуть розвинути нашу систему?</li>\n<li>З якими командами ми повинні і вже поговорили?</li>\n<li>З якими <strong>зацікавленими сторонами</strong> ми повинні і вже поговорили?</li>\n<li>Які <strong>потреби, бажання та занепокоєння</strong> мають наші зацікавлені сторони?</li>\n<li>Які компоненти потрібні командам продуктів або функцій зараз або незабаром?</li>\n<li>Які <strong>проблеми/можливості кінцевих користувачів</strong> може вирішити система?</li>\n<li>Що ми дізналися про використання інших дизайн-систем?</li>\n<li>Який наш <strong>повторюваний процес</strong> для роботи над продуктами?</li>\n<li>З якими компонентами ми почнемо?</li>\n<li>Які потреби, бажання та занепокоєння поділяють наші зацікавлені сторони?</li>\n<li>Де <strong>наші компоненти</strong> наразі використовуються або плануються до використання?</li>\n</ol>\nКорисні ресурси\n<p>Ось кілька інших корисних маленьких помічників, які можуть допомогти вам у ваших зусиллях щодо дизайн-системи:</p>\n<ul>\n<li><a href=\"https://www.linkedin.com/pulse/26-design-system-questions-answer-design-system-university/\">Запитання до дизайн-системи, на які потрібно відповісти в перші 90 днів</a>, від Дена Молла</li>\n<li><a href=\"https://designsystemcanvas.com/\">Дизайн-система Canvas (PDF / Figjam)</a>, від Паавана Буддхдева</li>\n<li><a href=\"https://www.figma.com/community/file/1360306476090347707/leands-framework\">LeanDS Framework (Figma)</a>, від Маріанни Ештон-Бут</li>\n<li><a href=\"https://www.linkedin.com/posts/vitalyfriedman_ux-design-figma-activity-7262738783358304257-uooc/\">Корисні шаблони UX для дизайнерів (Figma Kits)</a>, від вашого покірного слуги, Віталія Фрідмана</li>\n<li><a href=\"https://thedesignsystem.guide/\">Посібник з дизайн-системи</a>, від Роміни Кавчич</li>\n</ul>\nПідсумок\n<p>Канва часто виступає як <strong>відмінний початок розмови</strong>. Вона рідко буває повною, але піднімає теми та питання, які не були б виявлені на місці. Ми не матимемо відповідей на всі запитання відразу, але можемо почати <strong>рухатися в правильному напрямку</strong>, щоб перетворити зусилля щодо дизайн-системи на успіх.</p>\n<p>Щасливого викреслювання правильних пунктів!</p>\nЯк виміряти вплив UX та дизайну\n<p>Знайомтеся з <a href=\"https://measure-ux.com/\">Вимірюванням UX та впливу дизайну</a> (8 годин), <strong>практичним посібником для дизайнерів та UX-лідерів</strong>, щоб формувати, вимірювати та пояснювати ваш неймовірний вплив UX на бізнес. Записано та оновлено Віталієм Фрідманом. Використовуйте дружній код 🎟 <strong><code>IMPACT</code></strong>, щоб <strong>зекономити 20%</strong> сьогодні. <a href=\"https://measure-ux.com\">Перейти до деталей</a>.</p>\n\n\n    <a href=\"https://measure-ux.com/\">\n    <img src=\"https://files.smashing.media/articles/ux-metrics-video-course-release/measure-ux-and-design-impact-course.png\" style=\"width: 100%; height: auto; display: block;\">\n    </a>\n\n\n<div><div><ul><li><a href=\"#\">\nВідео + UX-тренінг</a></li><li><a href=\"#\">Тільки відео</a></li></ul><div><h3>Відео + UX-тренінг</h3>$&nbsp;495.00 $&nbsp;799.00\n<a href=\"https://smart-interface-design-patterns.thinkific.com/enroll/3081832?price_id=3951439\">\nОтримати відео + UX-тренінг<div></div></a><p>25 відеоуроків (8 годин) + <a href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-impact-design/\">Живий UX-тренінг</a>.<br>100 днів гарантії повернення грошей.</p></div><div><h3>Тільки відео</h3><div>$&nbsp;250.00$&nbsp;395.00</div>\n<a href=\"https://smart-interface-design-patterns.thinkific.com/enroll/3081832?price_id=3950630\">\nОтримати відеокурс<div></div></a><p>25 відеоуроків (8 годин). Оновлюється щорічно.<br>Також доступний як <a href=\"https://smart-interface-design-patterns.thinkific.com/enroll/3082557?price_id=3951421\">UX-пакет з 2 відеокурсами.</a></p></div></div></div>",
    "excerpt": "Отже, ми хочемо створити нову дизайн-систему для вашого продукту. Як ми можемо запустити її з нуля? Чи починаємо ми з ключових зацікавлених сторін, аудиту UI або конвенцій найменування? І які критичні розмови нам потрібно провести на початку, щоб уникнути проблем у майбутньому?",
    "sourceUrl": "https://smashingmagazine.com/2025/05/design-system-in-90-days/",
    "imageUrl": "https://files.smashing.media/articles/mailing-91-design-system-90-days/1-mailing-91-design-system-90-days.jpg",
    "categories": [],
    "author": "hello@smashingmagazine.com (Vitaly Friedman)",
    "source": "Smashing Magazine",
    "publishedAt": "2025-05-19T10:00:00.000Z",
    "status": "underreview",
    "createdAt": "2025-06-15T20:24:35.419Z",
    "updatedAt": "2025-06-15T20:28:40.935Z",
    "__v": 0,
    "original": {
      "title": "Design System In 90 Days",
      "content": "<p>So we want to set up a new design system for your product. How do we get it up and running from scratch? Do we start with key stakeholders, UI audits, or naming conventions? And what are some of the <strong>critical conversations</strong> we need to have early to avoid problems down the line?</p>\n<p>Fortunately, there are a few <strong>useful little helpers</strong> to get started — and they are the ones I tend to rely on quite a bit when initiating any design system projects.</p>\nDesign System In 90 Days Canvas\n<p><a href=\"https://www.figma.com/community/file/1275210165201477676\"><strong>Design System in 90 Days Canvas (FigJam template)</strong></a> is a handy set of <strong>useful questions</strong> to start a design system effort. Essentially, it’s a roadmap to discuss everything from the value of a design system to stakeholders, teams involved, and components to start with.</p>\n<p><img src=\"https://files.smashing.media/articles/mailing-91-design-system-90-days/1-mailing-91-design-system-90-days.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>A neat little helper to get a design system up and running — and adopted! — in 90 days. Created for small and large companies that are building a design system or plan to set up one. Kindly shared by Dan Mall.</p>\nPractical Design System Tactics\n<p><a href=\"https://redesigningdesign.systems/tactics/all-tactics\"><strong>Design System Tactics</strong></a> is a practical overview of tactics to help designers <strong>make progress with a design system at every stage</strong> — from crafting system principles to component discovery to design system office hours to cross-brand consolidation. Wonderful work by the one-and-only Ness Grixti.</p>\n<p><img src=\"https://files.smashing.media/articles/mailing-91-design-system-90-days/2-mailing-91-design-system-90-days.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\nDesign System Worksheet (PDF)\n<p><a href=\"https://medium.com/eightshapes-llc/picking-parts-products-people-a06721e81742\"><strong>Design System Checklist</strong></a> by Nathan Curtis (<a href=\"https://drive.google.com/file/d/1qXMUXKHaEXnLDOu99GCzTMY2XW6NnPe_/view\">download the PDF</a>) is a <strong>practical 2-page worksheet</strong> for a 60-minute team activity, designed to choose the right parts, products, and people for your design system.</p>\n<p><img src=\"https://files.smashing.media/articles/mailing-91-design-system-90-days/3-mailing-91-design-system-90-days.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Of course, the point of a design system is not to be fully comprehensive or cover every possible component you might ever need. It’s all about <strong>being useful enough</strong> to help designers produce quality work faster and being flexible enough to help designers make decisions rather than make decisions for them.</p>\nUseful Questions To Get Started With\n<p>The value of a design system lies in it <strong>being useful and applicable</strong> — for a large group of people in the organization. And <a href=\"https://www.linkedin.com/pulse/26-design-system-questions-answer-design-system-university/\">according to Dan</a>, a good start is to identify where exactly that value would be most helpful to tackle the company’s <strong>critical challenges and goals</strong>:</p>\n<ol>\n<li>What is <strong>important to our organization</strong> at the highest level?</li>\n<li>Who is important to our design system effort?</li>\n<li>What unofficial systems already exist in design and code?</li>\n<li>Which teams have <strong>upcoming needs</strong> that a system could solve?</li>\n<li>Which teams have <strong>immediate needs</strong> that can grow our system?</li>\n<li>Which teams should we and have we talked to?</li>\n<li>Which <strong>stakeholders</strong> should we and have we talked to?</li>\n<li>What <strong>needs, desires, and concerns</strong> do our stakeholders have?</li>\n<li>What components do product or feature teams need now or soon?</li>\n<li>What <strong>end-user problems/opportunities</strong> could a system address?</li>\n<li>What did we learn about using other design systems?</li>\n<li>What is our <strong>repeatable process</strong> for working on products?</li>\n<li>What components will we start with?</li>\n<li>What needs, desires, and concerns do our stakeholders share?</li>\n<li>Where are <strong>our components</strong> currently being used or planned for?</li>\n</ol>\nUseful Resources\n<p>Here are a few other useful little helpers that might help you in your design system efforts:</p>\n<ul>\n<li><a href=\"https://www.linkedin.com/pulse/26-design-system-questions-answer-design-system-university/\">Design System Questions To Answer In First 90 Days</a>, by Dan Mall</li>\n<li><a href=\"https://designsystemcanvas.com/\">Design System Canvas (PDF / Figjam)</a>, by Paavan Buddhdev</li>\n<li><a href=\"https://www.figma.com/community/file/1360306476090347707/leands-framework\">LeanDS Framework (Figma)</a>, by Marianne Ashton-Booth</li>\n<li><a href=\"https://www.linkedin.com/posts/vitalyfriedman_ux-design-figma-activity-7262738783358304257-uooc/\">Useful UX Templates For Designers (Figma Kits)</a>, by yours truly, Vitaly Friedman</li>\n<li><a href=\"https://thedesignsystem.guide/\">Design System Guide</a>, by Romina Kavcic</li>\n</ul>\nWrapping Up\n<p>A canvas often acts as a <strong>great conversation starter</strong>. It’s rarely complete, but it brings up topics and issues that one wouldn’t have discovered on the spot. We won’t have answers to all questions right away, but we can start <strong>moving in the right direction</strong> to turn a design system effort into a success.</p>\n<p>Happy crossing off the right tick boxes!</p>\nHow To Measure UX And Design Impact\n<p>Meet <a href=\"https://measure-ux.com/\">Measure UX &amp; Design Impact</a> (8h), a <strong>practical guide for designers and UX leads</strong> to shape, measure, and explain your incredible UX impact on business. Recorded and updated by Vitaly Friedman. Use the friendly code 🎟 <strong><code>IMPACT</code></strong> to <strong>save 20% off</strong> today. <a href=\"https://measure-ux.com\">Jump to the details</a>.</p>\n\n\n    <a href=\"https://measure-ux.com/\">\n    <img src=\"https://files.smashing.media/articles/ux-metrics-video-course-release/measure-ux-and-design-impact-course.png\" style=\"width: 100%; height: auto; display: block;\">\n    </a>\n\n\n<div><div><ul><li><a href=\"#\">\nVideo + UX Training</a></li><li><a href=\"#\">Video only</a></li></ul><div><h3>Video + UX Training</h3>$&nbsp;495.00 $&nbsp;799.00\n<a href=\"https://smart-interface-design-patterns.thinkific.com/enroll/3081832?price_id=3951439\">\nGet Video + UX Training<div></div></a><p>25 video lessons (8h) + <a href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-impact-design/\">Live UX Training</a>.<br>100 days money-back-guarantee.</p></div><div><h3>Video only</h3><div>$&nbsp;250.00$&nbsp;395.00</div>\n<a href=\"https://smart-interface-design-patterns.thinkific.com/enroll/3081832?price_id=3950630\">\nGet the video course<div></div></a><p>25 video lessons (8h). Updated yearly.<br>Also available as a <a href=\"https://smart-interface-design-patterns.thinkific.com/enroll/3082557?price_id=3951421\">UX Bundle with 2 video courses.</a></p></div></div></div>",
      "_id": "684f2cf8e823d9037acf450f"
    }
  },
  {
    "_id": "684f2c3ee823d9037acf4501",
    "title": "Створення Практичної Стратегії UX",
    "content": "<p>З мого досвіду, більшість команд UX в основному реалізують ідеї інших людей, а не ведуть розмову про користувацький досвід. Це відбувається тому, що зацікавлені сторони та особи, які приймають рішення, часто не мають глибокого розуміння можливостей та потенціалу UX. Без чіткої стратегії UX професіонали зводяться до суто тактичної ролі — створення каркасів та тестування рішень, розроблених іншими.</p>\n<p>Добре розроблена стратегія UX змінює цю динаміку. Вона допомагає командам UX взяти під контроль свою роль і продемонструвати справжнє лідерство в покращенні користувацького досвіду. Замість того, щоб просто реагувати на запити, ви можете <strong>проактивно визначати можливості</strong>, які приносять справжню бізнес-цінність. <strong>Стратегічний підхід</strong> також допомагає навчати зацікавлених сторін про повний потенціал UX, одночасно будуючи довіру через вимірювані результати.</p>\nСтратегія І Товстий Курильник\n<p><a href=\"https://boagworld.com/ux-strategy/\">Коли я керую командами у створенні стратегії UX</a>, я люблю тримати все просто. Я запозичую підхід з книги <a href=\"https://davidmaister.com/books/strategyfatsmoker/\"><em>Стратегія і Товстий Курильник</em></a> і розбиваю стратегію на три чіткі частини:</p>\n<ol>\n<li>Спочатку ми діагностуємо, де ми знаходимося сьогодні.</li>\n<li>Потім ми встановлюємо керівні політики, щоб спрямовувати нас.</li>\n<li>Нарешті, ми окреслюємо дії, щоб дістатися туди, куди ми хочемо.</li>\n</ol>\n<p>Дозвольте мені провести вас через кожну частину, щоб ви могли сформувати стратегію UX, яка буде одночасно <strong>практичною</strong> і <strong>потужною</strong>.</p>\nДіагностика: Знайте Свою Вихідну Точку\n<p>Перш ніж ми окреслимо будь-який план, нам потрібно оцінити нашу поточну ситуацію. Чітка діагностика показує, де ви можете зробити найбільший вплив. Вона також підкреслює прогалини, які ви повинні заповнити.</p>\n<h3>Визначте Невдачі Статус-Кво</h3>\n<p>Почніть з називання того, що не працює. Ви можете виявити, що у вашій організації немає команди UX. Або команда має занадто малий бюджет. Іноді ви виявляєте, що оцінки задоволеності користувачів знижуються. Оформіть ці виклики в бізнес-термінах. Наприклад, повільний процес реєстрації може коштувати вам 20 відсотків нових реєстрацій щомісяця. Це пов'язує UX з доходами і привертає увагу.</p>\n<p>Після того, як у вас є список невдач, запитайте себе:</p>\n<blockquote>Який результат кожна невдача шкодить?</blockquote>\n\n<p>Повільний процес оформлення замовлення може зменшити продажі в електронній комерції. Складна навігація може зменшити утримання клієнтів. Пов'язування проблем UX з бізнес-метриками робить аргументи для змін.</p>\n<h3>Карта Бажаного Досвіду</h3>\n<p>Далі, візуалізуйте <a href=\"https://www.smashingmagazine.com/2015/01/all-about-customer-journey-mapping/\">яким би був покращений шлях</a>. Швидкий спосіб — створити дві прості карти шляху. Одна показує поточний досвід. Інша показує ідеальний шлях. Виділіть ключові кроки, такі як <strong>відкриття</strong>, <strong>реєстрація</strong>, <strong>впровадження</strong> та <strong>підтримка</strong>. Потім запитайте:</p>\n<blockquote>Як цей новий шлях допоможе досягти наших бізнес-цілей?</blockquote>\n\n<p>Можливо, швидше впровадження може знизити витрати на підтримку. Або спрощений процес оформлення замовлення може збільшити середню вартість замовлення.</p>\n<p>Дозвольте мені поділитися прикладом з реального світу. Працюючи з <a href=\"https://www.samaritans.org/\">Samaritans</a>, благодійною організацією з психічного здоров'я у Великобританії, ми спочатку окреслили їх поточний процес підтримки. Хоча їх телефонна підтримка була відмінною, вони мали труднощі з підтримкою через електронну пошту та текстові повідомлення, і не мали присутності на платформах соціальних мереж. Це було в основному тому, що волонтерам було важко керувати кількома системами комунікації.</p>\n<p><img src=\"https://files.smashing.media/articles/building-practical-ux-strategy-framework/1-mapping-current-experience-samaritan-users.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Ми потім створили <strong>бажану карту шляху</strong>, яка показувала уніфіковану систему, де волонтери могли керувати всіма каналами комунікації через один інтерфейс. Це чітке бачення дало організації конкретну мету, яка покращила б досвід як для користувачів, які шукають допомоги, так і для волонтерів, які надають підтримку.</p>\n<p><img src=\"https://files.smashing.media/articles/building-practical-ux-strategy-framework/2-mapping-aspirational-experience.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Це бачення дає всім щось, на що можна орієнтуватися. Воно також спрямовує ваші подальші дії, показуючи <strong>цільовий стан</strong>.</p>\n\n<p>Далі, зверніть увагу на те, з чим ви маєте працювати. Перерахуйте членів вашої команди UX та їхні навички. Зазначте будь-який бюджет, виділений на інструменти дослідження або ліцензії на програмне забезпечення. Потім визначте, де ви маєте вплив у всій організації. Які команди вже шукають вашої поради? Хто довіряє вашим рекомендаціям? Це може бути продуктова група або маркетинг. Ви будете спиратися на цих союзників, щоб поширювати найкращі практики UX.</p>\n<p>Нарешті, розгляньте, хто ще має значення. Чи є власники політик, керівники процесів або керівники, яких вам потрібно залучити? Запишіть імена та ролі, щоб ви могли залучити їх пізніше.</p>\n<h3>Визначте Свої Обмеження</h3>\n<p>Кожна стратегія повинна існувати в межах реальних обмежень. Можливо, є замороження найму. Або ІТ-системи не підтримують значні зміни. Перерахуйте будь-які технічні, бюджетні або політичні обмеження, з якими ви стикаєтеся. Потім прийміть їх. Ви розробите свою стратегію, щоб приносити цінність без вимоги неможливих змін. Робота в межах обмежень <strong>підвищує вашу довіру</strong>. Це також <strong>змушує до креативності</strong>.</p>\n<p>Завершивши діагностику, ми знаємо, де ми стоїмо. Далі, давайте подивимося, як спрямувати наші зусилля.</p>\nКерівні Політики: Встановіть Північну Зірку\n<p>Керівні політики дають вам обмежувачі. Вони допомагають вирішити, які можливості переслідувати, а які пропустити. Ці політики відображають ваші <strong>пріоритети</strong> та найкращий шлях вперед.</p>\n<h3>Виберіть Тактичний Або Стратегічний Підхід</h3>\n<p>На початку ви повинні вибрати, як ваша команда UX буде працювати. У вас є два широких варіанти:</p>\n<ul>\n<li><strong>Тактичний</strong><br>Ви вбудовуєте людей UX у конкретні проекти. Вони проводять тести та розробляють інтерфейси вручну. Це вимагає більшої команди. Я люблю співвідношення одного професіонала UX на кожних двох розробників.</li>\n<li><strong>Стратегічний</strong><br>Ви дієте як <a href=\"https://en.wikipedia.org/wiki/Center_of_excellence\">центр досконалості</a>. Ви консультуєте інші команди. Ви створюєте керівництва, проводите семінари та пропонуєте інструменти. Це вимагає менше рук, але ширшого впливу.</li>\n</ul>\n<p>Зважте свої ресурси проти своїх цілей. Якщо вам потрібно швидко рухатися по багатьох проектах, обирайте тактичний підхід. Якщо ви хочете змінити мислення, працюйте стратегічно. Виберіть підхід з найбільшими шансами на успіх.</p>\n<h3>Визначте Метод Пріоритизації</h3>\n<p>Ви зіткнетеся з багатьма запитами на роботу UX. Чіткий спосіб їх сортування заощаджує головний біль. Протягом років я використовував простий <a href=\"https://boagworld.com/audio/introducing-digital-triage/\">цифровий тріаж</a>. Ви оцінюєте кожен запит на основі <strong>впливу</strong>, <strong>зусиль</strong> та <strong>ризику</strong>. Потім ви працюєте над елементами з найвищими оцінками першими. Ви можете адаптувати цю модель, як вам подобається. Головне — мати повторюваний, справедливий спосіб сказати так або ні.</p>\n<h3>Створіть Посібник Принципів</h3>\n<p><a href=\"https://www.smashingmagazine.com/2025/01/digital-playbook-crucial-counterpart-design-system/\">Посібник</a> містить ваші основні принципи дизайну, стандартні операційні процедури та шаблони. Він може включати:</p>\n<ul>\n<li>Систему дизайну для шаблонів UI;</li>\n<li>Стандарти щодо доступності або досліджень користувачів;</li>\n<li>Керівництва для ключових завдань, таких як написання для вебу;</li>\n<li>Шаблони для загальних дій, таких як інтерв'ю з користувачами.</li>\n</ul>\n<p>Цей посібник стає спільним довідником вашої команди. Він допомагає іншим повторювати ваш процес. Він також захоплює знання, які вам потрібні, коли ваша команда зростає.</p>\n<p><img src=\"https://files.smashing.media/articles/building-practical-ux-strategy-framework/3-playbook-design-principles.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<h3>Плануйте Свою Комунікацію</h3>\n<p>Стратегія зазнає невдачі, коли люди не знають про неї. Вам потрібен план для залучення зацікавлених сторін. Я вважаю корисним використовувати <a href=\"https://www.forbes.com/advisor/business/raci-chart/\">RACI-діаграму</a> — хто є <strong>Відповідальним</strong>, <strong>Підзвітним</strong>, <strong>Консультованим</strong> та <strong>Інформованим</strong>. Потім вирішіть:</p>\n<ul>\n<li>Як часто ви будете надсилати оновлення?</li>\n<li>Які канали ви повинні використовувати (електронна пошта, Slack, щотижневі демонстрації)?</li>\n<li>Хто веде кожну розмову?</li>\n</ul>\n<p>Чітка, регулярна комунікація тримає всіх у курсі. Вона також виявляє занепокоєння на ранніх стадіях, щоб ви могли їх вирішити.</p>\n<p>З керівними політиками на місці, у вас є чіткий спосіб вирішити, над чим працювати. Тепер давайте перейдемо до реалізації.</p>\nПлан Дій: Втілення Стратегії В Життя\n<p>Дії — це конкретні кроки, які ви робите, щоб реалізувати свої керівні політики. Вони охоплюють проекти, які ви запускаєте, підтримку, яку ви надаєте, та ризики, які ви управляєте.</p>\n<h3>Окресліть Ключові Проекти Та Послуги</h3>\n<p>Почніть з переліку проектів, які ви будете реалізовувати. Це можуть бути:</p>\n<ul>\n<li>Проведення фази відкриття для нового продукту.</li>\n<li>Створення системи дизайну для вашої маркетингової команди.</li>\n<li>Проведення тестів користувачів на вашому основному потоці.</li>\n</ul>\n<p>Для кожного проекту зазначте <em>що</em> ви будете доставляти та <em>коли</em>. Ви можете використовувати свої оцінки цифрового тріажу, щоб вибрати найвищі пріоритети. Тримайте обсяг кожного проекту досить малим, щоб завершити його за кілька спринтів. Таким чином, ви швидко доведете цінність.</p>\n<h3>Пропонуйте Навчання Та Інструменти</h3>\n<p>Якщо ви обираєте стратегічний підхід, вам потрібно наділити інших. Плануйте семінари на основні теми UX. Записуйте короткі відео про найкращі практики тестування. Створюйте швидкі довідкові посібники. Курируйте список інструментів: </p>\n<ul>\n<li>Додатки для прототипування,</li>\n<li>Платформи для досліджень,</li>\n<li>Панелі аналітики.</li>\n</ul>\n<p>Зробіть ці ресурси легкодоступними у вашому посібнику.</p>\n<h3>Призначте Ролі Зацікавлених Сторін</h3>\n<p>Ваша стратегія потребує підтримки з боку керівництва. Визначте старшого спонсора, який може подолати перешкоди. Окресліть, що вам від них потрібно. Можливо, це підтримка нового бюджетного рядка або затвердження ключових наймів. Також визначте інших співпрацівників. Хто з боку продукту допоможе вам визначити обсяг нових функцій? Хто з ІТ-команди підтримає інструменти дослідження користувачів? Чіткі ролі уникають плутанини.</p>\n<h3>Управління Ризиками Та Перешкодами</h3>\n<p>Жоден план не обходиться без проблем. Перерахуйте свої найбільші ризики, такі як:</p>\n<ul>\n<li>Замороження найму затримує тактичні найми;</li>\n<li>Ключові зацікавлені сторони втрачають інтерес;</li>\n<li>Технічний борг уповільнює нові релізи.</li>\n</ul>\n<p>Для кожного ризику запишіть, як ви з ним впораєтеся. Можливо, вам слід перейти на повністю стратегічний підхід, якщо найм затримується. Або ви можете надсилати щотижневі односторінкові оновлення, щоб знову залучити спонсорів. Наявність запасного плану допомагає залишатися спокійним, коли все йде не так.</p>\n<p>Перш ніж ми завершимо, давайте поговоримо про те, як зробити стратегію стійкою.</p>\nВбудовування UX У Культуру\n<p>Стратегія сяє лише тоді, коли ви глибоко вбудовуєте її в культуру вашої організації. Ось як це зробити:</p>\n<ul>\n<li><strong>Створіть обізнаність та ентузіазм</strong><ul>\n<li>Проводьте регулярні сесії \"обід і навчання\", щоб продемонструвати успіхи UX.</li>\n<li>Організуйте щорічний день UX або міні-конференцію, щоб підвищити видимість.</li>\n<li>Створіть щомісячний салон UX, де команди діляться викликами та перемогами.</li>\n</ul>\n</li>\n<li><strong>Зробіть UX видимим та відчутним</strong><ul>\n<li>Відображайте персони та карти шляху в офісних просторах.</li>\n<li>Додайте принципи дизайну до повсякденних предметів, таких як мишки та чашки.</li>\n<li>Діліться метриками успіху та поліпшеннями в корпоративних комунікаціях.</li>\n</ul>\n</li>\n<li><strong>Вбудуйте UX у процеси</strong><ul>\n<li>Встановіть чіткі політики UX та найкращі практики.</li>\n<li>Переглядайте та оновлюйте процедури, які можуть заважати хорошому користувацькому досвіду.</li>\n<li>Створіть здорову конкуренцію між командами через метрики UX.</li>\n</ul>\n</li>\n</ul>\n<p>Ці тактики перетворюють вашу стратегію з документа в організаційний рух. Вони сприяють культурі, де кожен думає про користувацький досвід, а не тільки команда UX. Пам'ятайте, що культурні зміни вимагають часу — але послідовні, видимі зусилля поступово змінять мислення в організації.</p>\nРеалізація Вашої Стратегії UX: Від Плану До Практики\n<p>Ми почали з діагностики вашого поточного стану. Потім ми встановили політики для спрямування ваших зусиль. Нарешті, ми окреслили план дій для досягнення результатів. Ця триступенева структура тримає вашу роботу UX прив'язаною до реальних бізнес-потреб. Вона також дає вам ясність, фокус та довіру.</p>\n<p>Однак створення стратегії — це легка частина — реалізація її є справжнім викликом. Саме тому книга <em>Стратегія і Товстий Курильник</em> має свою характерну назву. Так само, як людина з надмірною вагою або курець знає, що саме їй потрібно робити, ми часто знаємо, якою повинна бути наша стратегія UX. Складна частина — це дотримання її та втілення в реальність.</p>\n<p>Успіх вимагає <strong>послідовного залучення</strong> та <strong>наполегливості</strong> перед обличчям невдач. Як мудро зазначив Вінстон Черчилль, </p>\n<blockquote>“Успіх — це перехід від невдачі до невдачі без втрати ентузіазму.”</blockquote>\n\n<p>Це ідеально відображає мислення, необхідне для реалізації успішної стратегії UX — залишатися відданим своєму баченню, навіть коли стикаєшся з перешкодами та невдачами.</p>",
    "excerpt": "З мого досвіду, більшість команд UX в основному реалізують ідеї інших людей, а не ведуть розмову про користувацький досвід. Це відбувається тому, що зацікавлені сторони та особи, які приймають рішення, часто не мають глибокого розуміння можливостей та потенціалу UX. Без чіткої стратегії UX професіонали зводяться до суто тактичної ролі — створення каркасів та тестування рішень, розроблених іншими.",
    "sourceUrl": "https://smashingmagazine.com/2025/05/building-practical-ux-strategy-framework/",
    "imageUrl": "https://files.smashing.media/articles/building-practical-ux-strategy-framework/1-mapping-current-experience-samaritan-users.png",
    "categories": [],
    "author": "hello@smashingmagazine.com (Paul Boag)",
    "source": "Smashing Magazine",
    "publishedAt": "2025-05-16T11:00:00.000Z",
    "status": "underreview",
    "createdAt": "2025-06-15T20:25:34.884Z",
    "updatedAt": "2025-06-15T20:29:16.267Z",
    "__v": 0,
    "original": {
      "title": "Building A Practical UX Strategy Framework",
      "content": "<p>In my experience, most UX teams find themselves primarily implementing other people’s ideas rather than leading the conversation about user experience. This happens because stakeholders and decision-makers often lack a deep understanding of UX’s capabilities and potential. Without a clear UX strategy framework, professionals get relegated to a purely tactical role — wireframing and testing solutions conceived by others.</p>\n<p>A well-crafted UX strategy framework changes this dynamic. It helps UX teams take control of their role and demonstrate real leadership in improving the user experience. Rather than just responding to requests, you can <strong>proactively identify opportunities</strong> that deliver genuine business value. <strong>A strategic approach</strong> also helps educate stakeholders about UX’s full potential while building credibility through measurable results.</p>\nStrategy And The Fat Smoker\n<p><a href=\"https://boagworld.com/ux-strategy/\">When I guide teams on creating a UX strategy</a>, I like to keep things simple. I borrow an approach from the book <a href=\"https://davidmaister.com/books/strategyfatsmoker/\"><em>Strategy and the Fat Smoker</em></a> and break strategy into three clear parts:</p>\n<ol>\n<li>First, we diagnose where we are today.</li>\n<li>Then, we set guiding policies to steer us.</li>\n<li>Finally, we outline actions to get us where we want to go.</li>\n</ol>\n<p>Let me walk you through each part so you can shape a UX strategy that feels both <strong>practical</strong> and <strong>powerful</strong>.</p>\nDiagnosis: Know Your Starting Point\n<p>Before we outline any plan, we need to assess our current situation. A clear diagnosis shows where you can make the biggest impact. It also highlights the gaps you must fill.</p>\n<h3>Identify Status Quo Failures</h3>\n<p>Start by naming what isn’t working. You might find that your organization lacks a UX team. Or the team has a budget that is too small. Sometimes you uncover that user satisfaction scores are slipping. Frame these challenges in business terms. For example, a slow sign‑up flow may be costing you 20 percent of new registrations each month. That ties UX to revenue and grabs attention.</p>\n<p>Once you have a list of failures, ask yourself:</p>\n<blockquote>What outcome does each failure hurt?</blockquote>\n\n<p>A slow checkout might reduce e‑commerce sales. Complicated navigation may dent customer retention. Linking UX issues to business metrics makes the case for change.</p>\n<h3>Map The Aspirational Experience</h3>\n<p>Next, visualize <a href=\"https://www.smashingmagazine.com/2015/01/all-about-customer-journey-mapping/\">what an improved journey would look like</a>. A quick way is to create two simple journey maps. One shows the current experience. The other shows an ideal path. Highlight key steps like <strong>discovery</strong>, <strong>sign‑up</strong>, <strong>onboarding</strong>, and <strong>support</strong>. Then ask:</p>\n<blockquote>How will this new journey help meet our business goals?</blockquote>\n\n<p>Maybe faster onboarding can cut support costs. Or a streamlined checkout can boost average order value.</p>\n<p>Let me share a real-world example. When working with <a href=\"https://www.samaritans.org/\">the Samaritans</a>, a UK mental health charity, we first mapped their current support process. While their telephone support was excellent, they struggled with email and text support, and had no presence on social media platforms. This was largely because volunteers found it difficult to manage multiple communication systems.</p>\n<p><img src=\"https://files.smashing.media/articles/building-practical-ux-strategy-framework/1-mapping-current-experience-samaritan-users.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>We then created an <strong>aspirational journey map</strong> showing a unified system where volunteers could manage all communication channels through a single interface. This clear vision gave the organization a concrete goal that would improve the experience for both users seeking help and the volunteers providing support.</p>\n<p><img src=\"https://files.smashing.media/articles/building-practical-ux-strategy-framework/2-mapping-aspirational-experience.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>This vision gives everyone something to rally around. It also guides your later actions by showing the <strong>target state</strong>.</p>\n\n<p>Next, turn your attention to what you have to work with. List your UX team members and their skills. Note any budget set aside for research tools or software licenses. Then identify where you have influence across the organization. Which teams already seek your advice? Who trusts your guidance? That might be the product group or marketing. You’ll lean on these allies to spread UX best practices.</p>\n<p>Finally, consider who else matters. Are there policy owners, process leads, or executives you need on board? Jot down names and roles so you can loop them in later.</p>\n<h3>Spot Your Constraints</h3>\n<p>Every strategy must live within real‑world limits. Maybe there’s a headcount freeze. Or IT systems won’t support a major overhaul. List any technical, budget, or policy limits you face. Then accept them. You’ll design your strategy to deliver value without asking for impossible changes. Working within constraints <strong>boosts your credibility</strong>. It also <strong>forces creativity</strong>.</p>\n<p>With the diagnosis complete, we know where we stand. Next, let’s look at how to steer our efforts.</p>\nGuiding Policies: Set the North Star\n<p>Guiding policies give you guardrails. They help you decide which opportunities to chase and which to skip. These policies reflect your <strong>priorities</strong> and the best path forward.</p>\n<h3>Choose A Tactical Or Strategic Approach</h3>\n<p>Early on, you must pick how your UX team will operate. You have two broad options:</p>\n<ul>\n<li><strong>Tactical</strong><br>You embed UX people on specific projects. They run tests and design interfaces hands‑on. This needs a bigger team. I like a ratio of one UX pro for every two developers.</li>\n<li><strong>Strategic</strong><br>You act as a <a href=\"https://en.wikipedia.org/wiki/Center_of_excellence\">center of excellence</a>. You advise other teams. You build guidelines, run workshops, and offer tools. This needs fewer hands but a broader influence.</li>\n</ul>\n<p>Weigh your resources against your goals. If you need to move fast on many projects, go tactical. If you want to shift mindsets, work strategically. Choose the approach with the best chance of success.</p>\n<h3>Define A Prioritization Method</h3>\n<p>You’ll face many requests for UX work. A clear way to sort them saves headaches. Over the years, I’ve used a simple <a href=\"https://boagworld.com/audio/introducing-digital-triage/\">digital triage</a>. You score each request based on <strong>impact</strong>, <strong>effort</strong>, and <strong>risk</strong>. Then, you work on the highest‑scoring items first. You can adapt this model however you like. The point is to have a repeatable, fair way to say yes or no.</p>\n<h3>Create A Playbook Of Principles</h3>\n<p><a href=\"https://www.smashingmagazine.com/2025/01/digital-playbook-crucial-counterpart-design-system/\">A playbook</a> holds your core design principles, standard operating procedures, and templates. It might include:</p>\n<ul>\n<li>A design system for UI patterns;</li>\n<li>Standards around accessibility or user research;</li>\n<li>Guides for key tasks such as writing for the web;</li>\n<li>Templates for common activities like user interviews.</li>\n</ul>\n<p>This playbook becomes your team’s shared reference. It helps others repeat your process. It also captures the know‑how you need as your team grows.</p>\n<p><img src=\"https://files.smashing.media/articles/building-practical-ux-strategy-framework/3-playbook-design-principles.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<h3>Plan Your Communication</h3>\n<p>Strategy fails when people don’t know about it. You need a plan to engage stakeholders. I find it helpful to use a <a href=\"https://www.forbes.com/advisor/business/raci-chart/\">RACI chart</a> — who is <strong>Responsible</strong>, <strong>Accountable</strong>, <strong>Consulted</strong>, and <strong>Informed</strong>. Then decide:</p>\n<ul>\n<li>How often will you send updates?</li>\n<li>Which channels should you use (email, Slack, weekly demos)?</li>\n<li>Who leads each conversation?</li>\n</ul>\n<p>Clear, regular communication keeps everyone looped in. It also surfaces concerns early so you can address them.</p>\n<p>With guiding policies in place, you have a clear way to decide what to work on. Now, let’s turn to making things happen.</p>\nAction Plan: Bring Strategy To Life\n<p>Actions are the concrete steps you take to deliver on your guiding policies. They cover the projects you run, the support you give, and the risks you manage.</p>\n<h3>Outline Key Projects And Services</h3>\n<p>Start by listing the projects you’ll tackle. These might be:</p>\n<ul>\n<li>Running a discovery phase for a new product.</li>\n<li>Building a design system for your marketing team.</li>\n<li>Conducting user tests on your main flow.</li>\n</ul>\n<p>For each project, note <em>what</em> you will deliver and <em>when</em>. You can use your digital triage scores to pick the highest priorities. Keep each project scope small enough to finish in a few sprints. That way, you prove value quickly.</p>\n<h3>Offer Training And Tools</h3>\n<p>If you choose a strategic approach, you need to empower others. Plan workshops on core UX topics. Record short videos on testing best practices. Build quick reference guides. Curate a list of tools: </p>\n<ul>\n<li>Prototyping apps,</li>\n<li>Research platforms,</li>\n<li>Analytics dashboards.</li>\n</ul>\n<p>Make these resources easy to find in your playbook.</p>\n<h3>Assign Stakeholder Roles</h3>\n<p>Your strategy needs executive backing. Identify a senior sponsor who can break through roadblocks. Outline what you need them to do. Maybe it’s championing a new budget line or approving key hires. Also, pin down other collaborators. Who on the product side will help you scope new features? Who on the IT team will support user research tooling? Getting clear roles avoids confusion.</p>\n<h3>Manage Risks and Barriers</h3>\n<p>No plan goes off without a hitch. List your biggest risks, such as:</p>\n<ul>\n<li>A hiring freeze delays tactical hires;</li>\n<li>Key stakeholders lose interest;</li>\n<li>Technical debt slows down new releases.</li>\n</ul>\n<p>For each risk, jot down how you’ll handle it. Maybe you should shift to a fully strategic approach if hiring stalls. Or you can send a weekly one‑page update to reengage sponsors. Having a fallback keeps you calm when things go sideways.</p>\n<p>Before we wrap up, let’s talk about making strategy stick.</p>\nEmbedding UX Into The Culture\n<p>A strategy shines only if you deeply embed it into your organization’s culture. Here’s how to make that happen:</p>\n<ul>\n<li><strong>Build awareness and enthusiasm</strong><ul>\n<li>Run regular “lunch and learn” sessions to showcase UX wins.</li>\n<li>Host an annual UX day or mini-conference to boost visibility.</li>\n<li>Create a monthly UX salon where teams share challenges and victories.</li>\n</ul>\n</li>\n<li><strong>Make UX visible and tangible</strong><ul>\n<li>Display personas and journey maps in office spaces.</li>\n<li>Add design principles to everyday items like mousepads and mugs.</li>\n<li>Share success metrics and improvements in company communications.</li>\n</ul>\n</li>\n<li><strong>Embed UX into processes</strong><ul>\n<li>Establish clear UX policies and best practices.</li>\n<li>Review and update procedures that might hinder a good user experience.</li>\n<li>Create a healthy competition between teams through UX metrics.</li>\n</ul>\n</li>\n</ul>\n<p>These tactics transform your strategy from a document into an organizational movement. They foster a culture where everyone thinks about user experience, not just the UX team. Remember, cultural change takes time — but consistent, visible efforts will gradually shift mindsets across the organization.</p>\nImplementing Your UX Strategy: From Plan To Practice\n<p>We started by diagnosing your current state. Then we set policies to guide your efforts. Finally, we laid out an action plan to deliver results. This three-part framework keeps your UX work tied to real business needs. It also gives you clarity, focus, and credibility.</p>\n<p>However, creating a strategy is the easy part — implementing it is where the real challenge lies. This is precisely why the book <em>Strategy and the Fat Smoker</em> carries its distinctive title. Just as someone who is overweight or smokes knows exactly what they need to do, we often know what our UX strategy should be. The difficult part is following through and making it a reality.</p>\n<p>Success requires <strong>consistent engagement</strong> and <strong>persistence</strong> in the face of setbacks. As Winston Churchill wisely noted, </p>\n<blockquote>“Success is going from failure to failure with no loss of enthusiasm.”</blockquote>\n\n<p>This perfectly captures the mindset needed to implement a successful UX strategy — staying committed to your vision even when faced with obstacles and setbacks.</p>",
      "_id": "684f2d1ce823d9037acf4512"
    }
  },
  {
    "_id": "684f2c3ee823d9037acf4503",
    "title": "Менше Ідей: Нетрадиційний Підхід до Креативності",
    "content": "<p>Що спільного між Суецьким каналом, римською богинею Лібертас та стародавніми єгипетськими скульптурами? Статуя Свободи.</p>\n<p>Здивовані? Звісно, але зв'язки стають зрозумілими, коли ви знаєте історію, яку розповіла психолог з Колумбійського університету Шіна Ієнгар в недавньому епізоді <em>Hidden Brain</em>.</p>\n<p>Французький художник Фредерік Бартольді черпав натхнення з єгипетських скульптур, коли подав дизайн для скульптури, яка мала бути побудована на Суецькому каналі.</p>\n<p>Цей план для скульптури на Суецькому каналі провалився, що змусило Бартольді та його друга зібрати кошти на створення скульптури як подарунка Сполученим Штатам. Бартольді розробив скульптуру після вивчення складностей римської богині Лібертас, значущого жіночого символу в кінці 1800-х років. Він також змоделював статую на Ізабель Бойєр, якій було 36 років у 1878 році. Нарешті, Бартольді втілив обличчя своєї матері в запропонованому дизайні. Результат? Статуя Свободи.</p>\n<p>Нетрадиційний, але методичний підхід Бартольді дав один з найвідоміших скульптур у світі.</p>\n<p>Як він це зробив? Чи дозволив він своєму розуму розгулятися? Чи створював він нескінченні списки або малював сотні планів для кожної скульптури? Чи був він прихильником мозкового штурму 19-го століття?</p>\nПроблема\n<p>«Так», — буде відповідь багатьох експертів з інновацій сьогодні. Від стендапів до воркшопів і шаблонів до дошок, отримання творчих соків часто включає мозковий штурм разом з нагадуванням, що <em>«немає поганих ідей»</em> і <em>«більше ідей краще»</em>. Практикований і повторюваний так часто, цей підхід до креативності повинен працювати, чи не так?</p>\n<p>Ні, каже Ієнгар. <strong>Занадто багато ідей заважають креативності</strong>, тому що людський мозок може управляти лише кількома ідеями одночасно.</p>\n<blockquote>«Креативність вимагає, щоб у вас було багато шматочків, і не лише щоб ви могли їх зберігати в пам'яті таким чином, щоб ви могли сказати, що вони є, але щоб ви могли продовжувати маніпулювати ними в багатьох різних способах. І це означає, що, знаєте, щоб ваш розум міг бути достатньо гнучким для цього, йому потрібно менше шматочків.»<br><br>— Hidden Brain, “<a href=\"https://hiddenbrain.org/podcast/how-to-be-more-creative/\">Як бути більш креативним</a>”</blockquote>\n\n<p>Докази цієї точки зору включають <a href=\"https://journals.sagepub.com/doi/abs/10.1509/jmr.10.0407?journalCode=mrja\">дослідження, опубліковане Анн-Лор Сельє з HEC Paris та Дарреном В. Далем з Британської Колумбії</a>. Автори порівнювали в'язання та рукоділля у двох експериментальних дослідженнях. Результати показали, що <strong>обмеження кількості матеріалів та інших творчих вкладів підвищило креативність</strong> учасників дослідження. Причиною була здатність учасників більше насолоджуватися творчим процесом, що підвищило їх творчу продуктивність.</p>\n<p>Кілька років тому я мав подібний досвід під час планування серії досліджень. Як і в будь-якій ініціативі, визначення обсягу було ключовим. Проблема? Замість вибору з двох або трьох чітко визначених варіантів, команда обговорювала кілька тем одночасно, а потім додавала серію ідей про найкращий формат для представлення цих тем: списки, таблиці, графіки, зображення та блок-схеми. Результати виглядали приблизно так.</p>\n<p><img src=\"https://files.smashing.media/articles/fewer-ideas-unconventional-approach-creativity/1-messy-whiteboard.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Безладна дошка не є поганою самою по собі. Питання в тому, чи блокують або підвищують такі результати мозкового штурму креативність. Якщо дошка вище здається вам переважною, варто розглянути більш структурований процес для креативності та генерації ідей.</p>\nРішення: Три Способи Підвищити Креативність\n<p>Так само, як Бартольді підходив до своїх дизайнів методично, сучасні дизайнери можуть отримати користь від обмежень і структури.</p>\n<p>У цій статті я висвітлю три техніки, які підвищують креативність:</p>\n<ul>\n<li><a href=\"#tip-1-controlled-curiosity\">Контрольована цікавість</a></li>\n<li><a href=\"#tip-2-imposing-constraints-and-making-a-plan\">Накладання обмежень та складання плану</a></li>\n<li><a href=\"#tip-3-look-to-other-domains\">Погляд на інші сфери</a></li>\n</ul>\n<h3>Порада 1: Контрольована Цікавість</h3>\n<p>У сучасному світі легко потрапити в пастку віри, що креативність походить від простого впливу на себе потоком інформації — нескінченне прокручування, споживання випадкових фактів і заповнення свого розуму розрізненими точками даних. Це пастка, тому що бездумне поглинання інформації без розуміння мети або глибшого контексту не зробить вас більш креативними.</p>\n<p>Справжня креативність підживлюється цікавістю, прагненням дізнатися більше. Цікавість потужна, тому що вона діє як внутрішній компас, спрямовуючи наш пошук знань з наміром.</p>\n<blockquote>Коли ви цікавитеся, ви не просто пасивно сприймаєте інформацію; ви активно шукаєте її з <strong>метою</strong>.</blockquote>\n\n<p>У вас є питання в голові, напрямок, причина, яка формує спосіб вашого дослідження. Це відчуття мети перетворює інформацію з хаотичного потоку даних у структуровані, значущі інсайти, які мозок може організувати, категоризувати і відновити, коли це потрібно.</p>\n<p>У моїй ролі дослідника користувацького досвіду (UX) мені нещодавно довелося переглянути понад 100 внутрішніх та галузевих дослідницьких робіт, щоб встановити та зрозуміти, що вже відомо про конкретну тему. Виклик полягав у тому, як сортувати, організовувати та засвоювати цю інформацію, не відчуваючи перевантаження. Чи було краще використовувати інструменти штучного інтелекту, такі як Gemini або ChatGPT, щоб підсумувати цей обсяг знань? Наскільки надійними були б ці підсумки? Чи було краще читати виконавчі підсумки та копіювати кілька тем, щоб включити їх у синопсис усіх цих робіт? Який був найкращий спосіб організувати цю інформацію? Який інструмент слід використовувати для підсумування та організації?</p>\n<p>Зіткнувшись з жорстким терміном і зростаючим стресом, я зупинився, щоб переоцінити. Щоб уникнути спіралі, я запитав: <em>Які основні цілі цього огляду досліджень?</em> Потім я визначив три ключові цілі:</p>\n<ol>\n<li>Виділити три-п'ять тем для представлення кільком внутрішнім командам.</li>\n<li>Скласти план дослідження, прив'язаний до цих тем.</li>\n<li>Використати ці теми для інформування серії екранів, які команда дизайнерів створить для тестування з реальними користувачами.</li>\n</ol>\n<p>З чітко визначеними цілями у мене була мета. Ця мета дозволила мені спрямувати свою вроджену цікавість, тому що я знав, чому я переглядаю стільки матеріалу і хто буде читати та переглядати синтез. Цікавість спонукала мене досліджувати цей великий обсяг досліджень, але мета тримала мене зосередженим.</p>\n<p>Цікавість — це прагнення дізнатися більше. Креативність вимагає цікавості, тому що без цього прагнення дизайнери та дослідники менш ймовірно досліджуватимуть нові ідеї або нові підходи до вирішення проблем. Хороша новина полягає в тому, що дослідження та дизайн приваблюють природно цікавих.</p>\n<p>Ключ полягає в перетворенні цікавості в зосереджене дослідження. Це менше про обсяг поглиненої інформації і більше про намір за запитом, глибину залучення та стратегічне застосування отриманих знань.</p>\n<p>Цілеспрямована цікавість — це різниця між потопленням в морі знань і навігацією ним з майстерністю.</p>\n<h3>Порада 2: Накладання Обмежень Та Складання Плану</h3>\n<p>Так само, як мета полегшує фокусування, обмеження також сприяє креативності. Мозковий штурм 50 ідей може здатися креативним, але насправді може виявитися більш відволікаючим, ніж енергійним. Обмеження кількості ідей є більш продуктивним.</p>\n<blockquote>«Деякі люди думають, що наявність обмежень означає, що вони не можуть бути креативними. Дослідження показують, що люди більш креативні, коли є обмеження.»<br><br>— Доктор Сьюзан Вайншенк, “<a href=\"https://www.smashingmagazine.com/2018/12/role-of-creativity-ux-design/\">Роль креативності в дизайні</a>”</blockquote>\n\n<p>Суть не в тому, щоб обмежити креативність та інновації, а в тому, щоб <strong>плекати їх за допомогою структури</strong>. Встановлення обмежень підвищує креативність, зосереджуючи генерацію ідей навколо кількох ключових тем.</p>\n<p>Ось два способи зосередитися на генерації ідей:</p>\n<ol>\n<li>Під час зустрічей та воркшопів <strong>заяви \"як ми можемо\" (HMW)</strong> допомагають зосередити обговорення, залишаючи місце для різноманітних ідей. Наприклад, <em>«Як ми можемо скоротити цей 15-кроковий робочий процес, не упускаючи важливої інформації?»</em></li>\n<li><strong>Визначте проблему та проведіть два вправи для тестування рішень.</strong> Наприклад, три опитування клієнтів, проведені за останні шість місяців, показують постійну тенденцію: 30% клієнтів незадоволені досвідом роботи з кол-центром, а час на дзвінок збільшився за той же шестимісячний період. Розділіть команду на дві групи.<ul>\n<li>Група 1 пише дві нові версії привітання, яке використовують представники служби підтримки клієнтів (CSR), коли клієнт дзвонить. Наступний крок — A/B тестування.</li>\n<li>Група 2 визначає два кроки для видалення з поточного сценарію CSR. Наступний крок — пробний запуск з CSR для запису часу на дзвінок і задоволеності клієнтів дзвінком.</li>\n</ul>\n</li>\n</ol>\n<p>«Обмеження» може бути негативним, таким як обмеження або обмеження, але воно також може стосуватися прояву контролю та стриманості.</p>\n<p>Застосовуючи стриманість, ви та ваша команда можете розвивати ідеї вищої якості та зосереджуватися на рішеннях. Замість того, щоб генерувати 50 ідей про те, як перепланувати всю установку кол-центру, більш продуктивно зосередитися на двох метриках: час на завдання та самостійно оцінене задоволення клієнта при зверненні до кол-центру.</p>\n<p>Спрямовуючи цю зосереджену енергію на чітко визначені виклики, ваша команда може ефективно переслідувати інноваційні рішення для двох тісно пов'язаних проблем.</p>\n<h3>Порада 3: Погляд на Інші Сфери</h3>\n<p>Інші сфери або предметні області можуть бути цінним джерелом інноваційних рішень. Коли стикаєтеся з складною дизайнерською проблемою, обмеження ідей, але вихід за межі безпосередньої сфери — це потужна комбінація.</p>\n<p>Високоризикована сфера дизайну літаків надає корисний приклад того, як одночасно обмежити ідеї та звернутися до інших сфер для вирішення дизайнерської проблеми. Чи знали ви, що Отто Лілієнталь, інженер-дизайнер 19-го століття, був першою людиною, яка здійснила повторювані, успішні польоти на планерах?</p>\n<p><img src=\"https://files.smashing.media/articles/fewer-ideas-unconventional-approach-creativity/2-lilienthal-glider.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Можливо, ні, але ви, ймовірно, чули про братів Райт, чия робота започаткувала сучасну авіацію. Чому? Робота Лілієнталя, хоча й важлива, спиралася на дизайн, заснований на крилах птаха, що вимагало від людини, яка керує планером, рухати всім тілом для зміни напрямку. Цей дизайн врешті-решт виявився фатальним, коли Лілієнталь не зміг вийти з піке і розбився.</p>\n<p>Брати Райт були механіками велосипедів, які використали свої знання про баланс для створення механізму керування для пілотів. Звернувшись за межі «сфери польотів», брати Райт знайшли спосіб балансувати та керувати літаками і врешті-решт трансформували авіацію.</p>\n<p>Аналогічно, Бартольді, французький художник, який створив Статую Свободи, не обмежувався переглядом статуй у Парижі. Він подорожував до Єгипту, вивчав монети та картини і черпав натхнення з обличчя своєї матері.</p>\n<p>Дизайнери, які шукають натхнення, повинні відійти від екрану, щоб малювати, писати вірші або будувати скульптури з паличок для морозива. Іншими словами, малюйте олією, а не пікселями; пишіть чорнилом, а не клавіатурою; ліпіть з паличок, а не з білого простору.</p>\n<p>На перший погляд, пошук натхнення в інших дисциплінах може здатися суперечливим <a href=\"#tip-2-imposing-constraints-and-making-a-plan\">Пораді 2 вище</a> — накладання обмежень. Однак, розглянуті з іншого кута, <strong>накладання обмежень та дослідження сфер є взаємодоповнюючими техніками</strong>.</p>\n<p>Замість того, щоб перераховувати десять випадкових ідей на дошці, більш продуктивно зосередитися на кількох рішеннях і розглядати ці рішення з різних кутів. Наприклад, нещодавно я зіткнувся з великим обсягом ідей, джерел і блок-схем. Хоча організація цієї інформації була керованою, її перетворення в форму, яку інші могли б засвоїти, виявилося складним.</p>\n<p>Замість того, щоб створювати список з десяти способів конденсувати цю інформацію, я взяв собаку на прогулянку і дозволив своїм очам блукати, прогулюючись парком. Що я побачив, коли мої очі зупинилися на безлистих деревах? Гілки. А що роблять блок-схеми? Вони розгалужуються в різні напрямки.</p>\n<p>Після завершення прогулянки я повернувся в онлайн і почав організовувати свої джерела в серію розгалужених потоків. Чи було це дико інноваційним? Ні. Чи був це перший раз, коли я малював блок-схеми з гілками? Також ні. Різниця в цьому випадку полягала в застосуванні розгалуженого рішення для <strong>всіх моїх джерел,</strong> не лише блок-схем. Коротше кажучи, прогулянка і підштовхування від дизайну природи допомогли мені вийти за межі обмежень, накладених двовимірним екраном.</p>\n<p>Відхід від екрану, звісно, корисний для нашого психічного та фізичного здоров'я. Випадковий момент осяяння — це бонус, який я з радістю приймаю.</p>\nВисновок\n<p>Однак ці моменти самі по собі не достатні. Ви повинні спрямувати натхнення, застосовуючи <strong>практичні техніки</strong>, щоб рухатися вперед з дизайном та аналізом, інакше ви ризикуєте бути паралізованими від такої кількості ідей, що не зможете прийняти рішення.</p>\n<p>Щоб уникнути паралічу та зменшити шанси на марнування часу, я виступав проти мозкового штурму, нескінченних списків та стін, покритих стікерами. Натомість я запропонував три практичні техніки для підвищення креативності.</p>\n<p><strong>Контрольована цікавість.</strong></p>\n<p>Від мозкового штурму до нескінченного прокручування, вплив на себе великих обсягів інформації — це пастка, тому що поглинання інформації без розуміння мети або глибшого контексту не зробить вас більш креативними.</p>\n<p>Рішення полягає в перетворенні цікавості в зосереджене дослідження. Цілеспрямована цікавість дозволяє вам досліджувати, мислити та виявляти рішення, не потопаючи в морі інформації.</p>\n<p><strong>Накладання обмежень.</strong></p>\n<p>Мозковий штурм довгих списків ідей може здатися креативним, але насправді може виявитися більш відволікаючим, ніж енергійним.</p>\n<p>Рішення полягає в тому, щоб плекати креативність за допомогою структури, обмежуючи кількість ідей, що розглядаються.</p>\n<p>Ця структура підвищує креативність, зосереджуючи генерацію ідей навколо кількох ключових тем.</p>\n<p><strong>Погляд за межі вашої безпосередньої сфери.</strong></p>\n<p>Фатальна аварія планера Отто Лілієнталя показує, що може статися, коли рішення розглядаються через єдину призму однієї предметної області.</p>\n<p>Рішення полягає в тому, щоб зосередитися на інноваційних рішеннях для однієї проблеми, розглядаючи проблему з різних перспектив, таких як двовимірний дизайн, тривимірний дизайн або дизайн у природі.</p>",
    "excerpt": "Що спільного між Суецьким каналом, римською богинею Лібертас та стародавніми єгипетськими скульптурами? Статуя Свободи.",
    "sourceUrl": "https://smashingmagazine.com/2025/05/fewer-ideas-unconventional-approach-creativity/",
    "imageUrl": "https://files.smashing.media/articles/fewer-ideas-unconventional-approach-creativity/1-messy-whiteboard.png",
    "categories": [],
    "author": "hello@smashingmagazine.com (Eric Olive)",
    "source": "Smashing Magazine",
    "publishedAt": "2025-05-15T10:00:00.000Z",
    "status": "underreview",
    "createdAt": "2025-06-15T20:25:34.891Z",
    "updatedAt": "2025-06-15T20:30:13.191Z",
    "__v": 0,
    "original": {
      "title": "Fewer Ideas: An Unconventional Approach To Creativity",
      "content": "<p>What do the Suez Canal, the Roman Goddess Libertas, and ancient Egyptian sculptures have in common? The Statue of Liberty.</p>\n<p>Surprising? Sure, but the connections make sense when you know the story as recounted by Columbia University psychologist Sheena Iyengar on a recent episode of <em>Hidden Brain</em>.</p>\n<p>The French artist Frédéric Bartholdi drew inspiration from Egyptian sculptures when he submitted a design for a sculpture that was going to be built at the Suez Canal. </p>\n<p>That plan for the Suez Canal sculpture fell through, leading Bartholdi and a friend to raise money to create a sculpture as a gift to the United States. Bartholdi designed the sculpture after studying the intricacies of the Roman Goddess Libertas, a significant female icon in the late 1800s. He also modeled the statue on Isabelle Boyer, who was 36 years old in 1878. Finally, Bartholdi incorporated his mother’s face into the proposed design. The result? The Statue of Liberty. </p>\n<p>Bartholdi’s unorthodox yet methodical approach yielded one of the most famous sculptures in the world. </p>\n<p>How did he do it? Did he let his mind run wild? Did he generate endless lists or draw hundreds of plans for each sculpture? Was he a 19th-century brainstorming advocate? </p>\nThe Problem\n<p>“Yes,” would be the answer of many innovation experts today. From stand-ups to workshops and templates to whiteboards, getting the creative juices flowing often involves brainstorming along with the reminder that <em>“there are no bad ideas”</em> and <em>“more ideas are better.”</em> Practiced and repeated so often, this approach to creativity must work, right?</p>\n<p>Wrong, says Iyengar. <strong>Too many ideas hinder creativity</strong> because the human brain can only manage a few ideas at once.</p>\n<blockquote>“Creativity requires you to have a bunch of pieces and to not only be able to have them in your memory bank in a way that you can kind of say what they are, but to be able to keep manipulating them in lots of different ways. And that means, you know, in order for your mind to be able to be facile enough to do that, it is going to need fewer pieces.”<br><br>— Hidden Brain, “<a href=\"https://hiddenbrain.org/podcast/how-to-be-more-creative/\">How to be more creative</a>”</blockquote>\n\n<p>Evidence for this view includes <a href=\"https://journals.sagepub.com/doi/abs/10.1509/jmr.10.0407?journalCode=mrja\">a study published by Anne-Laure Sellier of HEC Paris and Darren W. Dahl of British Columbia</a>. The authors compared knitting and crafting in two experimental studies. The results suggested that <strong>restricting the number of materials and other creative inputs enhanced the creativity</strong> of study participants. The reason was the participants’ ability to enjoy the creative process more, which enhanced their creative output.</p>\n<p>A few years ago, I had a similar experience while planning a series of studies. As with any initiative, identifying the scope was key. The problem? Rather than choose from two or three well-defined options, the team discussed several themes at once and then piled on a series of ideas about the best format for presenting these themes: Lists, tables, graphs, images, and flowcharts. The results looked something like this.</p>\n<p><img src=\"https://files.smashing.media/articles/fewer-ideas-unconventional-approach-creativity/1-messy-whiteboard.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>A messy whiteboard is not inherently bad. The question is whether brainstorming results like these block or enhance creativity. If the board above seems overwhelming, it’s worth considering a more structured process for creativity and idea generation.</p>\nThe Solution: Three Ways To Enhance Creativity\n<p>Just as Bartholdi approached his designs methodically, designers today can benefit from limits and structure. </p>\n<p>In this article, I’ll shed light on three techniques that enhance creativity:</p>\n<ul>\n<li><a href=\"#tip-1-controlled-curiosity\">Controlled curiosity</a></li>\n<li><a href=\"#tip-2-imposing-constraints-and-making-a-plan\">Imposing constraints and making a plan</a></li>\n<li><a href=\"#tip-3-look-to-other-domains\">Look to other domains</a></li>\n</ul>\n<h3>Tip 1: Controlled Curiosity</h3>\n<p>In today’s world, it’s easy to fall into the trap of believing that creativity comes from simply exposing yourself to a flood of information — scrolling endlessly, consuming random facts, and filling your mind with disconnected data points. It’s a trap because mindless absorption of information without understanding the purpose or deeper context won’t make you more creative. </p>\n<p>True creativity is fueled by curiosity, the drive to know more. Curiosity is powerful because it acts as an internal compass, guiding our search for knowledge with intention. </p>\n<blockquote>When you’re curious, you don’t just passively take in information; you actively seek it with a <strong>purpose</strong>.</blockquote>\n\n<p>You have a question in mind, a direction, a reason that shapes the way you explore. This sense of purpose transforms information from a chaotic influx of data into structured, meaningful insights that the brain can organize, categorize, and retrieve when needed.</p>\n<p>In my role as a user experience (UX) researcher, I recently needed to review 100+ internal and industry research papers to establish and understand what was already known about a specific subject. The challenge was how to sort, organize, and absorb this information without feeling overwhelmed. Was it better to leverage AI tools like Gemini or ChatGPT to summarize this body of knowledge? How reliable would these summaries be? Was it better to read the executive summaries and copy a few themes to include in a synopsis of all of these papers? What was the best way to organize this information? Which tool should I use to summarize and organize?</p>\n<p>Faced with a tight deadline and mounting stress, I paused to reassess. To avoid spiraling, I asked: <em>What are the core objectives of this research review?</em> I then defined three key goals:</p>\n<ol>\n<li>Extract three to five themes to present to several internal teams.</li>\n<li>Craft a research plan pegged to these themes.</li>\n<li>Leverage these themes to inform a series of screens that the design team would create to test with real users.</li>\n</ol>\n<p>With clearly defined objectives, I had a purpose. This purpose allowed me to channel my innate curiosity because I knew why I was wading through so much material and who would read and review the synthesis. Curiosity drove me to explore this large body of research, but purpose kept me focused.</p>\n<p>Curiosity is the drive to learn more. Creativity requires curiosity because, without this drive, designers and researchers are less likely to explore new ideas or new approaches to problem-solving. The good news is that research and design attract the naturally curious. </p>\n<p>The key lies in transforming curiosity into focused exploration. It’s less about the volume of information absorbed and more about the intent behind the inquiry, the depth of engagement, and the strategic application of acquired knowledge.</p>\n<p>Purposeful curiosity is the difference between drowning in a sea of knowledge and navigating it with mastery.</p>\n<h3>Tip 2: Imposing Constraints And Making A Plan</h3>\n<p>Just as purpose makes it easier to focus, constraint also contributes to creativity. Brainstorming 50 ideas might seem creative but can actually prove more distracting than energizing. Limiting the number of ideas is more productive.</p>\n<blockquote>“Some people think that having constraints means they can’t be creative. The research shows that people are more creative when there are constraints.”<br><br>— Dr. Susan Weinschenk, “<a href=\"https://www.smashingmagazine.com/2018/12/role-of-creativity-ux-design/\">The Role of Creativity in Design</a>”</blockquote>\n\n<p>The point is not to limit creativity and innovation but to <strong>nurture it with structure</strong>. Establishing constraints enhances creativity by focusing idea generation around a few key themes.</p>\n<p>Here are two ways to focus on idea generation:</p>\n<ol>\n<li>During meetings and workshops, <strong>how might we (HMW) statements</strong> help concentrate discussion while still leaving room for a variety of ideas? For example, <em>“How might we condense this 15-step workflow without omitting essential information?”</em></li>\n<li><strong>Identify the problem and conduct two exercises to test solutions.</strong> For example, three customer surveys conducted over the past six months show a consistent pattern: 30% of customers are dissatisfied with their call center experience, and time-on-call has increased over the same six-month period. Divide the team into two groups.<ul>\n<li>Group 1 writes two new versions of the greeting customer service representatives (CSRs) use when a customer calls. The next step is an A/B test.</li>\n<li>Group 2 identifies two steps to remove from the current CSR script. The next step is a trial run with CSRs to record time-on-call and customer satisfaction with the call.</li>\n</ul>\n</li>\n</ol>\n<p>“Constraint” can be negative, such as a restriction or limitation, but it can also refer to exhibiting control and restraint.</p>\n<p>By exercising restraint, you and your team can cultivate higher-quality ideas and concentrate on solutions. Rather than generate 50 ideas about how to reconfigure an entire call center setup, it is more productive to focus on two metrics: time-on-task and the customer’s self-rated satisfaction when contacting the call center. </p>\n<p>By channeling this concentrated energy towards well-defined challenges, your team can then effectively pursue innovative solutions for two closely related issues.</p>\n<h3>Tip 3: Look To Other Domains</h3>\n<p>Other domains or subject areas can be a valuable source of innovative solutions. When facing a challenging design problem, limiting ideas but reaching beyond the immediate domain is a powerful combination. </p>\n<p>The high-stakes domain of airplane design provides a useful case study of how to simultaneously limit ideas and look to other domains to solve a design problem. Did you know that Otto Lilienthal, a 19th-century design engineer, was the first person to make repeated, successful flights with gliders?</p>\n<p><img src=\"https://files.smashing.media/articles/fewer-ideas-unconventional-approach-creativity/2-lilienthal-glider.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Maybe not, but you’ve likely heard of the Wright brothers, whose work launched modern aviation. Why? Lilienthal’s work, while essential, relied on a design based on a bird’s wings, requiring the person flying the glider to move their entire body to change direction. This design ultimately proved fatal when Lilienthal was unable to steer out of a nosedive and crashed.</p>\n<p>The Wright brothers were bike mechanics who leveraged their knowledge of balance to create a steering mechanism for pilots. By looking outside the “flight domain,” the Wright brothers found a way to balance and steer planes and ultimately transformed aviation.</p>\n<p>In a similar fashion, Bartholdi, the French artist who sculpted the Statue of Liberty, did not limit himself to looking at statues in Paris. He traveled to Egypt, studied coins and paintings, and drew inspiration from his mother’s face.</p>\n<p>Designers seeking inspiration should step away from the screen to paint, write a poem, or build a sculpture with popsicle sticks. In other words, paint with oils, not pixels; write with ink, not a keyboard; sculpt with sticks, not white space.</p>\n<p>On its face, seeking inspiration from other disciplines would seem to contradict <a href=\"#tip-2-imposing-constraints-and-making-a-plan\">Tip 2 above</a> — impose constraints. Examined from another angle, however, <strong>imposing constraints and exploring domains are complementary techniques</strong>. </p>\n<p>Rather than list ten random ideas on a whiteboard, it’s more productive to focus on a few solutions and think about these solutions from a variety of angles. For example, recently, I found myself facing a high volume of ideas, source material, and flow charts. While organizing this information was manageable, distilling it into a form others could absorb proved challenging. </p>\n<p>Rather than generate a list of ten ways to condense this information, I took the dog for a walk and let my eyes wander while strolling through the park. What did I see when my eyes lit upon barren trees? Branches. And what do flow charts do? They branch into different directions. </p>\n<p>Upon finishing the walk, I jumped back online and began organizing my source material into a series of branched flows. Was this wildly innovative? No. Was this the first time I had drawn flowcharts with branches? Also no. The difference in this case was the application of the branching solution for <strong>all of my source material,</strong> not only the flow charts. In short, a walk and a nudge from nature’s design helped me escape the constraints imposed by a two-dimensional screen.</p>\n<p>Stepping away from the screen is, of course, good for our mental and physical health. The occasional light bulb moment is a bonus and one I’m happy to accept. </p>\nConclusion\n<p>Yet these moments alone are not enough. You must channel inspiration by applying <strong>practical techniques</strong> to move forward with design and analysis lest you become overwhelmed by so many ideas that you become paralyzed and unable to make a decision.</p>\n<p>To avoid paralysis and reduce the chances of wasting time, I’ve argued against brainstorming, endless lists, and wall-to-wall post-its. Instead, I’ve proposed three practical techniques to boost creativity.</p>\n<p><strong>Controlled curiosity.</strong></p>\n<p>From brainstorming to endless scrolling, exposing yourself to high volumes of information is a trap because absorbing information without understanding the purpose or deeper context won’t make you more creative. </p>\n<p>The solution lies in transforming curiosity into focused exploration. Purposeful curiosity allows you to explore, think, and identify solutions without drowning in a sea of information.</p>\n<p><strong>Imposing constraints.</strong></p>\n<p>Brainstorming long lists of ideas might seem creative, but can actually prove more distracting than energizing.</p>\n<p>The solution is to nurture creativity with structure by limiting the number of ideas under consideration. </p>\n<p>This structure enhances creativity by focusing idea generation around a few key themes.</p>\n<p><strong>Look beyond your immediate domain.</strong></p>\n<p>Otto Lilienthal’s fatal glider crash shows what can happen when solutions are examined through the single lens of one subject area.</p>\n<p>The solution is to concentrate on innovative solutions for a single issue while reflecting on the problem from various perspectives, such as two-dimensional design, three-dimensional design, or design in nature.</p>",
      "_id": "684f2d55e823d9037acf4515"
    }
  },
  {
    "_id": "684f2c3ee823d9037acf4505",
    "title": "Smashing Animations Part 2: How CSS Masking Can Add An Extra Dimension",
    "content": "<p>Незважаючи на ключові кадри та події, що керуються прокруткою, CSS-анімації залишаються відносно примітивними. Як я писав у <a href=\"https://www.smashingmagazine.com/2025/05/smashing-animations-part-1-classic-cartoons-inspire-css/\">Частині 1</a>, вони нагадують мені анімаційні серіали 1960-х років <a href=\"https://en.wikipedia.org/wiki/Hanna-Barbera\">Hanna-Barbera</a>, які я дивився по телевізору. Шоу, такі як Дастардлі та Маттлі в <em>Their Flying Machines</em>, <em>Scooby-Doo</em>, <em>The Perils of Penelope Pitstop</em>, <em>Wacky Races</em> та, звичайно, <a href=\"https://en.wikipedia.org/wiki/Yogi_Bear\">Yogi Bear</a>.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/1-yogi-bear-show.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Майк любить анімацію 90-х — особливо <a href=\"https://en.wikipedia.org/wiki/DuckTales_(1987_TV_series\">Disney’s <em>Duck Tales</em></a>). Тому цей естетичний стиль застосовано у всьому дизайні.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/2-yogi-bear-design-andy-clarke.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Я використовував анімації протягом усього процесу і нещодавно додав до них додатковий вимір за допомогою <strong>маскування</strong>. Отже, щоб пояснити, як ця епоха анімації пов'язана з маскуванням у CSS, я обрав епізод <em>The Yogi Bear Show</em>, “Disguise and Gals,” який вперше вийшов у травні 1961 року. У цій історії два грабіжники банків, замасковані під стареньких, ховають свою здобич у кошику для пікніка в печері Йогі та Бу-Бу!</p>\n<p>Що <em>може</em> піти не так?</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/3-yogi-bear-disguise-gals.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\nЩо таке маска?\n<p>Простий приклад маскування можна побачити в кінці “Disguise and Gals” та безлічі інших мультфільмів. Тут анімований віньєт поступово приховує більше обличчя Йогі. Вміст за маскою не стирається; він прихований.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/4-yogi-bear-masking-example.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>У CSS <strong>маскування контролює видимість за допомогою зображення маски у форматі бітмапу, вектора або градієнта</strong>. Коли заповнені пікселі маски покривають елемент, його вміст буде видимим. Коли вони прозорі, він буде прихований, що логічно. Заповнені пікселі можуть бути будь-якого кольору, але я завжди роблю їх яскраво-рожевими, щоб мені було зрозуміло, які області будуть видимими.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/5-yogi-bear-andy-clarke-recreation.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p><code>clip-path</code> працює подібно до <code>mask</code>, але використовує шляхи для створення областей з жорсткими краями. Якщо бути прискіпливим, маски та шляхи обрізки технічно різні, але мета їх використання зазвичай однакова. Тому в цій статті я буду називати їх двома входами в одну і ту ж печеру і називати використання будь-якого з них “маскуванням”.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/6-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>У цій послідовності з “Disguise and Gals” один з грабіжників поспішає з кошиком для пікніка, що містить їхню здобич, у печеру Йогі. Маскування визначає видиму область, створюючи ілюзію, що грабіжник входить у печеру.</p>\n<blockquote>Як вибрати, коли використовувати <code>clip path</code> і коли вибрати <code>mask</code>?</blockquote>\n\n<p>Я поясню свої причини в кожному прикладі.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/7-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Коли Майк Ворт і я обговорювали співпрацю, ми знали, що у нас не буде ні бюджету, ні часу, щоб створити короткий анімаційний мультфільм для його вебсайту. Однак ми були зацікавлені в тому, щоб дослідити, як анімації можуть оживити те, що інакше було б статичними зображеннями.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/8-mike-worth-website.png\" style=\"width: 100%; height: auto; display: block;\"></p>\nМаскування за допомогою шляху обрізки\n<p>На сторінці біографії Майка його персонаж також входить у печеру. Ілюстрація SVG, яку я створив, містить дві групи: одну для фону, а іншу для орангутана на передньому плані:</p>\n<pre><code>&lt;figure&gt;\n  &lt;svg viewBox=\"0 0 1400 960\" id=\"cave\"&gt;\n    &lt;g class=\"background\"&gt;…&lt;/g&gt;\n    &lt;g class=\"foreground\"&gt;…&lt;/g&gt;\n  &lt;/svg&gt;\n&lt;/figure&gt;\n</code></pre>\n\n<p>Я визначив анімацію ключових кадрів, яка переміщує персонажа з <code>2000px</code> праворуч до його природного положення в центрі кадру, змінюючи його значення <code>translate</code>:</p>\n<pre><code>@keyframes foreground {\n  0% { \n    opacity: .75; \n    translate: 2000px 0;\n  }\n  60% { \n    opacity: 1;\n    translate: 0 0;\n  }\n  80% {\n    opacity: 1; \n    translate: 50px 0;\n  }\n  100% {\n    opacity: 1;\n    translate: 0 0;\n  }\n}\n</code></pre>\n\n<p>Потім я застосував цю анімацію до групи на передньому плані:</p>\n<pre><code>.foreground {\n  opacity: 0;\n  animation: foreground 5s 2s ease-in-out infinite;\n}\n</code></pre>\n\n<p>Спробуйте це самі:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/9-masking-using-clipping-path.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Я хотів, щоб він став видимим на краю ілюстрації. Оскільки краї стін печери жорсткі, я вибрав <code>clip-path</code>.</p>\n<p>Існує кілька способів визначити <code>clip-path</code> у CSS. Я міг би використовувати примітивну форму, таку як прямокутник, де кожне з перших чотирьох значень визначає його положення кутів. Ключове слово <code>round</code> і значення, що слідує за ним, визначають будь-які заокруглені кути:</p>\n<pre><code>clip-path: rect(0px 150px 150px 0px round 5px);\n</code></pre>\n\n<p>Або значення <code>xywh</code> (x, y, ширина, висота), які мені легше читати:</p>\n<pre><code>clip-path: xywh(0 0 150px 150px round 5px);\n</code></pre>\n\n<p>Я міг би використовувати <code>circle</code>:</p>\n<pre><code>clip-path: circle(60px at center);\n</code></pre>\n\n<p>Або <code>ellipse</code>:</p>\n<pre><code>clip-path: ellipse(50% 40% at 50% 50%);\n</code></pre>\n\n<p>Я міг би використовувати форму <code>polygon</code>:</p>\n<pre><code>clip-path: polygon(...);\n</code></pre>\n\n<p>Або навіть точки з шляху, який я створив у графічному додатку, такому як Sketch:</p>\n<pre><code>clip-path: path(\"M ...\");\n</code></pre>\n\n<p>Нарешті — і мій вибір для цього прикладу — я міг би використовувати маску, яку я визначив за допомогою шляхів з файлу SVG:</p>\n<pre><code>clip-path: url(#mask-cave);\n</code></pre>\n\n<p>Щоб зробити персонажа видимим з краю ілюстрації, я додав другий SVG. Щоб браузер не відображав його, встановіть обидва його розміри на нуль:</p>\n<pre><code>&lt;figure&gt;\n  &lt;svg viewBox=\"0 0 1400 960\" id=\"cave\"&gt;...&lt;/svg&gt;\n  &lt;svg height=\"0\" width=\"0\" id=\"mask\"&gt;...&lt;/svg&gt;\n&lt;/figure&gt;\n</code></pre>\n\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/10-svg-clippath.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Це містить один SVG <code>clipPath</code>. Розмістивши його всередині елемента <code>defs</code>, цей шлях не буде відображено, але він буде доступний для створення мого CSS <code>clip-path</code>:</p>\n<pre><code>&lt;svg height=\"0\" width=\"0\" id=\"mask\"&gt;\n  &lt;defs&gt;\n    &lt;clipPath id=\"mask-cave\"&gt;...&lt;/clipPath&gt;\n  &lt;/defs&gt;\n&lt;/svg&gt;\n</code></pre>\n\n<p>Я застосував URL <code>clipPath</code> до моєї ілюстрації, і тепер талісман Майка стає видимим лише тоді, коли він входить у печеру:</p>\n<pre><code>#cave {\n  clip-path: url(#mask-cave);\n}\n</code></pre>\n\n<p>Спробуйте це самі:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/11-altered-illustrations.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Хоча <code>clipPath</code> дасть мені результат, який я шукаю, складність і розмір цих шляхів іноді можуть негативно вплинути на продуктивність. Ось тоді я вибираю CSS <code>mask</code>, оскільки його властивості були базовими та дуже зручними з 2023 року.</p>\n<p>Властивість <code>mask</code> є скороченням і може включати значення для <code>mask-clip</code>, <code>mask-mode</code>, <code>mask-origin</code>, <code>mask-position</code>, <code>mask-repeat</code>, <code>mask-size</code> та <code>mask-type</code>. Я вважаю, що найкраще вивчати ці властивості окремо, щоб легше зрозуміти концепцію масок.</p>\n<p>Маски контролюють видимість за допомогою зображень маски у форматі бітмапу, вектора або градієнта. Знову ж таки, коли заповнені пікселі маски покривають елемент, його вміст буде видимим. Коли вони прозорі, вміст буде прихований. А коли частини маски напівпрозорі, деякі з вмісту будуть видимі. Я можу використовувати формат бітмапу, який включає альфа-канал, такий як PNG або WebP:</p>\n<pre><code>mask-image: url(mask.webp);\n</code></pre>\n\n<p>Я міг би застосувати маску, використовуючи векторну графіку:</p>\n<pre><code>mask-image: url(mask.svg);\n</code></pre>\n\n<p>Або згенерувати зображення, використовуючи конічний, лінійний або радіальний градієнт:</p>\n<pre><code>mask-image: linear-gradient(#000, transparent); \n</code></pre>\n\n<p>…або:</p>\n<div>\n<pre><code>mask-image: radial-gradient(circle, #ff104c 0%, transparent 100%);\n</code></pre>\n</div>\n\n<p>Я міг би застосувати більше однієї маски до елемента і змішати кілька типів зображень, використовуючи знайомий синтаксис:</p>\n<pre><code>mask-image:\n  image(url(mask.webp)),\n  linear-gradient(#000, transparent);\n</code></pre>\n\n<p><code>mask</code> має той самий синтаксис, що й фони CSS, що робить запам'ятовування його властивостей набагато простішим. Щоб застосувати <code>background-image</code>, додайте його значення URL:</p>\n<pre><code>background-image: url(\"background.webp\");\n</code></pre>\n\n<p>Щоб застосувати маску, замініть властивість <code>background-image</code> на <code>mask-image</code>:</p>\n<pre><code>mask-image: url(\"mask.webp\");\n</code></pre>\n\n<p>Властивість <code>mask</code> також має ті ж стилі браузера, що й фони CSS, тому за замовчуванням маска буде повторюватися горизонтально та вертикально, якщо я не вкажу інше:</p>\n<div>\n<pre><code>/* Опції: repeat, repeat-x, repeat-y, round, space, no-repeat */\nmask-repeat: no-repeat;\n</code></pre>\n</div>\n\n<p>Вона буде розміщена у верхньому лівому куті, якщо я не зміню її положення:</p>\n<pre><code>/* Опції: Ключові слова, одиниці, відсотки */\nmask-position: center;\n</code></pre>\n\n<p>Крім того, я можу вказати <code>mask-size</code> так само, як <code>background-size</code>:</p>\n<div>\n<pre><code>/* Опції: Ключові слова (auto, contain, cover), одиниці, відсотки */\nmask-size: cover;\n</code></pre>\n</div>\n\n<p>Нарешті, я можу визначити, де починається маска:</p>\n<pre><code>mask-origin: content-box;\nmask-origin: padding-box;\nmask-origin: border-box;\n</code></pre>\n\nВикористання зображення маски\n<p>Сторінка FAQ Майка включає анімовану ілюстрацію його героя, що стоїть на роздоріжжі. Моя мета полягала в тому, щоб відокремити форму від її вмісту, дозволяючи мені змінювати ілюстрацію протягом подорожі героя. Тому я створив масштабоване <code>mask-image</code>, яке визначає видиму область, і застосував його до елемента фігури:</p>\n<pre><code>figure {\n  mask-image: url(mask.svg);\n}\n</code></pre>\n\n<p>Щоб переконатися, що маска відповідає розмірам ілюстрації, я також встановив <code>mask-size</code> завжди <code>cover</code> її вміст:</p>\n<pre><code>figure {\n  mask-size: cover;\n}\n</code></pre>\n\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/12-mask-image.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Спробуйте це самі:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/13-mike-worth-review-page-illustration.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<pre><code>figure {\n  clip-path: ellipse(45% 35% at 50% 50%);\n}\n</code></pre>\n\n<p>Однак жорсткі краї <code>clip-path</code> не створюють ефекту, якого я прагнув досягти:</p>\n<p>Спробуйте це самі:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/14-layering-multiple-masks.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Нарешті, щоб додати додатковий штрих реалізму, я додав анімацію ключових кадрів — яка змінює <code>mask-size</code> і створює ефект мерехтіння світла лампи — і застосував її до фігури:</p>\n<pre><code>@keyframes lamp-flicker {\n  0%, 19.9%, 22%, 62.9%, 64%, 64.9%, 70%, 100% { \n    mask-size: 90%, auto;\n  }\n\n  20%, 21.9%, 63%, 63.9%, 65%, 69.9% { \n    mask-size: 90%, 0px;\n  }\n}\n\nfigure {\n  animation: lamp-flicker 3s 3s linear infinite;\n}\n</code></pre>\n\n<p>Спробуйте це самі:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/15-binocular-shaped-mask.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Я почав з створення форми бінокля, включаючи деякі маркери видошукача.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/16-binocular-shape.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Потім я застосував це зображення як маску, встановивши його положення, повторення та розміри, щоб розмістити його в центрі елемента фігури:</p>\n<pre><code>figure {\n  mask-image: url(mask.svg);\n  mask-position: 50% 50%;\n  mask-repeat: no-repeat;\n  mask-size: 85%;\n}\n</code></pre>\n\n<p>Спробуйте це самі:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/17-masking-animation.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Щоб дати комусь зрозуміти, що вони могли досягти кінця своєї пригоди, я хотів наслідувати ефект збільшення, з яким я почав цю статтю:</p>\n<pre><code>&lt;figure&gt;\n  &lt;svg&gt;…&lt;/svg&gt;\n&lt;/figure&gt;\n</code></pre>\n\n<p>Я створив круговий <code>clip-path</code> і встановив його розмір за замовчуванням на <code>75%</code>. Потім я визначив ключові кадри анімації, щоб змінити розмір кола з 75% до 15% перед тим, як прикріпити його до моєї фігури з тривалістю в одну секунду і затримкою в три секунди:</p>\n<pre><code>@keyframes error {\n  0% { clip-path: circle(75%); }\n  100% { clip-path: circle(15%); }\n}\n\nfigure {\n  clip-path: circle(75%);\n  animation: error 1s 3s ease-in forwards;\n}\n</code></pre>\n\n<p>Анімація тепер фокусує увагу на безпорадному герої, перш ніж він опуститься нижче і нижче в киплячу гарячу лаву.</p>\n<p>Спробуйте це самі:</p>\n<p>Дивіться Pen <a href=\"https://codepen.io/smashingmag/pen/qEEgdxy\">Сторінка помилки Майка Ворта [forked]</a> від <a href=\"https://codepen.io/malarkey\">Енді Кларк</a>.</p>\nОживлення всього\n<p>Маскування додає <strong>додатковий вимір до веб-анімації</strong> і робить історії більш захоплюючими, а досвід користувача більш привабливим — і все це, зберігаючи анімації ефективно легкими. Незалежно від того, чи ви розкриваєте вміст, направляєте фокус або додаєте більше глибини до дизайну, маски пропонують безмежні творчі можливості. Тож чому б не поекспериментувати з ними у вашому наступному проекті? Ви можете відкрити абсолютно новий спосіб оживлення ваших анімацій.</p>\n<p>Кінець. Або це? …</p>\n<p>Вебсайт Майка Ворта буде запущено в червні 2025 року, але ви можете <a href=\"https://codepen.io/collection/YwMKPb\">побачити приклади з цієї статті на CodePen</a> зараз.</p>",
    "excerpt": "Незважаючи на ключові кадри та події, що керуються прокруткою, CSS-анімації залишаються відносно примітивними. Як я писав у Частині 1, вони нагадують мені анімаційні серіали 1960-х років Hanna-Barbera, які я дивився по телевізору. Шоу, такі як Дастардлі та Маттлі в Their Flying Machines, Scooby-Doo, The Perils of Penelope Pitstop, Wacky Races та, звичайно, Yogi Bear.",
    "sourceUrl": "https://smashingmagazine.com/2025/05/smashing-animations-part-2-css-masking-add-extra-dimension/",
    "imageUrl": "https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/1-yogi-bear-show.jpg",
    "categories": [],
    "author": "hello@smashingmagazine.com (Andy Clarke)",
    "source": "Smashing Magazine",
    "publishedAt": "2025-05-14T13:00:00.000Z",
    "status": "underreview",
    "createdAt": "2025-06-15T20:25:34.896Z",
    "updatedAt": "2025-06-15T20:31:12.905Z",
    "__v": 0,
    "original": {
      "title": "Smashing Animations Part 2: How CSS Masking Can Add An Extra Dimension",
      "content": "<p>Despite keyframes and scroll-driven events, CSS animations have remained relatively rudimentary. As I wrote in <a href=\"https://www.smashingmagazine.com/2025/05/smashing-animations-part-1-classic-cartoons-inspire-css/\">Part 1</a>, they remind me of the 1960s <a href=\"https://en.wikipedia.org/wiki/Hanna-Barbera\">Hanna-Barbera</a> animated series I grew up watching on TV. Shows like Dastardly and Muttley in <em>Their Flying Machines</em>, <em>Scooby-Doo</em>, <em>The Perils of Penelope Pitstop</em>, <em>Wacky Races</em>, and, of course, <a href=\"https://en.wikipedia.org/wiki/Yogi_Bear\">Yogi Bear</a>.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/1-yogi-bear-show.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Mike loves ’90s animation — especially <a href=\"https://en.wikipedia.org/wiki/DuckTales_(1987_TV_series\">Disney’s <em>Duck Tales</em></a>). So, that is the aesthetic applied throughout the design.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/2-yogi-bear-design-andy-clarke.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>I used animations throughout and have recently added an extra dimension to them using <strong>masking</strong>. So, to explain how this era of animation relates to masking in CSS, I’ve chosen an episode of <em>The Yogi Bear Show</em>, “Disguise and Gals,” first broadcast in May 1961. In this story, two bank robbers, disguised as little old ladies, hide their loot in a “pic-a-nic” basket in Yogi and Boo-Boo’s cave! </p>\n<p>What could <em>possibly</em> go wrong?</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/3-yogi-bear-disguise-gals.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\nWhat’s A Mask?\n<p>One simple masking example comes at the end of “Disguise and Gals” and countless other cartoons. Here, an animated vignette gradually hides more of Yogi’s face. The content behind the mask isn’t erased; it’s hidden.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/4-yogi-bear-masking-example.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>In CSS, <strong>masking controls visibility using a bitmap, vector, or gradient mask image</strong>. When a mask’s filled pixels cover an element, its content will be visible. When they are transparent, it will be hidden, which makes sense. Filled pixels can be any colour, but I always make mine hot pink so that it’s clear to me which areas will be visible.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/5-yogi-bear-andy-clarke-recreation.jpg\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>A <code>clip-path</code> functions similarly to a <code>mask</code> but uses paths to create hard-edged clipping areas. If you want to be picky, masks and clipping paths are technically different, but the goal for using them is usually the same. So, for this article, I’ll refer to them as two entrances to the same cave and call using either “masking.”</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/6-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>In this sequence from “Disguise and Gals,” one of the robbers rushes the picnic basket containing their loot into Yogi’s cave. Masking defines the visible area, creating the illusion that the robber is entering the cave. </p>\n<blockquote>How do I choose when to use <code>clip path</code> and when to choose <code>mask</code>?</blockquote>\n\n<p>I’ll explain my reasons in each example.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/7-yogi-bear-show.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>When Mike Worth and I discussed working together, we knew we would neither have the budget nor the time to create a short animated cartoon for his website. However, we were keen to explore how animations could bring to life what would’ve otherwise been static images.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/8-mike-worth-website.png\" style=\"width: 100%; height: auto; display: block;\"></p>\nMasking Using A Clipping Path\n<p>On Mike’s biography page, his character also enters a cave. The SVG illustration I created contains two groups, one for the background and the other for the orangutan in the foreground:</p>\n<pre><code>&lt;figure&gt;\n  &lt;svg viewBox=\"0 0 1400 960\" id=\"cave\"&gt;\n    &lt;g class=\"background\"&gt;…&lt;/g&gt;\n    &lt;g class=\"foreground\"&gt;…&lt;/g&gt;\n  &lt;/svg&gt;\n&lt;/figure&gt;\n</code></pre>\n\n<p>I defined a keyframe animation that moves the character from <code>2000px</code> on the right to its natural position in the center of the frame by altering its <code>translate</code> value:</p>\n<pre><code>@keyframes foreground {\n  0% { \n    opacity: .75; \n    translate: 2000px 0;\n  }\n  60% { \n    opacity: 1;\n    translate: 0 0;\n  }\n  80% {\n    opacity: 1; \n    translate: 50px 0;\n  }\n  100% {\n    opacity: 1;\n    translate: 0 0;\n  }\n}\n</code></pre>\n\n<p>Then, I applied that animation to the foreground group:</p>\n<pre><code>.foreground {\n  opacity: 0;\n  animation: foreground 5s 2s ease-in-out infinite;\n}\n</code></pre>\n\n<p>Try this yourself:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/9-masking-using-clipping-path.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>I wanted him to become visible at the edge of the illustration instead. As the edges of the cave walls are hard, I chose a <code>clip-path</code>.</p>\n<p>There are several ways to define a <code>clip-path</code> in CSS. I could use a primitive shape like a rectangle, where each of the first four values specifies its corner positions. The <code>round</code> keyword and the value that follows define any rounded corners:</p>\n<pre><code>clip-path: rect(0px 150px 150px 0px round 5px);\n</code></pre>\n\n<p>Or <code>xywh</code> (x, y, width, height) values, which I find easier to read:</p>\n<pre><code>clip-path: xywh(0 0 150px 150px round 5px);\n</code></pre>\n\n<p>I could use a <code>circle</code>:</p>\n<pre><code>clip-path: circle(60px at center);\n</code></pre>\n\n<p>Or an <code>ellipse</code>:</p>\n<pre><code>clip-path: ellipse(50% 40% at 50% 50%);\n</code></pre>\n\n<p>I could use a <code>polygon</code> shape:</p>\n<pre><code>clip-path: polygon(...);\n</code></pre>\n\n<p>Or even the points from a path I created in a graphics app like Sketch:</p>\n<pre><code>clip-path: path(\"M ...\");\n</code></pre>\n\n<p>Finally — and my choice for this example — I might use a mask that I defined using paths from an SVG file:</p>\n<pre><code>clip-path: url(#mask-cave);\n</code></pre>\n\n<p>To make the character visible from the edge of the illustration, I added a second SVG. To prevent a browser from displaying it, set both its dimensions to zero:</p>\n<pre><code>&lt;figure&gt;\n  &lt;svg viewBox=\"0 0 1400 960\" id=\"cave\"&gt;...&lt;/svg&gt;\n  &lt;svg height=\"0\" width=\"0\" id=\"mask\"&gt;...&lt;/svg&gt;\n&lt;/figure&gt;\n</code></pre>\n\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/10-svg-clippath.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>This contains a single SVG <code>clipPath</code>. By placing this inside the <code>defs</code> element, this path isn’t rendered, but it will be available to create my CSS <code>clip-path</code>:</p>\n<pre><code>&lt;svg height=\"0\" width=\"0\" id=\"mask\"&gt;\n  &lt;defs&gt;\n    &lt;clipPath id=\"mask-cave\"&gt;...&lt;/clipPath&gt;\n  &lt;/defs&gt;\n&lt;/svg&gt;\n</code></pre>\n\n<p>I applied the <code>clipPath</code> URL to my illustration, and now Mike’s mascot only becomes visible when he enters the cave:</p>\n<pre><code>#cave {\n  clip-path: url(#mask-cave);\n}\n</code></pre>\n\n<p>Try this yourself:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/11-altered-illustrations.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>While a <code>clipPath</code> will give me the result I’m looking for, the complexity and size of these paths can sometimes negatively affect performance. That’s when I choose a CSS <code>mask</code> as its properties have been baseline and highly usable since 2023.</p>\n<p>The <code>mask</code> property is a shorthand and can include values for <code>mask-clip</code>, <code>mask-mode</code>, <code>mask-origin</code>, <code>mask-position</code>, <code>mask-repeat</code>, <code>mask-size</code>, and <code>mask-type</code>. I find it’s best to learn these properties individually to grasp the concept of masks more easily.</p>\n<p>Masks control visibility using bitmap, vector, or gradient mask images. Again, when a mask’s filled pixels cover an element, its content will be visible. When they‘re transparent, the content will be hidden. And when parts of a mask are semi-transparent, some of the content will show through. I can use a bitmap format that includes an alpha channel, such as PNG or WebP:</p>\n<pre><code>mask-image: url(mask.webp);\n</code></pre>\n\n<p>I could apply a mask using a vector graphic:</p>\n<pre><code>mask-image: url(mask.svg);\n</code></pre>\n\n<p>Or generate an image using a conical, linear, or radial gradient:</p>\n<pre><code>mask-image: linear-gradient(#000, transparent); \n</code></pre>\n\n<p>…or:</p>\n<div>\n<pre><code>mask-image: radial-gradient(circle, #ff104c 0%, transparent 100%);\n</code></pre>\n</div>\n\n<p>I might apply more than one mask to an element and mix several image types using what should be a familiar syntax:</p>\n<pre><code>mask-image:\n  image(url(mask.webp)),\n  linear-gradient(#000, transparent);\n</code></pre>\n\n<p><code>mask</code> shares the same syntax as CSS backgrounds, which makes remembering its properties much easier. To apply a <code>background-image</code>, add its URL value:</p>\n<pre><code>background-image: url(\"background.webp\");\n</code></pre>\n\n<p>To apply a mask, swap the <code>background-image</code> property for <code>mask-image</code>:</p>\n<pre><code>mask-image: url(\"mask.webp\");\n</code></pre>\n\n<p>The <code>mask</code> property also shares the same browser styles as CSS backgrounds, so by default, a mask will repeat horizontally and vertically unless I specify otherwise:</p>\n<div>\n<pre><code>/* Options: repeat, repeat-x, repeat-y, round, space, no-repeat */\nmask-repeat: no-repeat;\n</code></pre>\n</div>\n\n<p>It will be placed at the top-left corner unless I alter its position:</p>\n<pre><code>/* Options: Keywords, units, percentages */\nmask-position: center;\n</code></pre>\n\n<p>Plus, I can specify <code>mask-size</code> in the same way as <code>background-size</code>:</p>\n<div>\n<pre><code>/* Options: Keywords (auto, contain, cover), units, percentages */\nmask-size: cover;\n</code></pre>\n</div>\n\n<p>Finally, I can define where a mask starts:</p>\n<pre><code>mask-origin: content-box;\nmask-origin: padding-box;\nmask-origin: border-box;\n</code></pre>\n\nUsing A Mask Image\n<p>Mike’s FAQs page includes an animated illustration of his hero standing at a crossroads. My goal was to separate the shape from its content, allowing me to change the illustration throughout the hero’s journey. So, I created a scalable <code>mask-image</code> which defines the visible area and applied it to the figure element:</p>\n<pre><code>figure {\n  mask-image: url(mask.svg);\n}\n</code></pre>\n\n<p>To ensure the mask matched the illustration’s dimensions, I also set the <code>mask-size</code> to always <code>cover</code> its content:</p>\n<pre><code>figure {\n  mask-size: cover;\n}\n</code></pre>\n\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/12-mask-image.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Try this yourself:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/13-mike-worth-review-page-illustration.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<pre><code>figure {\n  clip-path: ellipse(45% 35% at 50% 50%);\n}\n</code></pre>\n\n<p>However, the hard edges of a clip <code>clip-path</code> don’t create the effect I was aiming to achieve:</p>\n<p>Try this yourself:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/14-layering-multiple-masks.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Finally, to add an extra touch of realism, I added a keyframe animation — which changes the <code>mask-size</code> and creates the effect that the lamp light is flickering — and applied it to the figure:</p>\n<pre><code>@keyframes lamp-flicker {\n  0%, 19.9%, 22%, 62.9%, 64%, 64.9%, 70%, 100% { \n    mask-size: 90%, auto;\n  }\n\n  20%, 21.9%, 63%, 63.9%, 65%, 69.9% { \n    mask-size: 90%, 0px;\n  }\n}\n\nfigure {\n  animation: lamp-flicker 3s 3s linear infinite;\n}\n</code></pre>\n\n<p>Try this yourself:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/15-binocular-shaped-mask.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>I started by creating the binocular shape, complete with some viewfinder markers.</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/16-binocular-shape.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>Then, I applied that image as a mask, setting its position, repeat, and size values to place it in the center of the figure element:</p>\n<pre><code>figure {\n  mask-image: url(mask.svg);\n  mask-position: 50% 50%;\n  mask-repeat: no-repeat;\n  mask-size: 85%;\n}\n</code></pre>\n\n<p>Try this yourself:</p>\n<p><img src=\"https://files.smashing.media/articles/smashing-animations-part-2-css-masking-add-extra-dimension/17-masking-animation.png\" style=\"width: 100%; height: auto; display: block;\"></p>\n<p>To let someone know they might’ve reached the end of their adventure, I wanted to ape the zooming-in effect I started this article with:</p>\n<pre><code>&lt;figure&gt;\n  &lt;svg&gt;…&lt;/svg&gt;\n&lt;/figure&gt;\n</code></pre>\n\n<p>I created a circular <code>clip-path</code> and set its default size to <code>75%</code>. Then, I defined the animation keyframes to resize the circle from 75% to 15% before attaching it to my figure with a one-second duration and a three-second delay:</p>\n<pre><code>@keyframes error {\n  0% { clip-path: circle(75%); }\n  100% { clip-path: circle(15%); }\n}\n\nfigure {\n  clip-path: circle(75%);\n  animation: error 1s 3s ease-in forwards;\n}\n</code></pre>\n\n<p>The animation now focuses someone’s attention on the hapless hero, before he sinks lower and lower into the bubblingly hot lava.</p>\n<p>Try this yourself:</p>\n<p>See the Pen <a href=\"https://codepen.io/smashingmag/pen/qEEgdxy\">Mike Worth’s error page [forked]</a> by <a href=\"https://codepen.io/malarkey\">Andy Clarke</a>.</p>\nBringing It All To Life\n<p>Masking adds an <strong>extra dimension to web animation</strong> and makes stories more engaging and someone’s experience more compelling — all while keeping animations efficiently lightweight. Whether you’re revealing content, guiding focus, or adding more depth to a design, masks offer endless creative possibilities. So why not experiment with them in your next project? You might uncover a whole new way to bring your animations to life.</p>\n<p>The end. Or is it? …</p>\n<p>Mike Worth’s website will launch in June 2025, but you can <a href=\"https://codepen.io/collection/YwMKPb\">see examples from this article on CodePen</a> now.</p>",
      "_id": "684f2d90e823d9037acf4518"
    }
  }
]
